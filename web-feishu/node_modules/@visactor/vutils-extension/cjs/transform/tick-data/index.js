"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    void 0 === k2 && (k2 = k);
    var desc = Object.getOwnPropertyDescriptor(m, k);
    desc && !("get" in desc ? !m.__esModule : desc.writable || desc.configurable) || (desc = {
        enumerable: !0,
        get: function() {
            return m[k];
        }
    }), Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    void 0 === k2 && (k2 = k), o[k2] = m[k];
}), __exportStar = this && this.__exportStar || function(m, exports) {
    for (var p in m) "default" === p || Object.prototype.hasOwnProperty.call(exports, p) || __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.ticks = exports.convertDomainToTickData = void 0;

const vscale_1 = require("@visactor/vscale"), continuous_1 = require("./continuous"), linear_1 = require("./discrete/linear"), polar_angle_1 = require("./discrete/polar-angle"), util_1 = require("./util");

Object.defineProperty(exports, "convertDomainToTickData", {
    enumerable: !0,
    get: function() {
        return util_1.convertDomainToTickData;
    }
}), __exportStar(require("./interface"), exports);

const ticks = (scale, op) => {
    if ((0, vscale_1.isContinuous)(scale.type)) return (0, continuous_1.continuousTicks)(scale, op);
    if ((0, vscale_1.isDiscrete)(scale.type)) {
        if ("cartesian" === op.coordinateType) return (0, linear_1.linearDiscreteTicks)(scale, op);
        if ("polar" === op.coordinateType && "angle" === op.axisOrientType) return (0, polar_angle_1.polarAngleAxisDiscreteTicks)(scale, op);
    }
    return (0, util_1.convertDomainToTickData)(scale.domain());
};

exports.ticks = ticks;
//# sourceMappingURL=index.js.map