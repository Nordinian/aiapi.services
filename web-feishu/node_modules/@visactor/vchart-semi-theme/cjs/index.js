"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    void 0 === k2 && (k2 = k);
    var desc = Object.getOwnPropertyDescriptor(m, k);
    desc && !("get" in desc ? !m.__esModule : desc.writable || desc.configurable) || (desc = {
        enumerable: !0,
        get: function() {
            return m[k];
        }
    }), Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    void 0 === k2 && (k2 = k), o[k2] = m[k];
}), __exportStar = this && this.__exportStar || function(m, exports) {
    for (var p in m) "default" === p || Object.prototype.hasOwnProperty.call(exports, p) || __createBinding(exports, m, p);
}, __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
};

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.switchVChartSemiTheme = exports.initVChartSemiTheme = void 0;

const vchart_1 = __importDefault(require("@visactor/vchart")), util_1 = require("./util"), generator_1 = require("./generator"), constants_1 = require("./common/constants");

__exportStar(require("./theme-map"), exports), __exportStar(require("./generator"), exports), 
__exportStar(require("./light"), exports), __exportStar(require("./dark"), exports);

const initVChartSemiTheme = options => {
    const {defaultMode: defaultMode, isWatchingMode: isWatchingMode = !0, isWatchingThemeSwitch: isWatchingThemeSwitch = !1} = null != options ? options : {};
    (0, exports.switchVChartSemiTheme)(!1, defaultMode), isWatchingMode && (0, util_1.observeAttribute)(document.body, constants_1.THEME_MODE_ATTRIBUTE, (() => (0, 
    exports.switchVChartSemiTheme)())), isWatchingThemeSwitch && (0, util_1.observeThemeSwitch)((() => {
        const mode = (0, util_1.getCurrentMode)(), cacheColorScheme = JSON.stringify((0, 
        generator_1.generateVChartSemiTheme)(mode).colorScheme);
        let times = 0;
        const timer = setInterval((() => {
            const theme = (0, generator_1.generateVChartSemiTheme)(mode);
            (times > 50 || cacheColorScheme !== JSON.stringify(theme.colorScheme)) && ((0, exports.switchVChartSemiTheme)(!0, mode, theme), 
            clearInterval(timer)), times++;
        }), 100);
    }));
};

exports.initVChartSemiTheme = initVChartSemiTheme;

const switchVChartSemiTheme = (force, mode, theme) => {
    mode || (mode = (0, util_1.getCurrentMode)());
    const themeName = (0, util_1.generateThemeName)(mode);
    (force || vchart_1.default.ThemeManager.getCurrentTheme() !== themeName) && (force && vchart_1.default.ThemeManager.removeTheme(themeName), 
    vchart_1.default.ThemeManager.themeExist(themeName) || vchart_1.default.ThemeManager.registerTheme(themeName, null != theme ? theme : (0, 
    generator_1.generateVChartSemiTheme)(mode)), vchart_1.default.ThemeManager.setCurrentTheme(themeName));
};

exports.switchVChartSemiTheme = switchVChartSemiTheme;
//# sourceMappingURL=index.js.map