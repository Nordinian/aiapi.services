{"version":3,"sources":["../src/component/crosshair/cartesian.ts"],"names":[],"mappings":"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","file":"cartesian.js","sourcesContent":["import type { Maybe } from '@visactor/vutils';\nimport { isArray, isValid, isValidNumber, isNil } from '@visactor/vutils';\nimport type { IComponentOption } from '../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../interface/type';\nimport type { ICartesianCrosshairSpec } from './interface';\nimport type { ICartesianSeries } from '../../series/interface';\nimport type { BandScale } from '@visactor/vscale';\n// eslint-disable-next-line no-duplicate-imports\nimport { isDiscrete, isContinuous } from '@visactor/vscale';\nimport { LineCrosshair, RectCrosshair, Tag } from '@visactor/vrender-components';\nimport type { IAxisInfo, IBound, IHair } from './base';\n// eslint-disable-next-line no-duplicate-imports\nimport { BaseCrossHair } from './base';\nimport type { IGraphic, IGroup, INode } from '@visactor/vrender-core';\nimport { getDatumByValue, limitTagInBounds } from './util';\nimport { getAxisLabelOffset } from '../axis/util';\nimport type { IAxis } from '../axis/interface';\nimport type { IOrientType, StringOrNumber } from '../../typings';\nimport { isXAxis } from '../axis/cartesian/util/common';\nimport { Factory } from '../../core/factory';\nimport { LayoutType } from './config';\nimport type { IModelSpecInfo } from '../../model/interface';\n\ninterface ICrosshairInfoX {\n  height: number;\n  leftPos: number;\n  rightPos: number;\n  topPos: number;\n  x: number;\n  bottom: { visible: boolean; text: StringOrNumber; dx: number; dy: number };\n  top: { visible: boolean; text: StringOrNumber; dx: number; dy: number };\n  visible: boolean;\n  _isCache?: boolean;\n  axis: IAxis;\n}\ninterface ICrosshairInfoY {\n  width: number;\n  leftPos: number;\n  topPos: number;\n  bottomPos: number;\n  y: number;\n  left: { visible: boolean; text: StringOrNumber; dx: number; dy: number };\n  right: { visible: boolean; text: StringOrNumber; dx: number; dy: number };\n  visible: boolean;\n  _isCache?: boolean;\n  axis: IAxis;\n}\n\n// 1. crosshair保存上次记录的x和y轴dimension\n// 2. 每次交互触发时，首先转化成dimension保存，然后依据dimension计算x和y绘制\n// 3. 如果同方向同时有多个轴，那么同时保存这些轴的数据\n// 4. 如果同方向的轴有多个离散轴，那么直接不显示\n\nexport class CartesianCrossHair<T extends ICartesianCrosshairSpec = ICartesianCrosshairSpec> extends BaseCrossHair<T> {\n  static specKey = 'crosshair';\n\n  static type = ComponentTypeEnum.cartesianCrosshair;\n  type = ComponentTypeEnum.cartesianCrosshair;\n  name: string = ComponentTypeEnum.cartesianCrosshair;\n\n  private _xHair: IHair | undefined;\n  private _yHair: IHair | undefined;\n\n  private _cacheXCrossHairInfo: ICrosshairInfoX | undefined;\n  private _cacheYCrossHairInfo: ICrosshairInfoY | undefined;\n\n  private _xCrosshair: IGroup;\n  private _xTopLabel: Tag;\n  private _xBottomLabel: Tag;\n\n  private _yCrosshair: IGroup;\n  private _yLeftLabel: Tag;\n  private _yRightLabel: Tag;\n\n  private _currValueX: Map<number, { v: StringOrNumber; axis: IAxis }>;\n  private _currValueY: Map<number, { v: StringOrNumber; axis: IAxis }>;\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    const crosshairSpec = chartSpec[this.specKey];\n    if (isNil(crosshairSpec)) {\n      return undefined;\n    }\n    if (!isArray(crosshairSpec)) {\n      if (crosshairSpec.xField || crosshairSpec.yField) {\n        return [\n          {\n            spec: crosshairSpec,\n            specPath: [this.specKey],\n            type: ComponentTypeEnum.cartesianCrosshair\n          }\n        ];\n      }\n      return undefined;\n    }\n    const specInfos: IModelSpecInfo[] = [];\n    crosshairSpec.forEach((s: ICartesianCrosshairSpec, i: number) => {\n      if (s.xField || s.yField) {\n        specInfos.push({\n          spec: s,\n          specIndex: i,\n          specPath: [this.specKey, i],\n          type: ComponentTypeEnum.cartesianCrosshair\n        });\n      }\n    });\n    return specInfos;\n  }\n\n  constructor(spec: T, options: IComponentOption) {\n    super(spec, options);\n    this._currValueX = new Map();\n    this._currValueY = new Map();\n  }\n\n  protected _showDefaultCrosshairBySpec() {\n    const { xField, yField } = this._spec as ICartesianCrosshairSpec;\n    if (xField?.visible && xField.defaultSelect) {\n      const { axisIndex, datum } = xField.defaultSelect;\n      this._defaultCrosshair(axisIndex, datum, LayoutType.VERTICAL);\n    }\n    if (yField?.visible && yField.defaultSelect) {\n      const { axisIndex, datum } = yField.defaultSelect;\n      this._defaultCrosshair(axisIndex, datum, LayoutType.HORIZONTAL);\n    }\n  }\n\n  private _defaultCrosshair(axisIndex: number, datum: StringOrNumber, tag: number) {\n    const axis = this._option.getComponentsByKey('axes').find(c => c.getSpecIndex() === axisIndex) as IAxis;\n    if (!axis) {\n      return;\n    }\n    // 横轴\n    if (tag === LayoutType.VERTICAL) {\n      this._currValueX.clear();\n      this._currValueX.set(axisIndex, { axis, v: datum });\n    } else {\n      this._currValueY.clear();\n      this._currValueY.set(axisIndex, { axis, v: datum });\n    }\n    this.layoutByValue(tag);\n  }\n\n  /**\n   * 查找所有落在x和y区域的轴\n   * @param relativeX\n   * @param relativeY\n   */\n  private _findAllAxisContains(relativeX: number, relativeY: number) {\n    const xAxisMap = this._getAxisInfoByField<IAxis>('x');\n    const yAxisMap = this._getAxisInfoByField<IAxis>('y');\n    return {\n      xAxisMap: this._filterAxisByPoint(xAxisMap, relativeX, relativeY),\n      yAxisMap: this._filterAxisByPoint(yAxisMap, relativeX, relativeY)\n    };\n  }\n\n  private _getValueAt(axis: IAxis, p: number): number | string {\n    let value = axis.getScale().invert(p);\n    if (isContinuous(axis.getScale().type) && isValidNumber(+value)) {\n      value = (+value as number).toFixed(2);\n    }\n    return value;\n  }\n\n  /**\n   * clear axis value of crosshair\n   */\n  clearAxisValue() {\n    this._currValueX.clear();\n    this._currValueY.clear();\n  }\n\n  /**\n   * set axis value of crosshair\n   */\n  setAxisValue(v: StringOrNumber, axis: IAxis) {\n    if (isXAxis(axis.getOrient() as unknown as IOrientType)) {\n      this._currValueX.set(axis.getSpecIndex(), {\n        v,\n        axis\n      });\n    } else {\n      this._currValueY.set(axis.getSpecIndex(), {\n        v,\n        axis\n      });\n    }\n  }\n  /**\n   * 根据位置获取所有轴上的value\n   * @param axisMap\n   * @param p\n   * @returns\n   */\n  private _getAllAxisValues(\n    axisMap: IAxisInfo<IAxis>,\n    p: number,\n    currValue: Map<number, { v: StringOrNumber; axis: IAxis }>,\n    vertical: boolean\n  ): boolean {\n    // 首先不能存在两个离散轴\n    let discrete = false;\n    axisMap.forEach(item => {\n      if (isDiscrete(item.axis.getScale().type)) {\n        if (!discrete) {\n          discrete = true;\n        } else {\n          this.enable = false;\n        }\n      }\n    });\n    if (!this.enable) {\n      return false;\n    }\n    // 获取所有的value\n    axisMap.forEach((item, id) => {\n      const axis = item.axis;\n      currValue.set(id, {\n        v: this._getValueAt(\n          axis,\n          p -\n            (vertical\n              ? axis.getLayoutStartPoint().x - this.getLayoutStartPoint().x\n              : axis.getLayoutStartPoint().y - this.getLayoutStartPoint().y)\n        ),\n        axis\n      });\n    });\n    return true;\n  }\n\n  protected _layoutCrosshair(relativeX: number, relativeY: number) {\n    // 找到所有的包含这个点的轴\n    const { xAxisMap, yAxisMap } = this._findAllAxisContains(relativeX, relativeY);\n    if ((xAxisMap && xAxisMap.size === 0) || (yAxisMap && yAxisMap.size === 0)) {\n      if (this.enableRemain) {\n        return;\n      }\n      // 隐藏\n      this.hide();\n      return;\n    }\n    // 删除之前的currValue\n    this._currValueX.clear();\n    this._currValueY.clear();\n    // 将数据保存到这个对象中，如果不存在，就直接不执行后续逻辑\n    xAxisMap && xAxisMap.size && this._getAllAxisValues(xAxisMap, relativeX, this._currValueX, true);\n    yAxisMap && yAxisMap.size && this._getAllAxisValues(yAxisMap, relativeY, this._currValueY, false);\n\n    this.layoutByValue(LayoutType.ALL);\n  }\n\n  hide() {\n    // 隐藏\n    this._xCrosshair && this._xCrosshair.hideAll();\n    this._xTopLabel && this._xTopLabel.hideAll();\n    this._xBottomLabel && this._xBottomLabel.hideAll();\n\n    this._yCrosshair && this._yCrosshair.hideAll();\n    this._yLeftLabel && this._yLeftLabel.hideAll();\n    this._yRightLabel && this._yRightLabel.hideAll();\n  }\n\n  layoutByValue(tag: number = LayoutType.ALL) {\n    if (!this.enable) {\n      return;\n    }\n    // 获取axisHelper\n    const series = this._firstSeries<ICartesianSeries>();\n    if (!series) {\n      return;\n    }\n    let xCrossHairInfo: ICrosshairInfoX = {\n      height: 0,\n      leftPos: 0,\n      rightPos: 0,\n      topPos: 0,\n      x: 0,\n      bottom: { visible: false, text: '', dx: 0, dy: 0 },\n      top: { visible: false, text: '', dx: 0, dy: 0 },\n      visible: false,\n      axis: null\n    };\n    let yCrossHairInfo: ICrosshairInfoY = {\n      width: 0,\n      leftPos: 0,\n      topPos: 0,\n      bottomPos: 0,\n      y: 0,\n      left: { visible: false, text: '', dx: 0, dy: 0 },\n      right: { visible: false, text: '', dx: 0, dy: 0 },\n      visible: false,\n      axis: null\n    };\n    // 计算x轴和y轴对应的region区域\n    const getRegionArea = (outRegion: IBound, currentValue: Map<number, { v: StringOrNumber; axis: IAxis }>) => {\n      currentValue.forEach(({ axis }) => {\n        const regions = axis.getRegions();\n        regions.forEach(r => {\n          outRegion.x1 = Math.min(outRegion.x1, r.getLayoutStartPoint().x);\n          outRegion.y1 = Math.min(outRegion.y1, r.getLayoutStartPoint().y);\n          outRegion.x2 = Math.max(outRegion.x2, r.getLayoutStartPoint().x + r.getLayoutRect().width);\n          outRegion.y2 = Math.max(outRegion.y2, r.getLayoutStartPoint().y + r.getLayoutRect().height);\n        });\n      });\n    };\n    // 计算x和y的坐标\n    let x = 0;\n    let y = 0;\n    if (this._currValueX.size) {\n      const item = Array.from(this._currValueX.values())[0];\n      x = item.axis.getScale().scale(item.v) + item.axis.getLayoutStartPoint().x - this.getLayoutStartPoint().x;\n      xCrossHairInfo.axis = item.axis;\n    }\n    if (this._currValueY.size) {\n      const item = Array.from(this._currValueY.values())[0];\n      y = item.axis.getScale().scale(item.v) + item.axis.getLayoutStartPoint().y - this.getLayoutStartPoint().y;\n      yCrossHairInfo.axis = item.axis;\n    }\n\n    xCrossHairInfo.visible = !!this._currValueX.size && Number.isFinite(x);\n    yCrossHairInfo.visible = !!this._currValueY.size && Number.isFinite(y);\n\n    const xRegion = { x1: Infinity, y1: Infinity, x2: -Infinity, y2: -Infinity };\n    const yRegion = { x1: Infinity, y1: Infinity, x2: -Infinity, y2: -Infinity };\n    getRegionArea(xRegion, this._currValueX);\n    getRegionArea(yRegion, this._currValueY);\n\n    let indexWidth;\n    let offsetWidth: number = 0;\n    let valueHeight;\n    let offsetHeight: number = 0;\n    // 计算x轴和y轴的数据，只允许最多一对x和一对y\n    if (this._xHair) {\n      this._currValueX.forEach(({ axis, v }) => {\n        v = v ?? '';\n        const xScale = axis.getScale();\n        if (isDiscrete(xScale.type)) {\n          indexWidth = (xScale as BandScale).bandwidth();\n\n          if (indexWidth === 0 && (xScale as BandScale).step) {\n            offsetWidth = (xScale as BandScale).step();\n          }\n        } else if (isContinuous(xScale.type)) {\n          const fieldX = series.fieldX[0];\n          const fieldX2 = series.fieldX2;\n          const datum = getDatumByValue(series.getViewData().latestData, +v, fieldX, fieldX2);\n          if (datum) {\n            const startX = series.dataToPositionX(datum);\n            if (fieldX2) {\n              indexWidth = Math.abs(startX - series.dataToPositionX1(datum));\n              v = `${datum[fieldX]} ~ ${datum[fieldX2]}`;\n            } else {\n              indexWidth = 1;\n            }\n            x = startX;\n          }\n        }\n        if (this._xHair.label?.visible) {\n          const labelOffset = getAxisLabelOffset(axis.getSpec());\n          if (axis.getOrient() === 'bottom') {\n            xCrossHairInfo.bottom.visible = true;\n            xCrossHairInfo.bottom.text = v;\n            xCrossHairInfo.bottom.dx = 0;\n            xCrossHairInfo.bottom.dy = labelOffset;\n          } else if (axis.getOrient() === 'top') {\n            xCrossHairInfo.top.visible = true;\n            xCrossHairInfo.top.text = v;\n            xCrossHairInfo.top.dx = 0;\n            xCrossHairInfo.top.dy = -labelOffset;\n          }\n        }\n      });\n    }\n\n    if (this._yHair) {\n      this._currValueY.forEach(({ axis, v }) => {\n        v = v ?? '';\n        const yScale = axis.getScale();\n        if (isDiscrete(yScale.type)) {\n          valueHeight = (yScale as BandScale).bandwidth();\n\n          if (valueHeight === 0 && (yScale as BandScale).step) {\n            offsetHeight = (yScale as BandScale).step();\n          }\n        } else if (isContinuous(yScale.type)) {\n          const fieldY = series.fieldY[0];\n          const fieldY2 = series.fieldY2;\n          const datum = getDatumByValue(series.getViewData().latestData, +v, fieldY, fieldY2);\n          if (datum) {\n            const startY = series.dataToPositionY(datum);\n            if (fieldY2) {\n              valueHeight = Math.abs(startY - series.dataToPositionY1(datum));\n              v = `${datum[fieldY]} ~ ${datum[fieldY2]}`;\n            } else {\n              valueHeight = 1;\n            }\n            y = startY;\n          }\n        }\n        if (this._yHair.label?.visible) {\n          const labelOffset = getAxisLabelOffset(axis.getSpec());\n          if (axis.getOrient() === 'left') {\n            yCrossHairInfo.left.visible = true;\n            yCrossHairInfo.left.text = v;\n            yCrossHairInfo.left.dx = -labelOffset;\n            yCrossHairInfo.left.dy = 0;\n          } else if (axis.getOrient() === 'right') {\n            yCrossHairInfo.right.visible = true;\n            yCrossHairInfo.right.text = v;\n            yCrossHairInfo.right.dx = labelOffset;\n            yCrossHairInfo.right.dy = 0;\n          }\n        }\n      });\n    }\n\n    if (this.enableRemain && !xCrossHairInfo.visible && isValid(this._cacheXCrossHairInfo)) {\n      xCrossHairInfo = this._cacheXCrossHairInfo;\n    } else {\n      xCrossHairInfo.leftPos = xRegion.x1;\n      xCrossHairInfo.rightPos = xRegion.x2;\n      xCrossHairInfo.topPos = xRegion.y1;\n      xCrossHairInfo.height = xRegion.y2 - xRegion.y1;\n      xCrossHairInfo.x = x + this.getLayoutStartPoint().x;\n      if (this._xHair?.label?.formatMethod) {\n        const { top, bottom } = xCrossHairInfo;\n        bottom.visible && (bottom.text = this._xHair.label.formatMethod(bottom.text, 'bottom') as string);\n        top.visible && (top.text = this._xHair.label.formatMethod(top.text, 'top') as string);\n      }\n    }\n\n    if (this.enableRemain && !yCrossHairInfo.visible && isValid(this._cacheYCrossHairInfo)) {\n      yCrossHairInfo = this._cacheYCrossHairInfo;\n    } else {\n      yCrossHairInfo.leftPos = yRegion.x1;\n      yCrossHairInfo.topPos = yRegion.y1;\n      yCrossHairInfo.bottomPos = yRegion.y2;\n      yCrossHairInfo.width = yRegion.x2 - yRegion.x1;\n      yCrossHairInfo.y = y + this.getLayoutStartPoint().y;\n      if (this._yHair?.label?.formatMethod) {\n        const { left, right } = yCrossHairInfo;\n        left.visible && (left.text = this._yHair.label.formatMethod(left.text, 'left') as string);\n        right.visible && (right.text = this._yHair.label.formatMethod(right.text, 'right') as string);\n      }\n    }\n\n    if (tag) {\n      LayoutType.HORIZONTAL && this._layoutHorizontal(yCrossHairInfo, valueHeight ?? 0, offsetHeight);\n      LayoutType.VERTICAL && this._layoutVertical(xCrossHairInfo, indexWidth ?? 0, offsetWidth);\n    }\n\n    if (this.enableRemain) {\n      this._cacheXCrossHairInfo = { ...xCrossHairInfo, _isCache: true };\n      this._cacheYCrossHairInfo = { ...yCrossHairInfo, _isCache: true };\n    }\n  }\n\n  private _layoutVertical(crosshairInfo: ICrosshairInfoX, bandWidth: number, offsetWidth: number) {\n    if ((crosshairInfo._isCache && this.enableRemain) || !this._xHair) {\n      return;\n    }\n\n    const { x, topPos, height, top, bottom, visible } = crosshairInfo;\n\n    if (visible) {\n      // 外部设置的size\n      const type = this._xHair.type;\n      let positionAttribute;\n      if (type === 'line') {\n        positionAttribute = {\n          start: { x: x + bandWidth / 2, y: topPos },\n          end: { x: x + bandWidth / 2, y: topPos + height }\n        };\n      } else if (type === 'rect') {\n        const extend = this._getRectSize(this._xHair, bandWidth, crosshairInfo.axis);\n        const { leftPos, rightPos } = crosshairInfo;\n\n        positionAttribute = {\n          start: { x: Math.max(x - extend / 2 - offsetWidth / 2, leftPos), y: topPos },\n          end: { x: Math.min(x + bandWidth + extend / 2 + offsetWidth / 2, rightPos), y: topPos + height }\n        };\n      }\n      this._updateCrosshair('x', type, positionAttribute);\n      // 文本\n      if (top.visible) {\n        const updateAttrs = {\n          x: x + bandWidth / 2,\n          y: topPos,\n          ...top,\n          ...this._xHair.label,\n          textStyle: {\n            ...this._xHair.label?.textStyle,\n            textAlign: 'center',\n            textBaseline: 'bottom'\n          },\n          zIndex: this.labelZIndex\n        };\n        this._updateCrosshairLabel(this._xTopLabel, updateAttrs, label => {\n          label.name = 'crosshair-x-top-label';\n          this._xTopLabel = label;\n        });\n      } else {\n        this._xTopLabel && this._xTopLabel.hideAll();\n      }\n\n      if (bottom.visible) {\n        const updateAttrs = {\n          x: x + bandWidth / 2,\n          y: topPos + height,\n          ...bottom,\n          ...this._xHair.label,\n          textStyle: {\n            ...this._xHair.label?.textStyle,\n            textAlign: 'center',\n            textBaseline: 'top'\n          },\n          zIndex: this.labelZIndex\n        };\n        this._updateCrosshairLabel(this._xBottomLabel, updateAttrs, label => {\n          label.name = 'crosshair-x-bottom-label';\n          this._xBottomLabel = label;\n        });\n      } else {\n        this._xBottomLabel && this._xBottomLabel.hideAll();\n      }\n    }\n  }\n\n  private _layoutHorizontal(crosshairInfo: ICrosshairInfoY, bandHeight: number, offsetHeight: number) {\n    if ((crosshairInfo._isCache && this.enableRemain) || !this._yHair) {\n      return;\n    }\n    const { leftPos, width, y, left, right, visible } = crosshairInfo;\n    if (visible) {\n      const type = this._yHair.type;\n      let positionAttribute;\n      if (type === 'line') {\n        positionAttribute = {\n          start: { x: leftPos, y: y + bandHeight / 2 },\n          end: { x: leftPos + width, y: y + bandHeight / 2 }\n        };\n      } else if (type === 'rect') {\n        const extend = this._getRectSize(this._yHair, bandHeight, crosshairInfo.axis);\n        const { topPos, bottomPos } = crosshairInfo;\n\n        positionAttribute = {\n          start: { x: leftPos, y: Math.max(y - extend / 2 - offsetHeight / 2, topPos) },\n          end: { x: leftPos + width, y: Math.min(y + bandHeight + extend / 2 + offsetHeight / 2, bottomPos) }\n        };\n      }\n      this._updateCrosshair('y', type, positionAttribute);\n\n      // 文本\n      if (left.visible) {\n        const updateAttrs = {\n          x: leftPos,\n          y: y + bandHeight / 2,\n          ...left,\n          ...this._yHair.label,\n          textStyle: {\n            ...this._yHair.label?.textStyle,\n            textAlign: 'right',\n            textBaseline: 'middle'\n          },\n          zIndex: this.labelZIndex\n        };\n\n        this._updateCrosshairLabel(this._yLeftLabel, updateAttrs, label => {\n          label.name = 'crosshair-y-left-label';\n          this._yLeftLabel = label;\n        });\n      } else {\n        this._yLeftLabel && this._yLeftLabel.hideAll();\n      }\n\n      if (right.visible) {\n        const updateAttrs = {\n          x: leftPos + width,\n          y: y + bandHeight,\n          ...right,\n          ...this._yHair.label,\n          textStyle: {\n            ...this._yHair.label?.textStyle,\n            textAlign: 'left',\n            textBaseline: 'middle'\n          },\n          zIndex: this.labelZIndex\n        };\n        this._updateCrosshairLabel(this._yRightLabel, updateAttrs, label => {\n          label.name = 'crosshair-y-right-label';\n          this._yRightLabel = label;\n        });\n      } else {\n        this._yRightLabel && this._yRightLabel.hideAll();\n      }\n    }\n  }\n\n  private _getRectSize(hair: IHair, bandSize: number, axis: IAxis) {\n    // 外部设置的size\n    let extend = 0;\n    if (hair.style?.sizePercent) {\n      extend = (hair.style.sizePercent - 1) * bandSize;\n    } else if (typeof hair.style?.size === 'number') {\n      extend = hair.style.size - bandSize;\n    } else if (typeof hair.style?.size === 'function') {\n      const axisRect = axis.getLayoutRect();\n      extend = hair.style.size(axisRect, axis) - bandSize;\n    }\n\n    return extend;\n  }\n\n  protected _parseFieldInfo() {\n    const { xField, yField } = this._spec as ICartesianCrosshairSpec;\n    if (xField && xField.visible) {\n      this._xHair = this._parseField(xField, 'xField');\n    }\n    if (yField && yField.visible) {\n      this._yHair = this._parseField(yField, 'yField');\n    }\n  }\n\n  private _updateCrosshair(dim: string, type: string, attributes: any) {\n    const container = this.getContainer();\n    let crosshair;\n    let style;\n    if (dim === 'x') {\n      crosshair = this._xCrosshair;\n      style = this._xHair.style;\n    } else {\n      crosshair = this._yCrosshair;\n      style = this._yHair.style;\n    }\n    if (crosshair) {\n      crosshair.setAttributes(attributes);\n    } else {\n      // 创建\n      if (type === 'line') {\n        crosshair = new LineCrosshair({\n          ...attributes,\n          lineStyle: style,\n          zIndex: this.gridZIndex + 1, // 样式优化：线盖在面上\n          disableTriggerEvent: this._option.disableTriggerEvent\n        });\n      } else if (type === 'rect') {\n        crosshair = new RectCrosshair({\n          ...attributes,\n          rectStyle: style,\n          zIndex: this.gridZIndex,\n          disableTriggerEvent: this._option.disableTriggerEvent\n        });\n      }\n      // 添加至场景树\n      container?.add(crosshair as unknown as INode);\n      if (dim === 'x') {\n        this._xCrosshair = crosshair as unknown as IGroup;\n      } else {\n        this._yCrosshair = crosshair as unknown as IGroup;\n      }\n    }\n  }\n\n  private _updateCrosshairLabel(label: Tag, attributes: any, callback: (label: Tag) => void) {\n    const container = this.getContainer();\n    if (label) {\n      label.setAttributes(attributes);\n    } else {\n      label = new Tag(attributes);\n      callback(label);\n      container?.add(label as unknown as INode);\n    }\n    limitTagInBounds(label, this._getLimitBounds());\n  }\n\n  protected _getNeedClearVRenderComponents(): IGraphic[] {\n    return [\n      this._xCrosshair,\n      this._xTopLabel,\n      this._xBottomLabel,\n      this._yCrosshair,\n      this._yLeftLabel,\n      this._yRightLabel\n    ] as unknown as IGraphic[];\n  }\n}\n\nexport const registerCartesianCrossHair = () => {\n  Factory.registerComponent(CartesianCrossHair.type, CartesianCrossHair);\n};\n"]}