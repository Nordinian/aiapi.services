{"version":3,"sources":["../src/component/axis/polar/linear-axis.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAC;AAEnC,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAS5C,MAAM,OAAO,eAAuE,SAAQ,SAAY;IAAxG;;QAEE,SAAI,GAAG,iBAAiB,CAAC,eAAe,CAAC;QAI/B,UAAK,GAAY,IAAI,CAAC;QACtB,UAAK,GAAY,IAAI,CAAC;QAEtB,WAAM,GAAG,IAAI,WAAW,EAAE,CAAC;IAgBvC,CAAC;IAbC,eAAe;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAES,UAAU;QAClB,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAES,aAAa,CAAC,IAAmD;QACzE,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;;AAvBM,oBAAI,GAAG,iBAAiB,CAAC,eAAe,CAAC;AAGzC,uBAAO,GAAG,MAAM,CAAC;AAuB1B,KAAK,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;AAExC,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAG,EAAE;IAC1C,YAAY,EAAE,CAAC;IACf,OAAO,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AACnE,CAAC,CAAC","file":"linear-axis.js","sourcesContent":["import { LinearScale } from '@visactor/vscale';\nimport { ComponentTypeEnum } from '../../interface/type';\nimport { PolarAxis } from './axis';\nimport type { IPolarLinearAxisSpec } from './interface/spec';\nimport { LinearAxisMixin } from '../mixin/linear-axis-mixin';\nimport { mixin } from '@visactor/vutils';\nimport { Factory } from '../../../core/factory';\nimport { registerAxis } from '../base-axis';\n\nexport interface PolarLinearAxis<T extends IPolarLinearAxisSpec = IPolarLinearAxisSpec>\n  extends Pick<\n      LinearAxisMixin,\n      'setExtraAttrFromSpec' | 'transformScaleDomain' | 'valueToPosition' | 'computeLinearDomain' | 'setScaleNice'\n    >,\n    PolarAxis<T> {}\n\nexport class PolarLinearAxis<T extends IPolarLinearAxisSpec = IPolarLinearAxisSpec> extends PolarAxis<T> {\n  static type = ComponentTypeEnum.polarLinearAxis;\n  type = ComponentTypeEnum.polarLinearAxis;\n\n  static specKey = 'axes';\n\n  protected _zero: boolean = true;\n  protected _nice: boolean = true;\n\n  protected _scale = new LinearScale();\n  protected declare _groupScales: LinearScale[];\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    this.setExtraAttrFromSpec();\n  }\n\n  protected initScales() {\n    super.initScales();\n    this.setScaleNice();\n  }\n\n  protected computeDomain(data: { min: number; max: number; values: any[] }[]): number[] {\n    return this.computeLinearDomain(data);\n  }\n}\n\nmixin(PolarLinearAxis, LinearAxisMixin);\n\nexport const registerPolarLinearAxis = () => {\n  registerAxis();\n  Factory.registerComponent(PolarLinearAxis.type, PolarLinearAxis);\n};\n"]}