{"version":3,"sources":["../src/series/progress/linear/linear.ts"],"names":[],"mappings":"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","file":"linear.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { CartesianSeries } from '../../cartesian/cartesian';\nimport type { SeriesMarkMap } from '../../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../../interface/type';\nimport type { IRectMark } from '../../../mark/rect';\nimport type { IGroupMark } from '../../../mark/group';\nimport { valueInScaleRange } from '../../../util/scale';\nimport { AttributeLevel } from '../../../constant';\nimport type { Datum, Maybe } from '../../../typings';\nimport { animationConfig, userAnimationConfig } from '../../../animation/utils';\nimport {\n  registerLinearProgressAnimation,\n  type ILinearProgressAnimationParams,\n  type LinearProgressAppearPreset\n} from './animation';\nimport type { ILinearProgressSeriesSpec, ILinearProgressSeriesTheme } from './interface';\nimport { LinearProgressSeriesTooltipHelper } from './tooltip-helper';\nimport type { IStateAnimateSpec } from '../../../animation/spec';\nimport { RectMark, registerRectMark } from '../../../mark/rect';\nimport { createRect } from '@visactor/vrender-core';\nimport { linearProgressSeriesMark } from './constant';\nimport { Factory } from '../../../core/factory';\nimport { registerFadeInOutAnimation } from '../../../animation/config';\nimport type { IMark } from '../../../mark/interface';\n\nexport class LinearProgressSeries<\n  T extends ILinearProgressSeriesSpec = ILinearProgressSeriesSpec\n> extends CartesianSeries<T> {\n  static readonly type: string = SeriesTypeEnum.linearProgress;\n  type = SeriesTypeEnum.linearProgress;\n\n  static readonly mark: SeriesMarkMap = linearProgressSeriesMark;\n\n  private _progressMark: IRectMark | null = null;\n  private _trackMark: IRectMark | null = null;\n  private _progressGroupMark: IGroupMark | null = null;\n\n  /**\n   * 为了解决在圆角情况下，在数值较小时，rect绘图效果不好的问题\n   * 1. trackMark的所有样式设置在groupMark上，定位也依靠这个groupMark\n   * 2. progressMark长度固定为整个进度条长度，通过x的偏移体现当前进度\n   *\n   * 为了解决在配置tooltip时，trackMark设置为GroupMark无法绑定数据的问题，\n   * 1. 原本的设置为groupMark的trackMark更名为GroupMark。用来保证在clip效果下progressMark小数据值的绘图效果。\n   * 1. 增加一层设置为rectMark的trackMark，形状大小与GroupMark相同\n   *\n   * 为了解决成组\n   * 给groupMark的path字段赋值为一个rect数组 也就是一个groupMark具有多个以背景条为轮廓的rect的path\n   * trackMark与progressMark使用绝对定位\n   */\n  initMark(): void {\n    this._initProgressGroupMark();\n    this._initTrackMark();\n    this._initProgressMark();\n  }\n\n  initMarkStyle(): void {\n    this._initProgressGroupMarkStyle();\n    this._initTrackMarkStyle();\n    this._initProgressMarkStyle();\n  }\n\n  private _initProgressMark() {\n    this._progressMark = this._createMark(LinearProgressSeries.mark.progress, {\n      isSeriesMark: true,\n      parent: this._progressGroupMark,\n      customShape: this._spec.progress?.customShape\n    }) as IRectMark;\n    return this._progressMark;\n  }\n\n  private _initProgressMarkStyle() {\n    const progressMark = this._progressMark;\n    if (progressMark) {\n      if (this._spec.direction === 'vertical') {\n        const leftPadding = this._spec.progress?.leftPadding ?? 0;\n        const rightPadding = this._spec.progress?.rightPadding ?? 0;\n\n        this.setMarkStyle(\n          progressMark,\n          {\n            x: (datum: Datum) => {\n              return (\n                valueInScaleRange(this.dataToPositionX(datum), this._xAxisHelper?.getScale?.(0)) -\n                this._spec.bandWidth / 2 +\n                leftPadding\n              );\n            },\n            y: (datum: Datum) => valueInScaleRange(this.dataToPositionY(datum), this._yAxisHelper?.getScale?.(0)),\n            height: () => this._yAxisHelper?.dataToPosition([0], { bandPosition: this._bandPosition }),\n            width: this._spec.bandWidth - leftPadding - rightPadding,\n            cornerRadius: this._spec.cornerRadius,\n            fill: this.getColorAttribute()\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      } else {\n        const topPadding = this._spec.progress?.topPadding ?? 0;\n        const bottomPadding = this._spec.progress?.bottomPadding ?? 0;\n\n        this.setMarkStyle(\n          progressMark,\n          {\n            x: (datum: Datum) =>\n              valueInScaleRange(this.dataToPositionX(datum), this._xAxisHelper?.getScale?.(0)) -\n              this._xAxisHelper.dataToPosition([1], { bandPosition: this._bandPosition }),\n            y: (datum: Datum) => {\n              return (\n                valueInScaleRange(this.dataToPositionY(datum), this._yAxisHelper?.getScale?.(0)) -\n                this._spec.bandWidth / 2 +\n                topPadding\n              );\n            },\n            height: this._spec.bandWidth - topPadding - bottomPadding,\n            width: () => this._xAxisHelper?.dataToPosition([1], { bandPosition: this._bandPosition }),\n            cornerRadius: this._spec.cornerRadius,\n            fill: this.getColorAttribute()\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      }\n      this._trigger.registerMark(progressMark);\n    }\n  }\n\n  private _initTrackMark() {\n    this._trackMark = this._createMark(LinearProgressSeries.mark.track, {\n      parent: this._progressGroupMark,\n      customShape: this._spec.track?.customShape\n    }) as IRectMark;\n    return this._trackMark;\n  }\n\n  private _initTrackMarkStyle() {\n    const trackMark = this._trackMark;\n    if (trackMark) {\n      if (this._spec.direction === 'vertical') {\n        this.setMarkStyle(\n          trackMark,\n          {\n            x: (datum: any) => {\n              return (\n                valueInScaleRange(this.dataToPositionX(datum), this._xAxisHelper?.getScale?.(0)) -\n                this._spec.bandWidth / 2\n              );\n            },\n            y: 0,\n            width: this._spec.bandWidth,\n            height: () => this._scaleY.range()[0],\n            cornerRadius: this._spec.cornerRadius\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      } else {\n        this.setMarkStyle(\n          trackMark,\n          {\n            x: 0,\n            y: (datum: any) => {\n              return (\n                valueInScaleRange(this.dataToPositionY(datum), this._yAxisHelper?.getScale?.(0)) -\n                this._spec.bandWidth / 2\n              );\n            },\n            height: this._spec.bandWidth,\n            width: () => this._scaleX.range()[1],\n            cornerRadius: this._spec.cornerRadius\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      }\n      this._trigger.registerMark(trackMark);\n    }\n  }\n\n  private _initProgressGroupMark() {\n    // FIXME: disable group mark layout to prevent reevaluate after layout end\n    this._progressGroupMark = this._createMark(LinearProgressSeries.mark.group, {\n      skipBeforeLayouted: false\n    }) as IGroupMark;\n    return this._progressGroupMark;\n  }\n\n  private _initProgressGroupMarkStyle() {\n    const groupMark = this._progressGroupMark;\n    groupMark.setZIndex(this.layoutZIndex);\n    groupMark.created();\n\n    this.setMarkStyle(\n      groupMark,\n      {\n        clip: true,\n        x: 0,\n        y: 0,\n        path: () => {\n          const rectPaths: any[] = [];\n          this._rawData?.rawData.forEach((datum: any, index: number) => {\n            if (this._spec.direction === 'vertical') {\n              const x =\n                valueInScaleRange(this.dataToPositionX(datum), this._xAxisHelper?.getScale?.(0)) -\n                this._spec.bandWidth / 2;\n              const height = this._scaleY.range()[0];\n\n              rectPaths.push(\n                createRect({\n                  x: x,\n                  y: 0,\n                  height: height,\n                  width: this._spec.bandWidth,\n                  cornerRadius: this._spec.cornerRadius,\n                  fill: true\n                })\n              );\n            } else {\n              const y =\n                valueInScaleRange(this.dataToPositionY(datum), this._yAxisHelper?.getScale?.(0)) -\n                this._spec.bandWidth / 2;\n              const width = this._scaleX.range()[1];\n\n              rectPaths.push(\n                createRect({\n                  x: 0,\n                  y: y,\n                  height: this._spec.bandWidth,\n                  width: width,\n                  cornerRadius: this._spec.cornerRadius,\n                  fill: true\n                })\n              );\n            }\n          });\n          return rectPaths;\n        }\n      },\n      'normal',\n      AttributeLevel.Series\n    );\n    this._progressGroupMark.setInteractive(false);\n  }\n\n  initAnimation() {\n    const animationParams: ILinearProgressAnimationParams = {\n      direction: this.direction\n    };\n\n    const appearPreset = (this._spec?.animationAppear as IStateAnimateSpec<LinearProgressAppearPreset>)?.preset;\n\n    this._progressMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('linearProgress')?.(animationParams, appearPreset),\n        userAnimationConfig(SeriesMarkNameEnum.progress, this._spec, this._markAttributeContext)\n      )\n    );\n\n    this._trackMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('fadeInOut')?.(),\n        userAnimationConfig(SeriesMarkNameEnum.track, this._spec, this._markAttributeContext)\n      )\n    );\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new LinearProgressSeriesTooltipHelper(this);\n    this._progressMark && this._tooltipHelper.activeTriggerSet.mark.add(this._progressMark);\n    this._trackMark && this._tooltipHelper.activeTriggerSet.mark.add(this._trackMark);\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._progressMark];\n  }\n}\n\nexport const registerLinearProgressSeries = () => {\n  registerRectMark();\n  registerLinearProgressAnimation();\n  registerFadeInOutAnimation();\n  Factory.registerSeries(LinearProgressSeries.type, LinearProgressSeries);\n};\n"]}