{"version":3,"sources":["../src/series/bar/bar.ts"],"names":[],"mappings":"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","file":"bar.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { isContinuous } from '@visactor/vscale';\nimport { Direction } from '../../typings/space';\nimport { CartesianSeries } from '../cartesian/cartesian';\nimport type { IMark, IMarkProgressiveConfig } from '../../mark/interface';\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport { AttributeLevel } from '../../constant';\nimport type { Datum, DirectionType } from '../../typings';\nimport { valueInScaleRange } from '../../util/scale';\nimport { getRegionStackGroup } from '../../util/data';\nimport { getActualNumValue } from '../../util/space';\nimport { registerBarAnimation, type BarAppearPreset, type IBarAnimationParams } from './animation';\nimport { animationConfig, shouldMarkDoMorph, userAnimationConfig } from '../../animation/utils';\nimport type { IBarSeriesSpec } from './interface';\nimport type { IAxisHelper } from '../../component/axis/cartesian/interface';\nimport type { IRectMark } from '../../mark/rect';\nimport type { IModelInitOption } from '../../model/interface';\nimport type { ITextMark } from '../../mark/text';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport { registerRectMark } from '../../mark/rect';\nimport { array, isValid, last } from '@visactor/vutils';\nimport { barSeriesMark } from './constant';\nimport { stackWithMinHeight } from '../util/stack';\nimport { Factory } from '../../core/factory';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { SeriesData } from '../base/series-data';\nimport { DataView } from '@visactor/vdataset';\nimport { addVChartProperty } from '../../data/transforms/add-property';\nimport { addDataKey, initKeyMap } from '../../data/transforms/data-key';\nimport { registerSampleTransform } from '@visactor/vgrammar-core';\nimport { getGroupAnimationParams } from '../util/utils';\nimport { BarSeriesSpecTransformer } from './bar-transformer';\nimport { RECT_X, RECT_X1, RECT_Y, RECT_Y1 } from '../base/constant';\n\nexport const DefaultBandWidth = 6; // 默认的bandWidth，避免连续轴没有bandWidth\n\nexport class BarSeries<T extends IBarSeriesSpec = IBarSeriesSpec> extends CartesianSeries<T> {\n  static readonly type: string = SeriesTypeEnum.bar;\n  type = SeriesTypeEnum.bar;\n  protected _barMarkName: SeriesMarkNameEnum = SeriesMarkNameEnum.bar;\n  protected _barMarkType: MarkTypeEnum = MarkTypeEnum.rect;\n\n  static readonly mark: SeriesMarkMap = barSeriesMark;\n  static readonly transformerConstructor = BarSeriesSpecTransformer as any;\n  readonly transformerConstructor = BarSeriesSpecTransformer;\n\n  protected _supportStack: boolean = true;\n  protected _bandPosition = 0;\n  protected _barMark!: IRectMark;\n  protected _barBackgroundMark!: IRectMark;\n\n  protected _barBackgroundViewData: SeriesData;\n\n  initMark(): void {\n    const progressive = {\n      progressiveStep: this._spec.progressiveStep,\n      progressiveThreshold: this._spec.progressiveThreshold,\n      large: this._spec.large,\n      largeThreshold: this._spec.largeThreshold\n    };\n\n    this._initBarBackgroundMark(progressive);\n\n    this._barMark = this._createMark(\n      {\n        ...BarSeries.mark.bar,\n        name: this._barMarkName,\n        type: this._barMarkType\n      },\n      {\n        morph: shouldMarkDoMorph(this._spec, this._barMarkName),\n        defaultMorphElementKey: this.getDimensionField()[0],\n        groupKey: this._seriesField,\n        isSeriesMark: true,\n        progressive,\n        customShape: this._spec.bar?.customShape\n      }\n    ) as IRectMark;\n  }\n\n  protected _initBarBackgroundMark(progressive?: IMarkProgressiveConfig): void {\n    if (this._spec.barBackground?.visible) {\n      this._barBackgroundMark = this._createMark(BarSeries.mark.barBackground, {\n        dataView: this._barBackgroundViewData.getDataView(),\n        dataProductId: this._barBackgroundViewData.getProductId(),\n        progressive,\n        customShape: this._spec.barBackground?.customShape\n      }) as IRectMark;\n    }\n  }\n\n  initMarkStyle(): void {\n    if (this._barMark) {\n      this.setMarkStyle(\n        this._barMark,\n        {\n          fill: this.getColorAttribute()\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n\n      this._trigger.registerMark(this._barMark);\n    }\n  }\n\n  initLabelMarkStyle(textMark: ITextMark) {\n    if (!textMark) {\n      return;\n    }\n    this.setMarkStyle(textMark, {\n      fill: this.getColorAttribute(),\n      text: (datum: Datum) => {\n        return datum[this.getStackValueField()];\n      },\n      z: this._fieldZ ? this.dataToPositionZ.bind(this) : null\n    });\n  }\n\n  protected initTooltip() {\n    super.initTooltip();\n\n    this._barMark && this._tooltipHelper.activeTriggerSet.mark.add(this._barMark);\n  }\n\n  protected _statisticViewData(): void {\n    super._statisticViewData();\n\n    if (!this._spec.barBackground?.visible) {\n      return;\n    }\n\n    /**\n     * @description 准备 barBackground 数据\n     */\n    const dimensionItems = ([data]: DataView[], op: string) => {\n      let dataCollect: any[] = [{}];\n      const fields = this.getDimensionField();\n      // 将维度轴的所有层级 field 的对应数据做笛卡尔积\n      for (let i = 0; i < fields.length; i++) {\n        const field = fields[i];\n        const values = data.latestData[field]?.values;\n        if (!values?.length) {\n          continue;\n        }\n        const newDataCollect: any[] = [];\n        for (let j = 0; j < values.length; j++) {\n          for (let k = 0; k < dataCollect.length; k++) {\n            newDataCollect.push({\n              ...dataCollect[k],\n              [field]: values[j]\n            });\n          }\n        }\n        dataCollect = newDataCollect;\n      }\n      return dataCollect;\n    };\n\n    registerDataSetInstanceTransform(this._option.dataSet, 'addVChartProperty', addVChartProperty);\n    registerDataSetInstanceTransform(this._option.dataSet, 'dimensionItems', dimensionItems);\n\n    const barBackgroundData = new DataView(this._option.dataSet)\n      .parse([this._viewDataStatistics], {\n        type: 'dataview'\n      })\n      .transform(\n        {\n          type: 'dimensionItems'\n        },\n        false\n      )\n      .transform(\n        {\n          type: 'addVChartProperty',\n          options: {\n            beforeCall: initKeyMap.bind(this),\n            call: addDataKey\n          }\n        },\n        false\n      );\n\n    this._viewDataStatistics?.target.addListener('change', barBackgroundData.reRunAllTransform);\n    this._barBackgroundViewData = new SeriesData(this._option, barBackgroundData);\n  }\n\n  init(option: IModelInitOption): void {\n    super.init(option);\n    if (this.direction === 'vertical') {\n      this._xAxisHelper?.getScale(0).type === 'band' ? this.initBandRectMarkStyle() : this.initLinearRectMarkStyle();\n    } else {\n      this._yAxisHelper?.getScale(0).type === 'band' ? this.initBandRectMarkStyle() : this.initLinearRectMarkStyle();\n    }\n  }\n\n  private _shouldDoPreCalculate() {\n    const region = this.getRegion();\n    return this._stack && region.getSeries().filter(s => s.type === this.type && s.getSpec().barMinHeight).length;\n  }\n\n  private _calculateStackRectPosition(isVertical: boolean) {\n    const region = this.getRegion();\n\n    // @ts-ignore\n    if (region._bar_series_position_calculated) {\n      return;\n    }\n    // @ts-ignore\n    region._bar_series_position_calculated = true; // 因为是 region 内堆叠矩形的计算，所以加一个 hack 标识位用于避免重复计算\n    let start: string;\n    let end: string;\n    let startMethod: string;\n    let endMethod: string;\n    let axisHelper: string;\n    if (isVertical) {\n      start = RECT_Y1;\n      end = RECT_Y;\n      startMethod = '_dataToPosY1';\n      endMethod = '_dataToPosY';\n      axisHelper = '_yAxisHelper';\n    } else {\n      start = RECT_X1;\n      end = RECT_X;\n      startMethod = '_dataToPosX1';\n      endMethod = '_dataToPosX';\n      axisHelper = '_xAxisHelper';\n    }\n\n    // only reCompute bar\n    const stackValueGroup = getRegionStackGroup(region, false, s => s.type === this.type);\n\n    // 按照堆积逻辑 重新计算一次图形的堆积位置并设置到数据上\n    for (const stackValue in stackValueGroup) {\n      for (const key in stackValueGroup[stackValue].nodes) {\n        stackWithMinHeight(stackValueGroup[stackValue].nodes[key], region.getStackInverse(), {\n          isVertical,\n          start,\n          end,\n          startMethod,\n          endMethod,\n          axisHelper\n        });\n      }\n    }\n  }\n\n  private _calculateRectPosition(datum: Datum, isVertical: boolean) {\n    let startMethod: string;\n    let endMethod: string;\n    let axisHelper: string;\n    if (isVertical) {\n      startMethod = '_dataToPosY1';\n      endMethod = '_dataToPosY';\n      axisHelper = '_yAxisHelper';\n    } else {\n      startMethod = '_dataToPosX1';\n      endMethod = '_dataToPosX';\n      axisHelper = '_xAxisHelper';\n    }\n\n    const seriesScale = this[axisHelper].getScale?.(0);\n    const inverse = this[axisHelper].isInverse();\n    const barMinHeight = this._spec.barMinHeight;\n    const y1 = valueInScaleRange(this[startMethod](datum), seriesScale);\n    const y = valueInScaleRange(this[endMethod](datum), seriesScale);\n\n    let height = Math.abs(y1 - y);\n    if (height < barMinHeight) {\n      height = barMinHeight;\n    }\n\n    let flag = 1;\n    if (y < y1) {\n      flag = -1;\n    } else if (y === y1) {\n      flag = isVertical ? (inverse ? 1 : -1) : inverse ? -1 : 1;\n    }\n    return y1 + flag * height;\n  }\n\n  // 用于 bar-like 的位置转换，考虑到 range-column 的方式差异，所以提取出这样的方式\n  protected _dataToPosX(datum: Datum) {\n    return this.dataToPositionX(datum);\n  }\n\n  // 用于 bar-like 的位置转换，考虑到 range-column 的方式差异，所以提取出这样的方式\n  protected _dataToPosX1(datum: Datum) {\n    return this.dataToPositionX1(datum);\n  }\n\n  // 用于 bar-like 的位置转换，考虑到 range-column 的方式差异，所以提取出这样的方式\n  protected _dataToPosY(datum: Datum) {\n    return this.dataToPositionY(datum);\n  }\n\n  // 用于 bar-like 的位置转换，考虑到 range-column 的方式差异，所以提取出这样的方式\n  protected _dataToPosY1(datum: Datum) {\n    return this.dataToPositionY1(datum);\n  }\n\n  initBandRectMarkStyle() {\n    const xScale = this._xAxisHelper?.getScale?.(0);\n    const yScale = this._yAxisHelper?.getScale?.(0);\n\n    // guess the direction which the user want\n    if (this.direction === Direction.horizontal) {\n      this.setMarkStyle(\n        this._barMark,\n        {\n          x: (datum: Datum) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(false);\n              return datum[RECT_X];\n            }\n\n            if (this._spec.barMinHeight) {\n              return this._calculateRectPosition(datum, false);\n            }\n\n            return valueInScaleRange(this._dataToPosX(datum), xScale);\n          },\n          x1: (datum: Datum) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(false);\n              return datum[RECT_X1];\n            }\n\n            return valueInScaleRange(this._dataToPosX1(datum), xScale);\n          },\n          y: (datum: Datum) => this._getPosition(this.direction, datum),\n          height: () => this._getBarWidth(this._yAxisHelper)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    } else {\n      this.setMarkStyle(\n        this._barMark,\n        {\n          x: (datum: Datum) => this._getPosition(this.direction, datum),\n          y: (datum: Datum, ctx, opt, dataView) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(true);\n              return datum[RECT_Y];\n            }\n\n            if (this._spec.barMinHeight) {\n              return this._calculateRectPosition(datum, true);\n            }\n\n            return valueInScaleRange(this._dataToPosY(datum), yScale);\n          },\n          y1: (datum: Datum) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(true);\n              return datum[RECT_Y1];\n            }\n            return valueInScaleRange(this._dataToPosY1(datum), yScale);\n          },\n          width: () => {\n            return this._getBarWidth(this._xAxisHelper);\n          }\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n    this._initBarBackgroundMarkStyle();\n  }\n\n  protected _initBarBackgroundMarkStyle() {\n    if (!this._barBackgroundMark) {\n      return;\n    }\n\n    const xScale = this._xAxisHelper?.getScale?.(0);\n    const yScale = this._yAxisHelper?.getScale?.(0);\n\n    // guess the direction which the user want\n    if (this.direction === Direction.horizontal) {\n      this.setMarkStyle(\n        this._barBackgroundMark,\n        {\n          x: () => {\n            const range = xScale.range();\n            const min = Math.min(range[0], range[range.length - 1]);\n            return min;\n          },\n          x1: () => {\n            const range = xScale.range();\n            const max = Math.max(range[0], range[range.length - 1]);\n            return max;\n          },\n          y: (datum: Datum) => this._getPosition(this.direction, datum),\n          height: () => this._getBarWidth(this._yAxisHelper)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    } else {\n      this.setMarkStyle(\n        this._barBackgroundMark,\n        {\n          x: (datum: Datum) => this._getPosition(this.direction, datum),\n          y: () => {\n            const range = yScale.range();\n            const min = Math.min(range[0], range[range.length - 1]);\n            return min;\n          },\n          y1: () => {\n            const range = yScale.range();\n            const max = Math.max(range[0], range[range.length - 1]);\n            return max;\n          },\n          width: () => {\n            return this._getBarWidth(this._xAxisHelper);\n          }\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  initLinearRectMarkStyle() {\n    const xScale = this._xAxisHelper?.getScale?.(0);\n    const yScale = this._yAxisHelper?.getScale?.(0);\n\n    if (this.direction === Direction.vertical) {\n      this.setMarkStyle(\n        this._barMark,\n        {\n          x: (datum: Datum) => valueInScaleRange(this.dataToPositionX(datum), xScale),\n          x1: (datum: Datum) => valueInScaleRange(this.dataToPositionX1(datum), xScale),\n          y: (datum: Datum, ctx, opt, dataView) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(true);\n              return datum[RECT_Y];\n            }\n\n            if (this._spec.barMinHeight) {\n              return this._calculateRectPosition(datum, true);\n            }\n\n            return valueInScaleRange(this.dataToPositionY(datum), yScale);\n          },\n          y1: (datum: Datum) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(true);\n              return datum[RECT_Y1];\n            }\n            return valueInScaleRange(this.dataToPositionY1(datum), yScale);\n          }\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    } else {\n      this.setMarkStyle(\n        this._barMark,\n        {\n          x: (datum: Datum) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(false);\n\n              return datum[RECT_X];\n            }\n\n            if (this._spec.barMinHeight) {\n              return this._calculateRectPosition(datum, false);\n            }\n\n            return valueInScaleRange(this.dataToPositionX(datum), xScale);\n          },\n          x1: (datum: Datum) => {\n            if (this._shouldDoPreCalculate()) {\n              this._calculateStackRectPosition(false);\n              return datum[RECT_X1];\n            }\n            return valueInScaleRange(this.dataToPositionX1(datum), xScale);\n          },\n          y: (datum: Datum) => valueInScaleRange(this.dataToPositionY(datum), yScale),\n          y1: (datum: Datum) => valueInScaleRange(this.dataToPositionY1(datum), yScale)\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  initAnimation() {\n    // 这个数据在这个时候拿不到，因为组件还没创建结束，统计和筛选也还没添加。\n    // 而且这个值理论上是动态的，建议 监听 viewDataStatisticsUpdate 消息动态更新\n    const barAnimationParams: IBarAnimationParams = {\n      yField: this._fieldY[0],\n      xField: this._fieldX[0],\n      direction: this.direction,\n      growFrom: () =>\n        this.direction === 'horizontal'\n          ? this._xAxisHelper?.getScale(0).scale(0)\n          : this._yAxisHelper?.getScale(0).scale(0)\n    };\n    const appearPreset = (this._spec.animationAppear as IStateAnimateSpec<BarAppearPreset>)?.preset;\n    const animationParams = getGroupAnimationParams(this);\n\n    this._barMark.setAnimationConfig(\n      animationConfig(\n        Factory.getAnimationInKey('bar')?.(barAnimationParams, appearPreset),\n        userAnimationConfig(this._barMarkName, this._spec, this._markAttributeContext),\n        animationParams\n      )\n    );\n  }\n\n  protected _getBarWidth(axisHelper: IAxisHelper) {\n    const hasBarWidth = this._spec.barWidth !== undefined;\n    const bandWidth = axisHelper.getBandwidth?.(this._groups ? this._groups.fields.length - 1 : 0) ?? DefaultBandWidth;\n\n    if (hasBarWidth) {\n      return getActualNumValue(this._spec.barWidth, bandWidth);\n    }\n    const hasBarMinWidth = this._spec.barMinWidth !== undefined;\n    const hasBarMaxWidth = this._spec.barMaxWidth !== undefined;\n    let width = bandWidth;\n    if (hasBarMinWidth) {\n      width = Math.max(width, getActualNumValue(this._spec.barMinWidth, bandWidth));\n    }\n    if (hasBarMaxWidth) {\n      width = Math.min(width, getActualNumValue(this._spec.barMaxWidth, bandWidth));\n    }\n    return width;\n  }\n\n  protected _getPosition(direction: DirectionType, datum: Datum) {\n    let axisHelper;\n    let sizeAttribute;\n    let dataToPosition;\n    if (direction === Direction.horizontal) {\n      axisHelper = this.getYAxisHelper();\n      sizeAttribute = 'height';\n      dataToPosition = this.dataToPositionY.bind(this);\n    } else {\n      axisHelper = this.getXAxisHelper();\n      sizeAttribute = 'width';\n      dataToPosition = this.dataToPositionX.bind(this);\n    }\n    const scale = axisHelper.getScale(0);\n    const size = this._barMark.getAttribute(sizeAttribute, datum) as number;\n    const bandWidth = axisHelper.getBandwidth?.(this._groups ? this._groups.fields.length - 1 : 0) ?? DefaultBandWidth;\n    if (this._groups?.fields?.length > 1 && isValid(this._spec.barGapInGroup)) {\n      // 自里向外计算，沿着第一层分组的中心点进行位置调整\n      const groupFields = this._groups.fields;\n      const barInGroup = array(this._spec.barGapInGroup);\n      let totalWidth: number = 0;\n      let offSet: number = 0;\n\n      for (let index = groupFields.length - 1; index >= 1; index--) {\n        const groupField = groupFields[index];\n        const groupValues = this.getViewDataStatistics()?.latestData?.[groupField]?.values ?? [];\n        const groupCount = groupValues.length;\n        const gap = getActualNumValue(barInGroup[index - 1] ?? last(barInGroup), bandWidth);\n        const i = groupValues.indexOf(datum[groupField]);\n        if (index === groupFields.length - 1) {\n          totalWidth += groupCount * size + (groupCount - 1) * gap;\n          offSet += i * (size + gap);\n        } else {\n          offSet += i * (totalWidth + gap);\n          totalWidth += totalWidth + (groupCount - 1) * gap;\n        }\n      }\n\n      const center = scale.scale(datum[groupFields[0]]) + axisHelper.getBandwidth(0) / 2;\n      return center - totalWidth / 2 + offSet;\n    }\n\n    const continuous = isContinuous(scale.type || 'band');\n    const pos = dataToPosition(datum);\n    return pos + (bandWidth - size) * 0.5 + (continuous ? -bandWidth / 2 : 0);\n  }\n\n  onLayoutEnd(ctx: any): void {\n    super.onLayoutEnd(ctx);\n    const region = this.getRegion();\n    // @ts-ignore\n    region._bar_series_position_calculated = false;\n    if (this._spec.sampling) {\n      this.compile();\n    }\n  }\n\n  compile(): void {\n    super.compile();\n\n    if (this._spec.sampling) {\n      const { width, height } = this._region.getLayoutRect();\n      const samplingTrans = [];\n      const fieldsY = this._fieldY;\n      const fieldsX = this._fieldX;\n\n      samplingTrans.push({\n        type: 'sampling',\n        size: this._direction === Direction.vertical ? width : height,\n        factor: this._spec.samplingFactor,\n        yfield: this._direction === Direction.vertical ? fieldsY[0] : fieldsX[0],\n        groupBy: this._seriesField,\n        mode: this._spec.sampling\n      });\n      this._data.getProduct().transform(samplingTrans);\n    }\n  }\n\n  getDefaultShapeType(): string {\n    return 'square';\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._barMark];\n  }\n\n  compileData() {\n    super.compileData();\n    this._barBackgroundViewData?.compile();\n  }\n\n  fillData() {\n    super.fillData();\n    this._barBackgroundViewData?.getDataView()?.reRunAllTransform();\n  }\n\n  viewDataUpdate(d: DataView): void {\n    super.viewDataUpdate(d);\n    this._barBackgroundViewData?.getDataView()?.reRunAllTransform();\n    this._barBackgroundViewData?.updateData();\n  }\n\n  release() {\n    super.release();\n    this._barBackgroundViewData?.release();\n    this._barBackgroundViewData = null;\n  }\n}\n\nexport const registerBarSeries = () => {\n  registerSampleTransform();\n  registerRectMark();\n  registerBarAnimation();\n  Factory.registerSeries(BarSeries.type, BarSeries);\n};\n"]}