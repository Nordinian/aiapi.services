{"version":3,"sources":["../src/chart/sunburst/sunburst-transformer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAC3D,OAAO,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAC;AAEnD,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAGnD,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,MAAM,OAAO,4BAEX,SAAQ,wBAA2B;IACzB,qBAAqB,CAAC,IAAO;QAErC,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC;QAElF,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAEnG,MAAM,MAAM,mCACP,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KACpC,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,EAE7B,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EAErB,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,QAAQ,EAElB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAEvC,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,UAAU,EAAE,IAAI,CAAC,UAAU,GAC5B,CAAC;QAEF,MAAM,UAAU,GAAG,cAAc,CAAC,QAAQ,CAAC;QAC3C,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;QACzB,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAG1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,MAAM,GAAG,CAAC,iBAAiB,CAAC,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACtB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;oBAChC,OAAO;iBACR;gBACD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACzC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;wBACb,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;qBAC7B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF","file":"sunburst-transformer.js","sourcesContent":["import { isValid, radianToDegree } from '@visactor/vutils';\nimport { BaseChartSpecTransformer } from '../base';\nimport type { ISunburstChartSpec } from './interface';\nimport { POLAR_START_ANGLE } from '../../constant';\nimport type { ISunburstSeriesSpec } from '../../series';\n// eslint-disable-next-line no-duplicate-imports\nimport { SeriesTypeEnum } from '../../series';\n\nexport class SunburstChartSpecTransformer<\n  T extends ISunburstChartSpec = ISunburstChartSpec\n> extends BaseChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T) {\n    // 开始角度默认使用用户配置\n    const startAngle = isValid(spec.startAngle) ? spec.startAngle : POLAR_START_ANGLE;\n    // 结束角度默认使用用户的配置, 若用户没配置, 默认补成整圆.\n    const endAngle = isValid(spec.endAngle) ? spec.endAngle : startAngle + radianToDegree(Math.PI * 2);\n\n    const series: ISunburstSeriesSpec = {\n      ...super._getDefaultSeriesSpec(spec),\n      categoryField: spec.categoryField,\n      valueField: spec.valueField,\n      seriesField: spec.seriesField,\n\n      centerX: spec.centerX,\n      centerY: spec.centerY,\n      offsetX: spec.offsetX,\n      offsetY: spec.offsetY,\n\n      startAngle: startAngle,\n      endAngle: endAngle,\n\n      innerRadius: spec.innerRadius,\n      outerRadius: spec.outerRadius,\n      gap: spec.gap,\n      labelLayout: spec.labelLayout,\n      label: spec.label,\n      labelAutoVisible: spec.labelAutoVisible,\n\n      drill: spec.drill,\n      drillField: spec.drillField\n    };\n\n    const seriesType = SeriesTypeEnum.sunburst;\n    series.type = seriesType;\n    series[seriesType] = spec[seriesType];\n\n    return series;\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n\n    /* 处理 series 配置 */\n    const defaultSeriesSpec = this._getDefaultSeriesSpec(spec);\n    if (!spec.series || spec.series.length === 0) {\n      spec.series = [defaultSeriesSpec];\n    } else {\n      spec.series.forEach(s => {\n        if (!this._isValidSeries(s.type)) {\n          return;\n        }\n        Object.keys(defaultSeriesSpec).forEach(k => {\n          if (!(k in s)) {\n            s[k] = defaultSeriesSpec[k];\n          }\n        });\n      });\n    }\n  }\n}\n"]}