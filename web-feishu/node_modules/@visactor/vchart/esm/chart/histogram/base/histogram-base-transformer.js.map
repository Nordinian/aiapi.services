{"version":3,"sources":["../src/chart/histogram/base/histogram-base-transformer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,6BAA6B,EAAE,MAAM,iBAAiB,CAAC;AAGhE,MAAM,OAAO,iCAAiE,SAAQ,6BAAgC;IACpH,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAA8B,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;IAChF,CAAC;IAES,qBAAqB,CAAC,IAAO;QACrC,uCACK,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KACpC,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EACtB,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EACtB,YAAY,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,IAChC;IACJ,CAAC;CACF","file":"histogram-base-transformer.js","sourcesContent":["import type { ICartesianAxisCommonSpec } from '../../../component/axis';\nimport { CartesianChartSpecTransformer } from '../../cartesian';\nimport type { IHistogramChartSpec } from '../interface';\n\nexport class BaseHistogramChartSpecTransformer<T extends IHistogramChartSpec> extends CartesianChartSpecTransformer<T> {\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    spec.axes.forEach((axis: ICartesianAxisCommonSpec) => (axis.type = 'linear'));\n  }\n\n  protected _getDefaultSeriesSpec(spec: T): any {\n    return {\n      ...super._getDefaultSeriesSpec(spec),\n      x2Field: spec?.x2Field,\n      y2Field: spec?.y2Field,\n      barMinHeight: spec?.barMinHeight\n    };\n  }\n}\n"]}