{"version":3,"sources":["../src/chart/range-column/range-column-transformer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,6BAA6B,EAAE,MAAM,cAAc,CAAC;AAC7D,OAAO,EAAE,oCAAoC,EAAE,MAAM,SAAS,CAAC;AAG/D,MAAM,OAAO,+BAEX,SAAQ,6BAAgC;IAC9B,qBAAqB,CAAC,IAAO;;QACrC,MAAM,MAAM,mCACP,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KACpC,aAAa,EAAG,IAA8B,CAAC,aAAa,EAC5D,aAAa,EAAG,IAA8B,CAAC,aAAa,EAC5D,YAAY,EAAG,IAA8B,CAAC,YAAY,GAC3D,CAAC;QACF,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACtB,IAAI,IAAI,CAAC,SAAS,iBAAyB,EAAE;YAC3C,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;aAAM;YACL,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,oCAAoC,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF","file":"range-column-transformer.js","sourcesContent":["import { Direction } from '../../typings';\nimport { CartesianChartSpecTransformer } from '../cartesian';\nimport { setDefaultCrosshairForCartesianChart } from '../util';\nimport type { IRangeColumnChartSpec } from './interface';\n\nexport class RangeColumnChartSpecTransformer<\n  T extends IRangeColumnChartSpec = IRangeColumnChartSpec\n> extends CartesianChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    const series: any = {\n      ...super._getDefaultSeriesSpec(spec),\n      barGapInGroup: (spec as IRangeColumnChartSpec).barGapInGroup,\n      barBackground: (spec as IRangeColumnChartSpec).barBackground,\n      barMinHeight: (spec as IRangeColumnChartSpec).barMinHeight\n    };\n    series.bar = spec.bar;\n    if (spec.direction === Direction.horizontal) {\n      series.xField = spec.xField ?? [spec.minField, spec.maxField];\n    } else {\n      series.yField = spec.yField ?? [spec.minField, spec.maxField];\n    }\n    return series;\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    setDefaultCrosshairForCartesianChart(spec);\n  }\n}\n"]}