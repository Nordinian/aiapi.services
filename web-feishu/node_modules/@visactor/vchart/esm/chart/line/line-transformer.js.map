{"version":3,"sources":["../src/chart/line/line-transformer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAE,MAAM,cAAc,CAAC;AAC7D,OAAO,EAAE,oCAAoC,EAAE,MAAM,SAAS,CAAC;AAG/D,MAAM,OAAO,wBAAmD,SAAQ,6BAAgC;IAC5F,qBAAqB,CAAC,IAAO;;QACrC,uCACK,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KACpC,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,UAAU,EAAE,MAAA,IAAI,CAAC,UAAU,mCAAI,MAAM,EACrC,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,cAAc,EAAE,IAAI,CAAC,cAAc,EACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,SAAS,EAAE,IAAI,CAAC,SAAS,IACzB;IACJ,CAAC;IACD,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,oCAAoC,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF","file":"line-transformer.js","sourcesContent":["import { CartesianChartSpecTransformer } from '../cartesian';\nimport { setDefaultCrosshairForCartesianChart } from '../util';\nimport type { ILineChartSpec } from './interface';\n\nexport class LineChartSpecTransformer<T extends ILineChartSpec> extends CartesianChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: T): any {\n    return {\n      ...super._getDefaultSeriesSpec(spec),\n      point: spec.point,\n      line: spec.line,\n      seriesMark: spec.seriesMark ?? 'line',\n      activePoint: spec.activePoint,\n      sampling: spec.sampling,\n      samplingFactor: spec.samplingFactor,\n      pointDis: spec.pointDis,\n      pointDisMul: spec.pointDisMul,\n      markOverlap: spec.markOverlap,\n      lineLabel: spec.lineLabel\n    };\n  }\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n    setDefaultCrosshairForCartesianChart(spec);\n  }\n}\n"]}