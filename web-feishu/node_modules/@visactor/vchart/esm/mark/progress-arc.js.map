{"version":3,"sources":["../src/mark/progress-arc.ts"],"names":[],"mappings":"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","file":"progress-arc.js","sourcesContent":["import { Factory } from './../core/factory';\nimport { isFunction, isValid } from '@visactor/vutils';\nimport type { DataView } from '@visactor/vdataset';\nimport type { StateValueType } from '../typings/spec';\nimport type { ConvertToMarkStyleSpec, IProgressArcMarkSpec } from '../typings/visual';\nimport type { IMarkRaw, IMarkStateStyle, IMarkStyle } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from './interface/type';\nimport { BaseArcMark } from './arc';\nimport type { IAttributeOpt } from '../compile/mark/interface';\nimport { registerVGrammarArcAnimation } from '../animation/config';\nimport { registerArcGraphic } from '@visactor/vgrammar-core';\n\nexport type IProgressArcMark = IMarkRaw<IProgressArcMarkSpec>;\n\nexport class ProgressArcMark extends BaseArcMark<IProgressArcMarkSpec> implements IProgressArcMark {\n  static readonly type = MarkTypeEnum.arc;\n  static readonly constructorType = MarkTypeEnum.progressArc;\n\n  protected _cacheStateStyle: IMarkStateStyle<IProgressArcMarkSpec> = {};\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<IProgressArcMarkSpec> = {\n      ...super._getDefaultStyle(),\n      innerPadding: 0,\n      outerPadding: 0\n    };\n    return defaultStyle;\n  }\n\n  protected _filterStyle(\n    style: Partial<IMarkStyle<IProgressArcMarkSpec>>,\n    state: StateValueType,\n    level: number,\n    stateStyle = this.stateStyle\n  ): Partial<ConvertToMarkStyleSpec<IProgressArcMarkSpec>> | Partial<IMarkStyle<IProgressArcMarkSpec>> {\n    // 记录 radius 缓存\n    if (isValid(style.innerRadius)) {\n      this.setAttribute(\n        'innerRadius',\n        this._styleConvert<'innerRadius'>(style.innerRadius),\n        state,\n        level,\n        this._cacheStateStyle\n      );\n    }\n    if (isValid(style.outerRadius)) {\n      this.setAttribute(\n        'outerRadius',\n        this._styleConvert<'innerRadius'>(style.outerRadius),\n        state,\n        level,\n        this._cacheStateStyle\n      );\n    }\n\n    const innerPadding = style.innerPadding ?? stateStyle[state]?.innerPadding?.style;\n    const outerPadding = style.outerPadding ?? stateStyle[state]?.outerPadding?.style;\n    const innerRadius =\n      style.innerRadius ?? this._cacheStateStyle[state]?.innerRadius?.style ?? stateStyle[state]?.innerRadius?.style;\n    const outerRadius =\n      style.outerRadius ?? this._cacheStateStyle[state]?.outerRadius?.style ?? stateStyle[state]?.outerRadius?.style;\n\n    if (innerRadius === 0 && outerRadius === 0) {\n      return style;\n    }\n\n    // 情况一：本次改动了 padding\n    const paddingModified =\n      (isValid(style.innerPadding) && isValid(innerRadius)) || (isValid(style.outerPadding) && isValid(outerRadius));\n\n    // 情况二：本次改动了 radius，但是 padding 已经提前设置且不为 0\n    const radiusModified = (isValid(style.innerRadius) && innerPadding) || (isValid(style.outerRadius) && outerPadding);\n\n    // 如果触发任意一种情况，则重新计算 radius\n    if (paddingModified || radiusModified) {\n      const newStyle = Object.assign({}, style);\n\n      if (innerPadding && isValid(innerRadius)) {\n        // 将 innerPadding 应用到 innerRadius\n        if (isFunction(innerRadius)) {\n          newStyle.innerRadius = (item: any, ctx: any, opt?: IAttributeOpt, source?: DataView) => {\n            const result = innerRadius(item, ctx, opt, source) as number;\n            const padding = isFunction(innerPadding)\n              ? (innerPadding(item, ctx, opt, source) as number)\n              : (innerPadding as number);\n            return result + padding;\n          };\n        } else {\n          if (isFunction(innerPadding)) {\n            newStyle.innerRadius = (item: any, ctx: any, opt?: IAttributeOpt, source?: DataView) => {\n              const padding = innerPadding(item, ctx, opt, source) as number;\n              return (innerRadius as number) + padding;\n            };\n          } else {\n            newStyle.innerRadius = (innerRadius as number) + (innerPadding as number);\n          }\n        }\n      }\n\n      if (outerPadding && isValid(outerRadius)) {\n        // 将 outerPadding 应用到 outerRadius\n        if (isFunction(outerRadius)) {\n          newStyle.outerRadius = (item: any, ctx: any, opt?: IAttributeOpt, source?: DataView) => {\n            const result = outerRadius(item, ctx, opt, source) as number;\n            const padding = isFunction(outerPadding)\n              ? (outerPadding(item, ctx, opt, source) as number)\n              : (outerPadding as number);\n            return result - padding;\n          };\n        } else {\n          if (isFunction(outerPadding)) {\n            newStyle.outerRadius = (item: any, ctx: any, opt?: IAttributeOpt, source?: DataView) => {\n              const padding = outerPadding(item, ctx, opt, source) as number;\n              return (outerRadius as number) - padding;\n            };\n          } else {\n            newStyle.outerRadius = (outerRadius as number) - (outerPadding as number);\n          }\n        }\n      }\n\n      return newStyle;\n    }\n\n    return style;\n  }\n}\n\nexport const registerProgressArcMark = () => {\n  registerArcGraphic();\n  registerVGrammarArcAnimation();\n  Factory.registerMark(ProgressArcMark.constructorType, ProgressArcMark);\n};\n"]}