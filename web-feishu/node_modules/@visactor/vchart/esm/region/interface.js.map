{"version":3,"sources":["../src/region/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { IMark } from '../mark/interface';\nimport type { ILayoutModel, IModelConstructor, IModelOption, IModelSpecInfo } from '../model/interface';\nimport type { ISeries, SeriesType } from '../series/interface';\nimport type { CoordinateType } from '../typings/coordinate';\nimport type { IInteraction } from '../interaction/interface';\nimport type { IProjectionSpec } from '../component/geo/interface';\nimport type { ConvertToMarkStyleSpec, IRectMarkSpec } from '../typings/visual';\nimport type { IAnimate } from '../animation/interface';\nimport type { IGroupMark } from '../mark/group';\nimport type { StringOrNumber } from '../typings';\nimport type { ILayoutItemSpec } from '../layout/interface';\n\nexport interface IRegion extends ILayoutModel {\n  animate?: IAnimate;\n  interaction: IInteraction;\n\n  //stack\n  getStackInverse: () => boolean;\n\n  getMaxWidth: () => number | undefined;\n  setMaxWidth: (value: number) => void;\n  getMaxHeight: () => number | undefined;\n  setMaxHeight: (value: number) => void;\n\n  // 系列\n  addSeries: (series: ISeries) => void;\n  removeSeries: (series: ISeries) => void;\n\n  getSeries: (opt?: ISeriesFilter) => ISeries[];\n  getSeriesInName: (name: string) => ISeries;\n  getSeriesInUserId: (userId: string) => ISeries;\n  getSeriesInId: (id: number) => ISeries;\n  getSeriesInType: (type: SeriesType) => ISeries[];\n  getSeriesInCoordinateType: (type: CoordinateType) => ISeries[];\n  getSeriesInDataName: (dataName: string) => ISeries[];\n\n  getMarks: () => IMark[];\n  getGroupMark: () => IGroupMark;\n  getInteractionMark: () => IGroupMark;\n\n  getSpecInfo: () => IRegionSpecInfo;\n}\n\nexport type ISeriesFilter = {\n  name?: string;\n  userId?: StringOrNumber | StringOrNumber[];\n  specIndex?: number | number[];\n  id?: number;\n  type?: string;\n  coordinateType?: CoordinateType;\n  dataName?: string;\n};\n\nexport interface IRegionConstructor extends IModelConstructor {\n  new (spec: IRegionSpec, ctx: IModelOption): IRegion;\n}\n\nexport interface IRegionSpec extends ILayoutItemSpec {\n  id?: StringOrNumber;\n  coordinate?: CoordinateType;\n  style?: ConvertToMarkStyleSpec<IRectMarkSpec>;\n  /**\n   * 堆积时是否逆序\n   * @default false\n   * @since 1.4.0\n   */\n  stackInverse?: boolean;\n}\n\nexport interface IGeoRegionSpec extends IRegionSpec {\n  coordinate?: 'geo';\n  /**\n   * 是否可以拖拽\n   * @default false\n   */\n  roam?: boolean;\n  /**\n   * 数据中的经度字段名\n   */\n  longitudeField?: string;\n  /**\n   * 数据中的纬度字段名\n   */\n  latitudeField?: string;\n  /**\n   * 地理映射配置\n   */\n  projection?: Partial<Omit<IProjectionSpec, 'name'>>;\n  /**\n   * 缩放最大最小倍数限制\n   */\n  zoomLimit?: {\n    min?: number;\n    max?: number;\n  };\n}\n\nexport interface IRegionSpecInfo<T extends IRegionSpec = IRegionSpec> extends IModelSpecInfo {\n  /** model 具体类型 */\n  type: 'region';\n  /** model spec */\n  spec: T;\n  /** 该 region 包含的系列索引 */\n  seriesIndexes?: number[];\n  /** 该 region 挂载的标签组件 */\n  markLabel?: IModelSpecInfo;\n  /** 该 region 挂载的 geoCoordinate 组件 */\n  geoCoordinate?: IModelSpecInfo;\n}\n"]}