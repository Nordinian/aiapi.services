{"version":3,"sources":["../src/chart/base/base-chart.ts"],"names":[],"mappings":"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","file":"base-chart.js","sourcesContent":["import type { IRegionConstructor } from '../../region/interface';\nimport { ChartData } from '../chart-meta/data';\nimport type { ICrossHair } from '../../component/crosshair/interface/spec';\nimport type { IDimensionInfo } from '../../event/events/dimension/interface';\nimport type {\n  Datum,\n  IMarkStateSpec,\n  IVisual,\n  IVisualSpecScale,\n  IRegionQuerier,\n  MaybeArray,\n  IPadding,\n  IRect,\n  StringOrNumber,\n  IChartSpec,\n  IDataValues,\n  ILayoutRect,\n  ILayoutOrientPadding\n} from '../../typings';\nimport type { ILayoutItem, LayoutCallBack } from '../../layout/interface';\nimport { GlobalScale } from '../../scale/global-scale';\nimport type { ILayoutModelState, IModel, IModelOption, IModelSpecInfo, IUpdateSpecResult } from '../../model/interface';\nimport type {\n  IChart,\n  IChartLayoutOption,\n  IChartRenderOption,\n  IChartOption,\n  IChartEvaluateOption,\n  ILayoutParams,\n  DimensionIndexOption,\n  IChartSpecTransformerOption,\n  IChartSpecTransformer\n} from '../interface';\nimport type { ICartesianSeries, ISeries, ISeriesConstructor } from '../../series/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IRegion } from '../../region/interface';\nimport { ComponentTypeEnum } from '../../component/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IComponent, IComponentConstructor } from '../../component/interface';\nimport { MarkTypeEnum, type IMark } from '../../mark/interface';\nimport type { IEvent } from '../../event/interface';\nimport type { DataView } from '@visactor/vdataset';\nimport type { DataSet } from '@visactor/vdataset/es/data-set';\nimport { Factory } from '../../core/factory';\nimport { Event } from '../../event/event';\nimport {\n  isArray,\n  isValid,\n  createID,\n  calcPadding,\n  normalizeLayoutPaddingSpec,\n  array,\n  convertBackgroundSpec\n} from '../../util';\nimport { Stack } from '../stack';\nimport { BaseModel } from '../../model/base-model';\nimport { BaseMark } from '../../mark/base/base-mark';\nimport { DEFAULT_CHART_WIDTH, DEFAULT_CHART_HEIGHT } from '../../constant/base';\nimport type { IParserOptions } from '@visactor/vdataset/es/parser';\nimport type { IBoundsLike } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { has, isFunction, isEmpty, isNil, isString, isEqual } from '@visactor/vutils';\nimport { getDataScheme } from '../../theme/color-scheme/util';\nimport type { IRunningConfig as IMorphConfig, IView } from '@visactor/vgrammar-core';\nimport { CompilableBase } from '../../compile/compilable-base';\nimport type { IStateInfo } from '../../compile/mark/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { ChartEvent, VGRAMMAR_HOOK_EVENT } from '../../constant';\nimport type { IGlobalScale } from '../../scale/interface';\nimport { DimensionEventEnum } from '../../event/events/dimension';\nimport type { ITooltip } from '../../component/tooltip/interface';\nimport type { IRectMark } from '../../mark/rect';\nimport { calculateChartSize, mergeUpdateResult } from '../util';\nimport { isDiscrete } from '@visactor/vscale';\nimport { updateDataViewInData } from '../../data/initialize';\n\nexport class BaseChart<T extends IChartSpec> extends CompilableBase implements IChart {\n  readonly type: string = 'chart';\n  readonly seriesType: string;\n  readonly transformerConstructor: new (option: IChartSpecTransformerOption) => IChartSpecTransformer;\n\n  readonly id: number = createID();\n\n  protected _transformer: IChartSpecTransformer;\n\n  //FIXME: 转换后的 spec 需要声明 ITransformedChartSpec\n  protected _spec: T;\n  getSpec() {\n    return this._spec;\n  }\n  setSpec(s: T) {\n    // TODO 通过spec设置进行图表更新\n    this._spec = s;\n  }\n\n  getOption() {\n    return this._option;\n  }\n\n  protected _regions: IRegion[] = [];\n  // 系列\n  protected _series: ISeries[] = [];\n  // 组件\n  protected _components: IComponent[] = [];\n\n  // 布局\n  protected _layoutFunc: LayoutCallBack;\n  protected _layoutRect: IRect = {\n    x: 0,\n    y: 0,\n    width: DEFAULT_CHART_WIDTH,\n    height: DEFAULT_CHART_HEIGHT\n  };\n  getLayoutRect() {\n    return this._layoutRect;\n  }\n  protected _viewRect: ILayoutRect = {\n    width: DEFAULT_CHART_WIDTH,\n    height: DEFAULT_CHART_HEIGHT\n  };\n  getViewRect() {\n    return this._viewRect;\n  }\n  protected _viewBox: IBoundsLike = {\n    x1: 0,\n    y1: 0,\n    x2: DEFAULT_CHART_WIDTH,\n    y2: DEFAULT_CHART_HEIGHT\n  };\n\n  protected _layoutTag: boolean = true;\n  getLayoutTag() {\n    return this._layoutTag;\n  }\n  setLayoutTag(tag: boolean, morphConfig?: IMorphConfig, reLayout: boolean = true): boolean {\n    this._layoutTag = tag;\n    if (this.getCompiler()?.getVGrammarView()) {\n      this.getCompiler().getVGrammarView().updateLayoutTag();\n      tag && reLayout && this.getCompiler().renderAsync(morphConfig);\n    }\n    return this._layoutTag;\n  }\n\n  // 模块参数\n  protected _modelOption: IModelOption;\n\n  // 全局通道\n  // protected _globalScale: { [key: string]: IBaseScale } = {};\n  protected _globalScale: IGlobalScale;\n\n  // mark & model 的 id 映射\n  protected _idMap: Map<number, IModel | IMark> = new Map();\n\n  protected _event: IEvent;\n  getEvent() {\n    return this._event;\n  }\n\n  // data\n  protected _dataSet: DataSet;\n  protected _chartData: ChartData;\n  get chartData() {\n    return this._chartData;\n  }\n\n  protected declare _option: IChartOption;\n\n  // 模块内的需要动态影像图表的属性\n  readonly state: ILayoutModelState = {\n    layoutUpdateRank: 1\n  };\n\n  // stack\n  protected _stack: Stack;\n  protected _canStack: boolean;\n\n  padding: IPadding = { top: 0, left: 0, right: 0, bottom: 0 };\n  protected _paddingSpec: ILayoutOrientPadding;\n\n  protected _canvasRect: ILayoutRect;\n\n  // background\n  protected _backgroundMark: IRectMark;\n\n  constructor(spec: T, option: IChartOption) {\n    super(option);\n    this._paddingSpec = normalizeLayoutPaddingSpec(spec.padding ?? option.getTheme().padding);\n\n    this._event = new Event(option.eventDispatcher, option.mode);\n    this._dataSet = option.dataSet;\n    this._chartData = new ChartData(this._dataSet, this._option?.onError);\n    this._modelOption = {\n      ...option,\n      mode: this._option.mode,\n      map: this._idMap,\n      getChartLayoutRect: () => this._layoutRect,\n      getChartViewRect: () => this._viewRect,\n      getChart: () => this,\n      globalScale: this._globalScale,\n      onError: this._option?.onError,\n      disableTriggerEvent: this._option?.disableTriggerEvent === true,\n      getSeriesData: this._chartData.getSeriesData.bind(this._chartData)\n    };\n\n    this._spec = spec;\n  }\n\n  created() {\n    this._transformer = new this.transformerConstructor({\n      type: this.type,\n      seriesType: this.seriesType,\n      getTheme: this._option.getTheme,\n      animation: this._option.animation\n    });\n    // data\n    this._chartData.parseData(this._spec.data);\n    // scale\n    this._createGlobalScale();\n    // background\n    this._spec.background && typeof this._spec.background === 'object' && this._createBackground();\n    // 基础内容\n    this._createLayout();\n    // 基于spec 创建元素。\n    // region\n    this._transformer.forEachRegionInSpec(this._spec, this._createRegion.bind(this));\n    // series\n    this._transformer.forEachSeriesInSpec(this._spec, this._createSeries.bind(this));\n    // components\n    this._transformer.forEachComponentInSpec(this._spec, this._createComponent.bind(this), this._option.getSpecInfo());\n  }\n\n  init() {\n    // 元素创建完毕后再执行各元素的初始化 方便各元素能获取到其他模块\n    this._regions.forEach(r => r.init({}));\n    this._series.forEach(s => s.init({}));\n    this._components.forEach(c => c.init({ dataSet: this._dataSet }));\n\n    // event\n    this._initEvent();\n\n    // TODO: to component\n    // stack\n    if (this._canStack) {\n      this._stack = new Stack(this);\n      this._stack.init();\n    }\n    // data flow start\n    this.reDataFlow();\n  }\n\n  reDataFlow() {\n    this._series.forEach(s => s.getRawData()?.markRunning());\n    this._series.forEach(s => s.fillData());\n    this.updateGlobalScaleDomain();\n  }\n\n  onResize(width: number, height: number, reRender: boolean = true): void {\n    const canvasRect = {\n      width,\n      height\n    };\n    this._canvasRect = canvasRect;\n    this._updateLayoutRect(this._option.viewBox);\n    this.setLayoutTag(true, null, reRender);\n  }\n\n  updateViewBox(viewBox: IBoundsLike, reLayout: boolean) {\n    this._option.viewBox = viewBox;\n    this._updateLayoutRect(viewBox);\n    this.setLayoutTag(true, null, reLayout);\n  }\n\n  private _createBackground() {\n    const backgroundStyle = convertBackgroundSpec(this._spec.background);\n    if (backgroundStyle) {\n      this._backgroundMark = Factory.createMark(MarkTypeEnum.group, 'chart-background', {\n        model: this as any,\n        map: this._option.map,\n        getCompiler: this.getCompiler,\n        globalScale: this._globalScale\n      }) as IRectMark;\n      this._backgroundMark.created();\n      this._backgroundMark.setStyle({\n        ...backgroundStyle,\n        x: () => this._viewBox.x1,\n        y: () => this._viewBox.y1,\n        width: () => this._viewBox.x2 - this._viewBox.x1,\n        height: () => this._viewBox.y2 - this._viewBox.y1\n      });\n    }\n  }\n\n  protected _createRegion(constructor: IRegionConstructor, specInfo: IModelSpecInfo) {\n    if (!constructor) {\n      return;\n    }\n\n    const { spec, ...others } = specInfo;\n    const region = new constructor(spec, {\n      ...this._modelOption,\n      ...others\n    });\n    if (region) {\n      region.created();\n      this._regions.push(region);\n    }\n  }\n\n  protected _createSeries(constructor: ISeriesConstructor, specInfo: IModelSpecInfo) {\n    if (!constructor) {\n      return;\n    }\n\n    const { spec, ...others } = specInfo;\n\n    let region: IRegion | undefined;\n    if (isValid(spec.regionId)) {\n      region = this.getRegionsInUserId(spec.regionId);\n    } else if (isValid(spec.regionIndex)) {\n      region = this.getRegionsInIndex([spec.regionIndex])[0];\n    }\n\n    if (!region && !(region = this._regions[0])) {\n      return;\n    }\n\n    const series = new constructor(spec, {\n      ...this._modelOption,\n      ...others,\n      type: spec.type,\n      region,\n      globalScale: this._globalScale,\n      sourceDataList: this._chartData.dataList\n    });\n\n    if (series) {\n      series.created();\n      this._series.push(series);\n      region.addSeries(series);\n    }\n  }\n\n  getAllSeries = (): ISeries[] => {\n    return this._series ?? [];\n  };\n\n  getSeriesById(id: number): ISeries | undefined {\n    return this._series.find(x => x.id === id);\n  }\n\n  protected _createComponent(constructor: IComponentConstructor, specInfo: IModelSpecInfo) {\n    const component = constructor.createComponent(specInfo, {\n      ...this._modelOption,\n      type: constructor.type,\n      getAllRegions: this.getAllRegions,\n      getRegionsInIndex: this.getRegionsInIndex,\n      getRegionsInIds: this.getRegionsInIds,\n      getRegionsInUserIdOrIndex: this.getRegionsInUserIdOrIndex,\n      getAllSeries: this.getAllSeries,\n      getSeriesInIndex: this.getSeriesInIndex,\n      getSeriesInIds: this.getSeriesInIds,\n      getSeriesInUserIdOrIndex: this.getSeriesInUserIdOrIndex,\n      getAllComponents: this.getComponents,\n      getComponentByIndex: this.getComponentByIndex,\n      getComponentByUserId: this.getComponentByUserId,\n      getComponentsByKey: this.getComponentsByKey\n    });\n    if (!component) {\n      return;\n    }\n    component.created();\n    this._components.push(component);\n  }\n\n  getAllComponents(): IComponent[] {\n    return this._components;\n  }\n\n  getAllModels(): IModel[] {\n    return [].concat(this.getAllSeries(), this.getAllComponents(), this.getAllRegions());\n  }\n\n  getModelInFilter(filter: string | { type: string; index: number } | ((model: IModel) => boolean)) {\n    if (isString(filter)) {\n      return this.getAllModels().find(m => m.userId === filter);\n    } else if (isFunction(filter)) {\n      return this.getAllModels().find(m => filter(m));\n    }\n    let index = 0;\n    return this.getAllModels().find(m => {\n      if ((m.specKey ?? m.type) === filter.type) {\n        if (index === filter.index) {\n          return true;\n        }\n        index++;\n      }\n      return false;\n    });\n  }\n\n  private _createLayout() {\n    this._updateLayoutRect(this._option.viewBox);\n    this._initLayoutFunc();\n  }\n\n  setLayout(layout: LayoutCallBack) {\n    // 统一自定义 layout 到 option 中\n    this._option.layout = layout;\n    this._initLayoutFunc();\n  }\n\n  /** 可以通过设置 layout = null 来取消自定义布局。启用spec上的布局配置 */\n  private _initLayoutFunc() {\n    this._layoutFunc = this._option.layout;\n    if (!this._layoutFunc) {\n      // 判断是否使用3d的layout\n      let use3dLayout = false;\n      // 查找是否需要使用3d布局模块\n      if ((this._spec as any).zField || (this._spec.series && this._spec.series.some((s: any) => s.zField))) {\n        use3dLayout = true;\n      }\n      const constructor = Factory.getLayoutInKey(this._spec.layout?.type ?? (use3dLayout ? 'layout3d' : 'base'));\n      if (constructor) {\n        const layout = new constructor(this._spec.layout, {\n          onError: this._option?.onError\n        });\n        this._layoutFunc = layout.layoutItems.bind(layout);\n      }\n    }\n  }\n\n  layout(params: ILayoutParams): void {\n    this._option.performanceHook?.beforeLayoutWithSceneGraph?.();\n    if (this.getLayoutTag()) {\n      this._event.emit(ChartEvent.layoutStart, { chart: this });\n\n      this.onLayoutStart(params);\n      const elements = this.getLayoutElements();\n      this._layoutFunc(this, elements, this._layoutRect, this._viewBox);\n      this._event.emit(ChartEvent.afterLayout, { elements });\n      this.setLayoutTag(false);\n      this.onLayoutEnd(params);\n\n      this._event.emit(ChartEvent.layoutEnd, { chart: this });\n    }\n    this._option.performanceHook?.afterLayoutWithSceneGraph?.();\n  }\n\n  // 通知所有需要通知的元素 onLayout 钩子\n  onLayoutStart(option: IChartLayoutOption) {\n    const elements = this.getAllModels();\n    elements.forEach(element => element.onLayoutStart(this._layoutRect, this._viewRect, option));\n  }\n\n  // 通知所有需要通知的元素 onLayoutEnd 钩子\n  onLayoutEnd(option: IChartLayoutOption) {\n    const elements = this.getAllModels();\n    elements.forEach(element => element.onLayoutEnd(option));\n  }\n\n  onEvaluateEnd(option: IChartEvaluateOption) {\n    const elements = [...this._components, ...this._regions, ...this._series];\n    elements.forEach(element => element.onEvaluateEnd(option));\n  }\n\n  getLayoutElements(): ILayoutItem[] {\n    return this.getAllModels()\n      .map(i => i.layout)\n      .filter(i => !!i);\n  }\n\n  // 区域\n  getRegionsInIndex = (index?: number[]): IRegion[] => {\n    if (!index || index.length === 0) {\n      return [this._regions[0]];\n    }\n    return this._regions.filter((_r, i) => index.includes(i));\n  };\n\n  getAllRegions = () => {\n    return this._regions;\n  };\n\n  getRegionsInIds = (ids: number[]): IRegion[] => {\n    if (!ids) {\n      return [];\n    }\n    return this._regions.filter(r => ids.includes(r.id));\n  };\n\n  getRegionsInQuerier = (region?: MaybeArray<IRegionQuerier>) => {\n    if (region) {\n      return this._regions.filter((r, index) => {\n        return array(region).some(\n          regionFilter =>\n            (isValid(regionFilter.regionId) && regionFilter.regionId === r.userId) || regionFilter.regionIndex === index\n        );\n      });\n    }\n    return this._regions;\n  };\n\n  getRegionsInUserId = (userId: StringOrNumber): IRegion | undefined => {\n    if (!userId) {\n      return undefined;\n    }\n    return this._regions.find(r => r.userId === userId);\n  };\n\n  getRegionsInUserIdOrIndex = (user_ids?: StringOrNumber[], index?: number[]): IRegion[] => {\n    const regions = this.getAllRegions();\n    return regions.filter(r => {\n      if (user_ids?.length) {\n        return r.userId && user_ids.includes(r.userId);\n      } else if (index?.length) {\n        return index.includes(r.getSpecIndex());\n      }\n      return true;\n    });\n  };\n\n  // 模块\n  getComponents = () => {\n    return this._components;\n  };\n\n  // 区域\n  getSeriesInIndex = (index?: number[]): ISeries[] => {\n    if (!index || index.length === 0) {\n      return [this._series[0]];\n    }\n    return this._series.filter((_r, i) => index.includes(i));\n  };\n\n  getSeriesInIds = (ids?: number[]): ISeries[] => {\n    if (!ids) {\n      return [];\n    }\n    return this._series.filter(r => ids.includes(r.id));\n  };\n\n  getSeriesInUserId = (userId: StringOrNumber): ISeries | undefined => {\n    if (!userId) {\n      return undefined;\n    }\n    return this._series.find(r => r.userId === userId);\n  };\n\n  getSeriesInUserIdOrIndex = (user_ids?: StringOrNumber[], index?: number[]): ISeries[] => {\n    const series = this.getAllSeries();\n    return series.filter(s => {\n      if (user_ids?.length) {\n        return s.userId && user_ids.includes(s.userId);\n      } else if (index?.length) {\n        return index.includes(s.getSpecIndex());\n      }\n      return true;\n    });\n  };\n\n  getComponentByIndex = (key: string, index: number) => {\n    const components = this._components.filter(c => (c.specKey || c.type) === key);\n    if (!components || components.length === 0) {\n      return undefined;\n    }\n    return components[index];\n  };\n\n  getComponentsByKey = (key: string) => {\n    return this._components.filter(c => (c.specKey || c.type) === key);\n  };\n\n  getComponentByUserId = (userId: StringOrNumber) => {\n    const component = this._components.find(s => s.userId === userId);\n    if (component) {\n      return component;\n    }\n    return undefined;\n  };\n\n  getModelById(id: number): IModel | undefined {\n    const model = this._idMap.get(id);\n    if (model && model instanceof BaseModel) {\n      return model;\n    }\n    return undefined;\n  }\n\n  getModelByUserId(userId: StringOrNumber): IModel | undefined {\n    // TODO: 考虑通过 map 结构优化获取方式 & 补充所有 model 的寻找方法\n    const series = this._series.find(s => s.userId === userId);\n    if (series) {\n      return series;\n    }\n    const region = this._regions.find(s => s.userId === userId);\n    if (region) {\n      return region;\n    }\n    const component = this._components.find(s => s.userId === userId);\n    if (component) {\n      return component;\n    }\n    return undefined;\n  }\n\n  getAllMarks(): IMark[] {\n    const items = Array.from(this._idMap.values());\n    return items.filter(item => item && item instanceof BaseMark) as IMark[];\n  }\n\n  getMarkById(id: number): IMark | undefined {\n    const mark = this._idMap.get(id);\n    if (mark && mark instanceof BaseMark) {\n      return mark;\n    }\n    return undefined;\n  }\n\n  updateData(id: StringOrNumber, data: unknown, updateGlobalScale: boolean = true, options?: IParserOptions) {\n    const dv = this._dataSet.getDataView(id as string);\n    if (dv) {\n      dv.markRunning();\n      dv.parseNewData(data, options);\n    }\n\n    if (updateGlobalScale) {\n      this.updateGlobalScaleDomain();\n    }\n    this.getAllModels().forEach(model => model.onDataUpdate());\n  }\n\n  updateFullData(data: IDataValues | IDataValues[], updateGlobalScale: boolean = true) {\n    array(data).forEach(d => {\n      const dv = this._dataSet.getDataView(d.id);\n      if (dv) {\n        dv.markRunning();\n      }\n    });\n    array(data).forEach(d => {\n      const dv = this._dataSet.getDataView(d.id);\n      if (dv) {\n        updateDataViewInData(dv, d, true);\n      }\n    });\n    if (updateGlobalScale) {\n      this.updateGlobalScaleDomain();\n    }\n    this.getAllModels().forEach(model => model.onDataUpdate());\n  }\n\n  onRender(option: IChartRenderOption) {\n    // do nothing\n  }\n\n  setCanvasRect(width: number, height: number) {\n    this._canvasRect = { width, height };\n  }\n\n  getCanvasRect(): Omit<IRect, 'x' | 'y'> {\n    if (this._canvasRect) {\n      return this._canvasRect;\n    }\n\n    this._canvasRect = calculateChartSize(this._spec, this._option, {\n      width: DEFAULT_CHART_WIDTH,\n      height: DEFAULT_CHART_HEIGHT\n    });\n\n    return this._canvasRect;\n  }\n\n  getSeriesData(id: StringOrNumber | undefined, index: number | undefined): DataView | undefined {\n    return this._chartData.getSeriesData(id, index);\n  }\n\n  private _transformSpecScale() {\n    const scales: IChartSpec['scales'] = this._spec.scales ?? [];\n    let colorScaleSpec: IVisualSpecScale<any, any> = scales.find(s => s.id === 'color');\n    const colorScheme = this.getColorScheme();\n    if (!colorScaleSpec) {\n      colorScaleSpec = {\n        type: 'ordinal',\n        id: 'color',\n        domain: null,\n        range: null\n      };\n      scales.push(colorScaleSpec);\n      if (this._spec.color) {\n        const colorSpec = this._spec.color as string[] | IVisual<string>;\n\n        // range array\n        if (isArray(colorSpec)) {\n          colorScaleSpec.range = colorSpec;\n        } else {\n          const tempSpec = colorSpec as IVisualSpecScale<any, any>;\n          Object.prototype.hasOwnProperty.call(tempSpec, 'type') && (colorScaleSpec.type = tempSpec.type);\n          Object.prototype.hasOwnProperty.call(tempSpec, 'domain') && (colorScaleSpec.domain = tempSpec.domain);\n          Object.prototype.hasOwnProperty.call(tempSpec, 'range') && (colorScaleSpec.range = tempSpec.range);\n          Object.prototype.hasOwnProperty.call(tempSpec, 'specified') &&\n            (colorScaleSpec.specified = tempSpec.specified);\n        }\n      }\n    }\n    // 如果没有range设置\n    // length === 0 就认为是没有配置，用户配置 color: [] 依然认为是无效配置，启用主题色板\n    if (!colorScaleSpec.range?.length) {\n      colorScaleSpec.range = getDataScheme(colorScheme);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      colorScaleSpec.rangeTheme = true;\n    }\n    return scales;\n  }\n\n  // 全局通道\n  private _createGlobalScale() {\n    this._globalScale = new GlobalScale(this._transformSpecScale(), this);\n    this._modelOption.globalScale = this._globalScale;\n  }\n\n  updateGlobalScaleDomain() {\n    const domainSet = new Set();\n    this._series.forEach(s => {\n      const keys = s.getSeriesKeys();\n      keys && keys.forEach(k => domainSet.add(k));\n    });\n    // domain\n    const domain = Array.from(domainSet);\n    // 如果 global scale 当前没有 domain 的话，就使用这个domain\n    // 整理了目前会影响全局 scale 的逻辑，但是当前这个节点使用这个逻辑可行\n    // 但是考虑到组件也可能会有修改 scale 的逻辑\n    // 增加一个属性设置优先级也许是必须的？\n    this._globalScale.updateScaleDomain(domain);\n  }\n\n  updateGlobalScale(result: IUpdateSpecResult) {\n    mergeUpdateResult(result, this._globalScale.updateSpec(this._transformSpecScale()));\n  }\n\n  updateGlobalScaleTheme() {\n    const colorSpec = this._globalScale.getScaleSpec('color');\n    const colorScheme = this.getColorScheme();\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (colorSpec.rangeTheme) {\n      colorSpec.range = getDataScheme(colorScheme);\n      this._globalScale.getScale('color').range(colorSpec.range);\n    }\n  }\n\n  updateSpec(spec: T) {\n    const result = {\n      change: false,\n      reMake: false,\n      reRender: false,\n      reSize: false,\n      reCompile: false\n    };\n    // 需要重新布局\n    this.setLayoutTag(true, null, false);\n    // 第一版简易逻辑如果配置项出现增删，直接重新创建chart\n    // 如果出现类型不同，同上\n    if (spec.type !== this.type) {\n      result.reMake = true;\n      return result;\n    }\n    // spec set & transformSpec\n    // diff meta length;\n    const currentKeys = Object.keys(this._spec).sort();\n    const nextKeys = Object.keys(spec).sort();\n    if (JSON.stringify(currentKeys) !== JSON.stringify(nextKeys)) {\n      result.reMake = true;\n      return result;\n    }\n    const oldSpec = this._spec;\n    this._spec = spec;\n    // update chart config\n    this.updateChartConfig(result, oldSpec);\n    if (result.reMake) {\n      return result;\n    }\n\n    this.updateGlobalScale(result);\n    if (result.reMake) {\n      return result;\n    }\n    // region 变化\n    this.updateRegionSpec(result);\n    if (result.reMake) {\n      return result;\n    }\n    this.updateComponentSpec(result);\n    if (result.reMake) {\n      return result;\n    }\n    this.updateSeriesSpec(result);\n    if (result.reMake) {\n      return result;\n    }\n    this.updateDataSpec(result);\n    if (result.reMake) {\n      return result;\n    }\n    // ensure that the domain of the scale follows the data change\n    this.updateGlobalScaleDomain();\n    return result;\n  }\n\n  updateChartConfig(result: IUpdateSpecResult, oldSpec: IChartSpec) {\n    // padding;\n    this._paddingSpec = normalizeLayoutPaddingSpec(this._spec.padding ?? this._option?.getTheme().padding);\n\n    // re compute padding & layout\n    this._updateLayoutRect(this._viewBox);\n\n    // background need remake\n    if (!isEqual(this._spec.background, oldSpec.background)) {\n      result.reMake = true;\n    }\n  }\n\n  updateDataSpec(result: IUpdateSpecResult) {\n    if (!this._spec.data) {\n      return;\n    }\n    this._chartData.updateData(this._spec.data, false, true);\n  }\n\n  updateRegionSpec(result: IUpdateSpecResult) {\n    if (!this._spec?.region) {\n      return;\n    }\n    // 长度不同，直接判定为 remake\n    if (this._spec.region.length !== this._regions.length) {\n      result.reMake = true;\n      return;\n    }\n    this._regions.forEach(r => {\n      mergeUpdateResult(result, r.updateSpec(this._spec.region[r.getSpecIndex()]));\n    });\n  }\n\n  updateComponentSpec(result: IUpdateSpecResult) {\n    // 用来检测组件是否有新增\n    const componentCache: {\n      [key in string]: {\n        specCount: number;\n        componentCount: number;\n      };\n    } = {};\n    this._components.forEach(c => {\n      const compSpecKey = c.specKey || c.type;\n      // 每一个组件获取对应的speck\n      const cmpSpec = this._spec[compSpecKey] ?? {};\n      if (isArray(cmpSpec)) {\n        componentCache[compSpecKey] = componentCache[compSpecKey] || {\n          specCount: cmpSpec.length,\n          componentCount: 0\n        };\n        componentCache[compSpecKey].componentCount++;\n        mergeUpdateResult(result, c.updateSpec(cmpSpec[c.getSpecIndex()] ?? {}, cmpSpec));\n      } else {\n        mergeUpdateResult(result, c.updateSpec(cmpSpec));\n      }\n    });\n    for (const key in componentCache) {\n      if (Object.prototype.hasOwnProperty.call(componentCache, key)) {\n        const element = componentCache[key];\n        if (element.componentCount !== element.specCount) {\n          result.reMake = true;\n        }\n      }\n    }\n  }\n\n  updateSeriesSpec(result: IUpdateSpecResult) {\n    // 长度不同，直接判定为 remake\n    if (this._spec.series.length !== this._series.length) {\n      result.reMake = true;\n      return;\n    }\n    this._series.forEach(s => {\n      const spec = this._spec.series[s.getSpecIndex()];\n      mergeUpdateResult(result, s.updateSpec(spec));\n    });\n  }\n\n  getCanvas() {\n    return this.getCompiler()?.getCanvas() ?? null;\n  }\n\n  private _updateLayoutRect(viewBox: IBoundsLike) {\n    const canvasRect = this.getCanvasRect();\n    let viewRect = canvasRect;\n    if (viewBox) {\n      this._viewBox = viewBox;\n      const { x1 = 0, y1 = 0, x2, y2 } = viewBox;\n      viewRect = {\n        width: x2 - x1,\n        height: y2 - y1\n      };\n    } else {\n      this._viewBox = { x1: 0, y1: 0, x2: viewRect.width, y2: viewRect.height };\n    }\n    this._viewRect = viewRect;\n    // resize 时 padding 也应该会发生变化 先计算\n    this.padding = calcPadding(this._paddingSpec, viewRect, viewRect);\n    this._layoutRect.width = viewRect.width - this.padding.left - this.padding.right;\n    this._layoutRect.height = viewRect.height - this.padding.top - this.padding.bottom;\n    this._layoutRect.x = this.padding.left;\n    this._layoutRect.y = this.padding.top;\n\n    this._event.emit(ChartEvent.layoutRectUpdate, {});\n  }\n\n  /** 设置当前全局主题 */\n  setCurrentTheme() {\n    // update chart config\n    this.updateChartConfig({ change: true, reMake: false }, this._spec);\n\n    // 需要重新布局\n    this.setLayoutTag(true, null, false);\n\n    // 设置色板，只设置 colorScale 的 range\n    this.updateGlobalScaleTheme();\n\n    this._regions.forEach(r => r.reInit(r.getSpecInfo().spec));\n    this._series.forEach(s => s.reInit(s.getSpecInfo().spec));\n    this._components.forEach(c => c.reInit(c.getSpecInfo().spec));\n  }\n\n  clear() {\n    // call on recompile & release\n    this.getAllModels().forEach(i => i.clear?.());\n  }\n\n  compile() {\n    this.compileBackground();\n    this.compileLayout();\n    this.compileRegions();\n    this.compileSeries();\n    this.compileComponents();\n  }\n\n  afterCompile() {\n    this.getAllRegions().forEach(r => {\n      r.afterCompile?.();\n    });\n    this.getAllSeries().forEach(s => {\n      s.afterCompile?.();\n    });\n    this.getAllComponents().forEach(c => {\n      c.afterCompile?.();\n    });\n  }\n\n  compileLayout() {\n    const { width, height } = this.getCanvasRect();\n    this.getCompiler().setSize(width, height);\n  }\n\n  compileBackground() {\n    if (!this._backgroundMark) {\n      return;\n    }\n    this._backgroundMark.compile();\n    this._backgroundMark\n      .getProduct()\n      ?.configure({\n        context: {\n          model: this\n        }\n      })\n      .layout(() => {\n        // console.log('region mark layout');\n      });\n  }\n\n  compileRegions() {\n    this._option.performanceHook?.beforeRegionCompile?.();\n    this.getAllRegions().forEach(r => {\n      r.compile();\n    });\n    this._option.performanceHook?.afterRegionCompile?.();\n  }\n\n  compileSeries() {\n    this._option.performanceHook?.beforeSeriesCompile?.();\n    this.getAllSeries().forEach(s => {\n      s.compile();\n    });\n    this._option.performanceHook?.afterSeriesCompile?.();\n  }\n\n  compileComponents() {\n    this._option.performanceHook?.beforeComponentCompile?.();\n    this.getAllComponents().forEach(c => {\n      c.compile();\n    });\n    this._option.performanceHook?.afterComponentCompile?.();\n  }\n\n  release() {\n    /* release 前的处理 */\n    [...this._components, ...this._regions, ...this._series].forEach(m => {\n      m.beforeRelease();\n    });\n\n    /* 开始 release */\n    super.release();\n    // clear event , temporary function of  chart items\n    this.clear();\n\n    [...this._components, ...this._regions, ...this._series].forEach(m => {\n      m.release();\n    });\n    this._components = this._regions = this._series = [];\n    this._spec = {} as any;\n    // FIXME: type lint\n    this._dataSet = this._globalScale = this._layoutFunc = null as unknown as any;\n    this._layoutTag = false;\n    this._idMap.clear();\n  }\n\n  onLayout(srView: IView) {\n    const root = srView.rootMark;\n    this.layout({ group: root, srView });\n  }\n\n  /**\n   * 更新或设置图元状态\n   * @param state 状态筛选器\n   * @param filter 筛选器\n   */\n  updateState(\n    state: Record<string, Omit<IMarkStateSpec<unknown>, 'style'>>,\n    filter?: (series: ISeries, mark: IMark, stateKey: string) => boolean //series + mark 筛选\n  ): void {\n    const seriesArr = this.getAllSeries();\n    for (const key in state) {\n      if (isEmpty(state[key])) {\n        continue;\n      }\n      const stateSpec = state[key];\n      let stateInfo: IStateInfo = { stateValue: key };\n      if (isFunction(stateSpec.filter)) {\n        stateInfo = { filter: stateSpec.filter, ...stateInfo };\n      } else {\n        stateInfo = { ...stateSpec.filter, ...stateInfo };\n      }\n      if (stateSpec.level) {\n        stateInfo.level = stateSpec.level;\n      }\n      seriesArr.forEach(series => {\n        series.getMarks().forEach(m => {\n          if (!m.stateStyle[key]) {\n            return;\n          }\n          if (!filter || filter(series, m, key)) {\n            m.state.changeStateInfo(stateInfo);\n            m.updateMarkState(key);\n          }\n        });\n      });\n    }\n  }\n\n  /**\n   * 更新图元选中状态\n   * @param datum hover 图元数据\n   * @param filter 筛选器 用来筛选系列与mark\n   * @param region region 筛选器\n   */\n  setSelected(\n    datum: MaybeArray<any> | null,\n    filter?: (series: ISeries, mark: IMark) => boolean,\n    region?: IRegionQuerier\n  ): void {\n    this._setStateInDatum(STATE_VALUE_ENUM.STATE_SELECTED, true, datum, filter, region);\n  }\n\n  /**\n   * 更新图元 hover 状态\n   * @param datum hover 图元数据\n   * @param filter 筛选器 用来筛选系列与mark\n   * @param region region 筛选器\n   */\n  setHovered(\n    datum: MaybeArray<Datum> | null,\n    filter?: (series: ISeries, mark: IMark) => boolean,\n    region?: IRegionQuerier\n  ): void {\n    this._setStateInDatum(STATE_VALUE_ENUM.STATE_HOVER, true, datum, filter, region);\n  }\n\n  private _initEvent() {\n    [ChartEvent.dataZoomChange, ChartEvent.scrollBarChange].forEach(event => {\n      this._event.on(event, ({ value }) => {\n        // 非数据筛选的方式，图元不存在增删，可以保持动画效果\n        if (!value.filterData) {\n          return;\n        }\n        this._disableMarkAnimation(['exit', 'update']);\n        const enableMarkAnimate = () => {\n          this._enableMarkAnimation(['exit', 'update']);\n          this._event.off(VGRAMMAR_HOOK_EVENT.AFTER_MARK_RENDER_END, enableMarkAnimate);\n        };\n        this._event.on(VGRAMMAR_HOOK_EVENT.AFTER_MARK_RENDER_END, enableMarkAnimate);\n      });\n    });\n  }\n\n  protected _enableMarkAnimation(states: string | string[]) {\n    const marks = this.getAllMarks();\n    marks.forEach(mark => {\n      const product = mark.getProduct();\n      if (product && product.animate) {\n        product.animate.enableAnimationState(states);\n      }\n    });\n  }\n\n  protected _disableMarkAnimation(states: string | string[]) {\n    const marks = this.getAllMarks();\n    marks.forEach(mark => {\n      const product = mark.getProduct();\n      if (product && product.animate) {\n        product.animate.disableAnimationState(states);\n      }\n    });\n  }\n\n  protected _setStateInDatum(\n    stateKey: string,\n    checkReverse: boolean,\n    datum: MaybeArray<Datum> | null,\n    filter?: (series: ISeries, mark: IMark) => boolean,\n    region?: IRegionQuerier\n  ) {\n    datum = datum ? array(datum) : null;\n    const keys = !datum ? null : Object.keys(datum[0]);\n    this.getRegionsInQuerier(region).forEach(r => {\n      if (!datum) {\n        r.interaction.clearEventElement(stateKey, true);\n        return;\n      }\n      r.getSeries().forEach(s => {\n        s.getMarks().forEach(m => {\n          if (!m.getProduct()) {\n            return;\n          }\n          if (!filter || (isFunction(filter) && filter(s, m))) {\n            const isCollect = m.getProduct().isCollectionMark();\n            const elements = m.getProduct().elements;\n            let pickElements = elements;\n            if (isCollect) {\n              pickElements = elements.filter(e => {\n                const elDatum = e.getDatum();\n                // eslint-disable-next-line max-nested-callbacks, eqeqeq\n                (datum as Datum[]).every((d, index) => keys.every(k => d[k] == elDatum[index][k]));\n              });\n            } else {\n              if (datum.length > 1) {\n                const datumTemp = (datum as Datum[]).slice();\n                pickElements = elements.filter(e => {\n                  if (datumTemp.length === 0) {\n                    return false;\n                  }\n                  const elDatum = e.getDatum();\n                  // eslint-disable-next-line max-nested-callbacks, eqeqeq\n                  const index = datumTemp.findIndex(d => keys.every(k => d[k] == elDatum[k]));\n                  if (index >= 0) {\n                    datumTemp.splice(index, 1);\n                    return true;\n                  }\n                  return false;\n                });\n              } else {\n                // eslint-disable-next-line eqeqeq\n                const el = elements.find(e => keys.every(k => datum[0][k] == e.getDatum()[k]));\n                el && (pickElements = [el]);\n              }\n            }\n            pickElements.forEach(element => {\n              r.interaction.addEventElement(stateKey, element);\n            });\n          }\n        });\n      });\n      if (checkReverse) {\n        r.interaction.reverseEventElement(stateKey);\n      }\n    });\n  }\n\n  /**\n   * setDimensionIndex could trigger mark state, tooltip, crosshair\n   * @param value dimension value\n   * @param opt option for set trigger\n   */\n  setDimensionIndex(value: StringOrNumber, opt: DimensionIndexOption) {\n    // event\n    let dimensionInfo: IDimensionInfo[] | null = null;\n    Array.from(this._event.getComposedEventMap().values()).forEach(e => {\n      const { eventType, event } = e;\n      if (eventType === DimensionEventEnum.dimensionHover || eventType === DimensionEventEnum.dimensionClick) {\n        const info = event.dispatch(value, opt) as [];\n        if (info?.length) {\n          dimensionInfo = info;\n        }\n      }\n    });\n    const isUnableValue =\n      isNil(value) || !dimensionInfo || dimensionInfo.every(d => isDiscrete(d.axis.getScale().type) && isNil(d.index));\n    // tooltip\n    if (opt.tooltip !== false) {\n      const tooltip = this._components.find(c => c.type === ComponentTypeEnum.tooltip) as unknown as ITooltip;\n      if (tooltip?.getVisible()) {\n        if (isUnableValue) {\n          (<any>tooltip).hideTooltip?.();\n        } else {\n          const dataFilter = {};\n          dimensionInfo.forEach((d: IDimensionInfo) => {\n            const { axis, value, data } = d;\n            const isY = axis.getOrient() === 'left' || axis.getOrient() === 'right';\n            data.forEach(d => {\n              if (isY) {\n                dataFilter[(<ICartesianSeries>d.series).fieldY[0]] = value;\n              } else {\n                dataFilter[(<ICartesianSeries>d.series).fieldX[0]] = value;\n              }\n            });\n          });\n          tooltip.showTooltip(dataFilter, opt.showTooltipOption);\n        }\n      }\n    }\n    if (opt.crosshair !== false) {\n      const crosshair = this._components.find(\n        c => c.type === ComponentTypeEnum.cartesianCrosshair\n      ) as unknown as ICrossHair;\n      if (crosshair && crosshair.clearAxisValue && crosshair.setAxisValue) {\n        if (isUnableValue) {\n          crosshair.clearAxisValue?.();\n          crosshair.hide?.();\n        } else {\n          dimensionInfo.forEach((d: IDimensionInfo) => {\n            const { axis, value } = d;\n            crosshair.clearAxisValue();\n            crosshair.setAxisValue(value, axis);\n            crosshair.layoutByValue();\n          });\n        }\n      }\n    }\n  }\n\n  getColorScheme() {\n    return this._option.getTheme?.().colorScheme;\n  }\n}\n"]}