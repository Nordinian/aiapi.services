{"version":3,"sources":["../src/interaction/dimension-trigger.ts"],"names":[],"mappings":"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","file":"dimension-trigger.js","sourcesContent":["import { isEmpty, isArray } from '@visactor/vutils';\nimport type { IElement } from '@visactor/vgrammar-core';\nimport type { DimensionEventParams } from '../event/events/dimension/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { DimensionEventEnum } from '../event/events/dimension/interface';\n\nimport type { IMark } from '../mark/interface';\nimport type { EventCallback, EventParams, IEvent } from '../event/interface';\nimport type { IHoverSpec, IInteraction, ISelectSpec, ITrigger, ITriggerOption } from './interface';\nimport type { RenderMode } from '../typings/spec';\nimport { MarkSet } from '../mark/mark-set';\nimport { STATE_VALUE_ENUM } from '../compile/mark/interface';\n\nexport class DimensionTrigger implements ITrigger {\n  // 事件\n  readonly event: IEvent;\n\n  protected readonly interaction: IInteraction;\n\n  protected _option: ITriggerOption;\n  protected _marks: MarkSet = new MarkSet();\n  protected _markReverse: MarkSet = new MarkSet();\n\n  protected _lastDimensionEvent: DimensionEventParams = null;\n\n  private _hover: IHoverSpec;\n  get hover() {\n    return this._hover;\n  }\n  private _select: ISelectSpec;\n  get select() {\n    return this._select;\n  }\n\n  constructor(option: ITriggerOption) {\n    this._option = option;\n    this.event = this._option.model.getOption().getChart().getEvent(); //  new Event(option.eventDispatcher, option.mode);\n    this.interaction = option.interaction;\n    this.initConfig(option.mode);\n  }\n\n  setStateKeys(fields: string[]): void {\n    // do nothing\n  }\n\n  registerMark(mark: IMark): void {\n    // do nothing\n    if (!isEmpty(mark.stateStyle[STATE_VALUE_ENUM.STATE_DIMENSION_HOVER])) {\n      this._marks.addMark(mark);\n    }\n    if (!isEmpty(mark.stateStyle[STATE_VALUE_ENUM.STATE_DIMENSION_HOVER_REVERSE])) {\n      this._markReverse.addMark(mark);\n    }\n  }\n\n  init(): void {\n    this.initEvent();\n  }\n\n  release(): void {\n    this.releaseEvent();\n  }\n\n  // event\n  protected initEvent() {\n    const event = this.event;\n    event.on(DimensionEventEnum.dimensionHover, this.onHover as EventCallback<EventParams>);\n  }\n\n  protected releaseEvent(): void {\n    this.event.release();\n  }\n\n  private initConfig(mode: RenderMode): void {\n    // do nothing\n  }\n\n  protected getEventElement(params: DimensionEventParams, reverse: boolean = false): { el: IElement; mark: IMark }[] {\n    // items 修改遍历方法从 mark\n\n    const items: { el: IElement; mark: IMark }[] = [] as unknown as { el: IElement; mark: IMark }[];\n    params.dimensionInfo.forEach(df => {\n      df.data.forEach(dd => {\n        const seriesMark = (reverse ? this._markReverse : this._marks)\n          .getMarks()\n          .filter(m => m.model === dd.series && m.getVisible());\n        seriesMark.forEach(m => {\n          const elements = m\n            .getProduct()\n            .elements.filter(e => {\n              const datum = e.getDatum();\n              let c;\n              if (isArray(datum)) {\n                c = datum.every((oneData, i) => oneData === dd.datum[i]);\n              } else {\n                c = dd.datum.some(dd_d => dd_d === datum);\n              }\n              return reverse ? !c : c;\n            })\n            .map(el => {\n              return {\n                el,\n                mark: m\n              };\n            });\n          items.push(...elements);\n        });\n      });\n    });\n    return items;\n  }\n\n  protected dimensionDataEqual(params: DimensionEventParams) {\n    if (this._lastDimensionEvent === params) {\n      return true;\n    }\n    if (!this._lastDimensionEvent || !params) {\n      return false;\n    }\n    if (this._lastDimensionEvent.dimensionInfo.length !== params.dimensionInfo.length) {\n      return false;\n    }\n    for (let i = 0; i < this._lastDimensionEvent.dimensionInfo.length; i++) {\n      const last = this._lastDimensionEvent.dimensionInfo[i];\n      const current = params.dimensionInfo[i];\n      if (last.value !== current.value) {\n        return false;\n      }\n      if (last.axis !== current.axis) {\n        return false;\n      }\n      if (last.data.length !== current.data.length) {\n        return false;\n      }\n      for (let j = 0; j < last.data.length; j++) {\n        const lastData = last.data[j];\n        const currentData = current.data[j];\n        if (lastData.series !== currentData.series) {\n          return false;\n        }\n        if (lastData.datum.length !== currentData.datum.length) {\n          return false;\n        }\n        for (let k = 0; k < lastData.datum.length; k++) {\n          if (lastData.datum[k] !== currentData.datum[k]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  private onHover = (params: DimensionEventParams) => {\n    const elements = this.getEventElement(params);\n    switch (params.action) {\n      case 'enter':\n        // clear last hover\n        // eslint-disable-next-line no-case-declarations\n        const lastHover = this.interaction.getEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER);\n        lastHover.forEach(e => {\n          this.interaction.addEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER_REVERSE, e);\n        });\n        this.interaction.clearEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER, false);\n        // add new\n        elements.forEach(({ el, mark }) => {\n          this.interaction.addEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER, el);\n        });\n        this.interaction.reverseEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER);\n        break;\n      case 'leave':\n        // clear all\n        this.interaction.clearEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER, true);\n        params = null;\n        break;\n      case 'click':\n      case 'move':\n      default:\n        break;\n    }\n    this._lastDimensionEvent = params;\n  };\n}\n"]}