{"version":3,"sources":["../src/component/tooltip/handler/dom/model/shape-model.ts"],"names":[],"mappings":"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","file":"shape-model.js","sourcesContent":["import type { IGradientColor, ILinearGradient } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { Symbol } from '@visactor/vrender-core';\n\nimport { isObject, isString } from '@visactor/vutils';\nimport type { ShapeType } from '../../../../../typings';\nimport { BaseTooltipModel } from './base-tooltip-model';\nimport { pixelPropertyStrToNumber } from '../util';\n\nexport interface IShapeSvgOption {\n  hasShape?: boolean;\n  symbolType?: ShapeType | string;\n  size?: string;\n  fill?: string | IGradientColor;\n  stroke?: string;\n  lineWidth?: number;\n  hollow?: boolean;\n  marginTop?: string;\n  index?: number;\n}\n\nexport class ShapeModel extends BaseTooltipModel {\n  svg: SVGElement;\n\n  private _svgHtmlCache: string;\n\n  init(classList?: string[], id?: string, tag?: keyof HTMLElementTagNameMap): void {\n    if (!this.product) {\n      const container = this.createElement(tag ?? 'div', [...(classList ?? []), 'shape'], undefined, id);\n      this.product = container;\n    }\n  }\n\n  setStyle(style?: Partial<CSSStyleDeclaration>, option?: IShapeSvgOption): void {\n    super.setStyle(style);\n    this.setSvg(option);\n  }\n\n  setContent(option: IShapeSvgOption) {\n    this.setSvg(option);\n  }\n\n  setSvg(option?: IShapeSvgOption) {\n    const html = getSvgHtml(option, this._option.valueToHtml);\n    if (this.product && html !== this._svgHtmlCache) {\n      this._svgHtmlCache = html;\n      this.product.innerHTML = html;\n    }\n  }\n\n  release(): void {\n    super.release();\n    this._svgHtmlCache = '';\n  }\n}\n\nconst builtInShape = {\n  // FIXME: vrender 的五角星是用 canvas api 画出来的，没有内置的 path。这里先覆盖一下，等 vrender 修复\n  // eslint-disable-next-line max-len\n  star: 'M0 -1L0.22451398828979266 -0.3090169943749474L0.9510565162951535 -0.30901699437494745L0.3632712640026804 0.1180339887498948L0.5877852522924732 0.8090169943749473L8.326672684688674e-17 0.3819660112501051L-0.587785252292473 0.8090169943749476L-0.3632712640026804 0.11803398874989487L-0.9510565162951536 -0.30901699437494723L-0.22451398828979274 -0.30901699437494734Z'\n};\n\nfunction getSvgHtml(option: IShapeSvgOption | undefined, valueToHtml: (value: any) => string) {\n  if (!option?.hasShape || !option.symbolType) {\n    return '';\n  }\n\n  const { symbolType, fill, stroke, hollow = false } = option;\n  const size = option.size ? valueToHtml(option.size) : '8px';\n  const marginTop = option.marginTop ? valueToHtml(option.marginTop) : '0px';\n  const lineWidth = option.lineWidth ? valueToHtml(option.lineWidth) + 'px' : '0px';\n  let fillString: string = 'currentColor';\n  const getStroke = () => (stroke ? valueToHtml(stroke) : fillString);\n\n  const sizeNumber = pixelPropertyStrToNumber(size) as number;\n  const createSymbol = (symbolType: string) => new Symbol({ symbolType, size: sizeNumber, fill: true });\n\n  let symbol = createSymbol(builtInShape[symbolType] ?? symbolType);\n  const parsedPath = symbol.getParsedPath();\n  if (!parsedPath.path) {\n    symbol = createSymbol(parsedPath.pathStr);\n  }\n  const pathModel = symbol.getParsedPath().path;\n  const path = pathModel.toString();\n  const bounds = pathModel.bounds;\n  let viewBox = `${bounds.x1} ${bounds.y1} ${bounds.width()} ${bounds.height()}`;\n\n  // svg 不支持内描边，需要手动将描边空间预留在 viewBox 上\n  if (lineWidth !== '0px') {\n    const [x, y, w, h] = viewBox.split(' ').map(n => Number(n));\n    const lw = Number(lineWidth.slice(0, -2));\n    viewBox = `${x - lw / 2} ${y - lw / 2} ${w + lw} ${h + lw}`;\n  }\n\n  if (!fill || isString(fill) || hollow) {\n    fillString = hollow ? 'none' : fill ? valueToHtml(fill) : 'currentColor';\n    return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"${viewBox}\"\n      style=\"display: inline-block; vertical-align: middle; margin-top: ${marginTop};\">\n      <path\n        d=\"${path}\"\n        style=\"fill: ${fillString}; stroke: ${getStroke()}; stroke-width: ${lineWidth}\"\n      >\n      </path>\n    </svg>`;\n  }\n  if (isObject(fill)) {\n    fillString = 'gradientColor' + option.index ?? '';\n    let gradient = '';\n    const stops = (fill.stops ?? [])\n      .map(s => `<stop offset=\"${valueToHtml(s.offset.toString())}\" stop-color=\"${valueToHtml(s.color)}\"/>`)\n      .join('');\n    if ((fill as IGradientColor).gradient === 'radial') {\n      gradient = `<radialGradient id=\"${fillString}\" cx=\"50%\" cy=\"50%\" r=\"50%\" fx=\"0%\" fy=\"0%\">\n      ${stops}\n      </radialGradient>`;\n    } else if ((fill as IGradientColor).gradient === 'linear') {\n      gradient = `<linearGradient id=\"${fillString}\" x1=\"${\n        (((fill as ILinearGradient).x0 as number) ?? 0) * 100\n      }%\" y1=\"${(((fill as ILinearGradient).y0 as number) ?? 0) * 100}%\" x2=\"${\n        (((fill as ILinearGradient).x1 as number) ?? 0) * 100\n      }%\" y2=\"${(((fill as ILinearGradient).y1 as number) ?? 0) * 100}%\">\n      ${stops}\n      </linearGradient>`;\n    }\n    return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"-0.5 -0.5 1 1\"\n      style=\"display: inline-block; vertical-align: middle; margin-top: ${marginTop};\">\n      ${gradient}\n      <path\n        d=\"${path}\"\n        style=\"fill: url(#${fillString}); stroke: ${getStroke()}; stroke-width: ${lineWidth}\"\n      >\n      </path>\n    </svg>`;\n  }\n\n  return '';\n}\n"]}