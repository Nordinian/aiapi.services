{"version":3,"sources":["../src/component/axis/cartesian/time-axis.ts"],"names":[],"mappings":"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","file":"time-axis.js","sourcesContent":["import type { IEffect } from '../../../model/interface';\nimport { DataView } from '@visactor/vdataset';\nimport { isXAxis } from './util/common';\nimport { TimeUtil } from './util/time';\nimport { isArray } from '@visactor/vutils';\nimport { eachSeries } from '../../../util/model';\nimport { mergeSpec } from '../../../util/spec/merge-spec';\nimport type { ICartesianSeries } from '../../../series/interface';\nimport { CartesianLinearAxis } from './linear-axis';\nimport type { ICartesianTickDataOpt } from '@visactor/vutils-extension';\nimport { ComponentTypeEnum } from '../../interface/type';\nimport type { Datum } from '../../../typings';\nimport { CompilableData } from '../../../compile/data/compilable-data';\nimport type { LinearAxisMixin } from '../mixin/linear-axis-mixin';\nimport type { ICartesianTimeAxisSpec } from './interface';\nimport { Factory } from '../../../core/factory';\nimport { registerAxis } from '../base-axis';\n\nexport interface CartesianTimeAxis<T extends ICartesianTimeAxisSpec = ICartesianTimeAxisSpec>\n  extends Pick<LinearAxisMixin, 'valueToPosition'>,\n    CartesianLinearAxis<T> {}\n\nexport class CartesianTimeAxis<\n  T extends ICartesianTimeAxisSpec = ICartesianTimeAxisSpec\n> extends CartesianLinearAxis<T> {\n  static type = ComponentTypeEnum.cartesianTimeAxis;\n  type = ComponentTypeEnum.cartesianTimeAxis;\n\n  static specKey = 'axes';\n\n  protected _layerTickData!: CompilableData;\n\n  protected _zero: boolean = false;\n\n  effect: IEffect = {\n    scaleUpdate: params => {\n      this.computeData(params?.value);\n      eachSeries(\n        this._regions,\n        s => {\n          if (isXAxis(this.getOrient())) {\n            (s as ICartesianSeries).setXAxisHelper(this.axisHelper());\n          } else {\n            (s as ICartesianSeries).setYAxisHelper(this.axisHelper());\n          }\n        },\n        {\n          userId: this._seriesUserId,\n          specIndex: this._seriesIndex\n        }\n      );\n    }\n  };\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    this._tick = mergeSpec({}, this._spec.tick, this._spec.layers?.[0]);\n  }\n\n  protected _initData() {\n    super._initData();\n\n    // 如果layer数组的第二项未配置，则不显示第二层\n    if (this._spec.layers?.[1]) {\n      const layerTickData = new DataView(this._option.dataSet, { name: `${this.type}_${this.id}_layer_1_ticks` })\n        .parse(this._scale, {\n          type: 'scale'\n        })\n        .transform(\n          {\n            type: 'ticks',\n            options: {\n              ...this._tickTransformOption('cartesian'),\n              tickCount: this._spec.layers[1].tickCount,\n              forceTickCount: this._spec.layers[1].forceTickCount,\n              tickStep: this._spec.layers[1].tickStep\n            } as ICartesianTickDataOpt\n          },\n          false\n        );\n      this._layerTickData = new CompilableData(this._option, layerTickData);\n    }\n  }\n\n  /**\n   * @override\n   */\n  protected computeData(updateType?: 'range' | 'domain' | 'force'): void {\n    super.computeData(updateType);\n    if (this._layerTickData) {\n      this._layerTickData.getDataView().reRunAllTransform();\n      this._layerTickData.updateData();\n    }\n  }\n\n  protected getLabelFormatMethod(): any {\n    const timeUtil = TimeUtil.getInstance();\n    const timeFormat1 = this._spec.layers?.[1]?.timeFormat || '%Y%m%d';\n    const timeFormatMode1 = this._spec.layers?.[1]?.timeFormatMode || 'local';\n    const timeFormatter1 = timeFormatMode1 === 'local' ? timeUtil.timeFormat : timeUtil.timeUTCFormat;\n\n    const timeFormat0 = this._spec.layers?.[0]?.timeFormat || '%Y%m%d';\n    const timeFormatMode0 = this._spec.layers?.[0]?.timeFormatMode || 'local';\n    const timeFormatter0 = timeFormatMode0 === 'local' ? timeUtil.timeFormat : timeUtil.timeUTCFormat;\n\n    return (value: any, datum: any, index: number, data: any[], layer: number) => {\n      let timeValue: string;\n      if (layer === 0) {\n        timeValue = timeFormatter0(timeFormat0, value);\n      } else {\n        timeValue = timeFormatter1(timeFormat1, value);\n      }\n\n      return this._spec.label?.formatMethod ? this._spec.label.formatMethod(timeValue, datum) : timeValue;\n    };\n  }\n\n  protected getLabelItems(length: number) {\n    const items = [];\n    if (isArray(this._tickData.getLatestData())) {\n      items.push(\n        this._tickData.getLatestData().map((obj: Datum) => {\n          return {\n            id: obj.value,\n            label: obj.value,\n            value: length === 0 ? 0 : this.dataToPosition([obj.value]) / length,\n            rawValue: obj.value\n          };\n        })\n      );\n    }\n\n    if (this._layerTickData && isArray(this._layerTickData.getLatestData())) {\n      items.push(\n        this._layerTickData.getLatestData().map((obj: Datum) => {\n          const value = this.dataToPosition([obj.value]);\n          return {\n            id: obj.value,\n            label: obj.value,\n            value: value / length,\n            rawValue: obj.value\n          };\n        })\n      );\n    }\n\n    return items;\n  }\n  transformScaleDomain() {\n    // do nothing\n  }\n}\n\nexport const registerCartesianTimeAxis = () => {\n  registerAxis();\n  Factory.registerComponent(CartesianTimeAxis.type, CartesianTimeAxis);\n};\n"]}