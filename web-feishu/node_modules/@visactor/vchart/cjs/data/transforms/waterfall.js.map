{"version":3,"sources":["../src/data/transforms/waterfall.ts"],"names":[],"mappings":"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","file":"waterfall.js","sourcesContent":["// import { isNil, precisionAdd } from '@visactor/vutils';\nimport { isNil, precisionAdd } from '@visactor/vutils';\n\nimport type { DataView } from '@visactor/vdataset';\nimport type { IWaterfallSeriesSpec } from '../../series/waterfall/interface';\nimport type { Datum } from '../../typings';\nimport { WaterfallDefaultSeriesField } from '../../constant/waterfall';\n\nexport interface IWaterfallOpt {\n  indexField: string;\n  valueField: string;\n  seriesField?: string;\n  startAs: string;\n  endAs: string;\n  total: IWaterfallSeriesSpec['total'];\n  seriesFieldName: {\n    total: string;\n    increase: string;\n    decrease: string;\n  };\n  groupData: () => DataView;\n}\n\nexport const waterfall = (lastData: Array<Datum>, op: IWaterfallOpt) => {\n  if (!lastData || lastData.length === 0) {\n    return lastData;\n  }\n  const { indexField, valueField, startAs, endAs, total: totalSpec, seriesField, seriesFieldName, groupData } = op;\n  const totalData: {\n    start: number;\n    end: number;\n    lastIndex: string;\n    lastEnd: number;\n    index: string;\n    isTotal: boolean;\n  }[] = [];\n  const { dimensionValues, dimensionData } = groupData().latestData as {\n    dimensionValues: { [key in string]: Set<string> };\n    dimensionData: { [key in string]: Datum[] };\n  };\n  const indexValues = Array.from(dimensionValues[indexField]);\n  let temp: { start: number; end: number; lastIndex: string } = { start: 0, end: 0, lastIndex: null };\n  indexValues.forEach((key, index) => {\n    const total = {\n      start: temp.end,\n      end: temp.end,\n      lastIndex: temp.lastIndex,\n      lastEnd: temp.end,\n      index: key,\n      isTotal: false\n    };\n\n    const indexData = dimensionData[key];\n    indexData.forEach(d => {\n      let isTotalTag = false;\n      if (!totalSpec || totalSpec.type === 'end') {\n        if (index === indexValues.length - 1) {\n          total.start = 0;\n          d[startAs] = total.start;\n          d[endAs] = total.end;\n          isTotalTag = true;\n        }\n      } else if (totalSpec.type === 'field' || totalSpec.type === 'custom') {\n        const tag = d[totalSpec.tagField];\n        if (tag) {\n          isTotalTag = true;\n          if (totalSpec.type === 'custom') {\n            const { start, end } = totalSpec.product(d, temp);\n            d[startAs] = start;\n            d[endAs] = end;\n            total.end = end;\n            total.start = start;\n          } else {\n            let start = 0;\n            let end = total.end;\n            // 如果有设置count， valueField 和 startField 无效\n            if (totalSpec.collectCountField && !isNil(d[totalSpec.collectCountField])) {\n              const startIndex = totalData.length - +d[totalSpec.collectCountField];\n              const endIndex = totalData.length - 1;\n              if (startIndex < 0) {\n                console.warn('total.collectCountField error');\n              } else {\n                start = totalData[startIndex].start;\n              }\n              if (endIndex < 0) {\n                console.warn('total.collectCountField error');\n              } else {\n                end = totalData[endIndex].end;\n              }\n            } else {\n              if (totalSpec.startField && !isNil(d[totalSpec.startField])) {\n                start = +d[totalSpec.startField];\n              }\n              if (totalSpec.valueField && !isNil(d[totalSpec.valueField])) {\n                end = precisionAdd(start, +d[totalSpec.valueField]);\n              }\n            }\n            d[startAs] = start;\n            d[endAs] = end;\n            d[valueField] = end - start;\n            total.start = start;\n            total.end = end;\n          }\n        }\n      }\n      if (!isTotalTag) {\n        d[startAs] = +total.end;\n        d[endAs] = precisionAdd(d[startAs], +d[valueField]);\n        total.end = d[endAs];\n      }\n      total.isTotal = isTotalTag;\n\n      if (isNil(seriesField) || seriesField === WaterfallDefaultSeriesField) {\n        if (isTotalTag) {\n          d[WaterfallDefaultSeriesField] = seriesFieldName.total;\n        } else {\n          d[WaterfallDefaultSeriesField] = +d[valueField] >= 0 ? seriesFieldName.increase : seriesFieldName.decrease;\n        }\n      }\n    });\n    temp = { ...total, lastIndex: key };\n    totalData.push(total);\n  });\n  return totalData;\n};\n\nexport interface IWaterfallFillEndOpt {\n  indexField: string;\n  valueField: string;\n  seriesField?: string;\n  total: IWaterfallSeriesSpec['total'];\n}\n\nexport const waterfallFillTotal = (data: Array<Datum>, op: IWaterfallFillEndOpt) => {\n  if (!data) {\n    return data;\n  }\n  const { indexField, valueField, total, seriesField } = op;\n  const totalData = {\n    [indexField]: total?.text || 'total',\n    [valueField]: data.reduce((pre, cur) => precisionAdd(pre, +cur[valueField]), 0)\n  };\n  if (seriesField) {\n    totalData[seriesField] = 'total';\n  }\n  data.push(totalData);\n  return data;\n};\n"]}