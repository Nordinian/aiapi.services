{"version":3,"sources":["../src/series/base/base-series.ts"],"names":[],"mappings":"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","file":"base-series.js","sourcesContent":["import { ChartEvent } from '../../constant/event';\nimport {\n  AttributeLevel,\n  DEFAULT_DATA_KEY,\n  DEFAULT_DATA_SERIES_FIELD,\n  DEFAULT_SERIES_STYLE_NAME,\n  PREFIX,\n  STACK_FIELD_END,\n  STACK_FIELD_END_PERCENT,\n  STACK_FIELD_START,\n  STACK_FIELD_START_PERCENT\n} from '../../constant/index';\nimport { seriesMarkInfoMap } from '../interface/theme';\nimport { DataView } from '@visactor/vdataset';\n// eslint-disable-next-line no-duplicate-imports\nimport type { DataSet, ITransformOptions } from '@visactor/vdataset';\nimport type { IRegion } from '../../region/interface';\nimport type { IMark } from '../../mark/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport type {\n  CoordinateType,\n  IInvalidType,\n  IPoint,\n  DataKeyType,\n  Datum,\n  Maybe,\n  ISeriesSpec,\n  IExtensionMarkSpec,\n  IExtensionGroupMarkSpec,\n  EnableMarkType,\n  IGroup,\n  ILayoutType,\n  ILayoutPoint,\n  ILayoutRect\n} from '../../typings';\nimport { BaseModel } from '../../model/base-model';\n// eslint-disable-next-line no-duplicate-imports\nimport type {\n  ISeriesOption,\n  ISeries,\n  ISeriesMarkInitOption,\n  ISeriesStackData,\n  ISeriesTooltipHelper,\n  SeriesMarkMap,\n  ISeriesMarkInfo,\n  ISeriesSpecInfo\n} from '../interface';\nimport { dataToDataView, dataViewFromDataView, updateDataViewInData } from '../../data/initialize';\nimport { mergeFields, getFieldAlias } from '../../util/data';\nimport { couldBeValidNumber } from '../../util/type';\nimport { mergeSpec } from '../../util/spec/merge-spec';\nimport type { IModelEvaluateOption, IModelRenderOption } from '../../model/interface';\nimport type { AddVChartPropertyContext } from '../../data/transforms/add-property';\n// eslint-disable-next-line no-duplicate-imports\nimport { addVChartProperty } from '../../data/transforms/add-property';\nimport type { ITrigger } from '../../interaction/interface';\nimport { Trigger } from '../../interaction/trigger';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { BaseSeriesTooltipHelper } from './tooltip-helper';\nimport type { StatisticOperations } from '../../data/transforms/dimension-statistics';\n// eslint-disable-next-line no-duplicate-imports\nimport { dimensionStatistics, dimensionStatisticsOfSimpleData } from '../../data/transforms/dimension-statistics';\nimport { invalidTravel } from '../../data/transforms/invalid-travel';\nimport { getDataScheme } from '../../theme/color-scheme/util';\nimport { SeriesData } from './series-data';\nimport { addDataKey, initKeyMap } from '../../data/transforms/data-key';\nimport type { IGroupMark } from '../../mark/group';\nimport type { ISeriesMarkAttributeContext } from '../../compile/mark';\nimport {\n  array,\n  isEqual,\n  isNil,\n  isValid,\n  isBoolean,\n  isString,\n  isFunction,\n  isArray,\n  isValidNumber,\n  minInArray,\n  maxInArray\n} from '@visactor/vutils';\nimport { ColorOrdinalScale } from '../../scale/color-ordinal-scale';\nimport { baseSeriesMark } from './constant';\nimport { animationConfig, userAnimationConfig, isAnimationEnabledForSeries } from '../../animation/utils';\nimport { BaseSeriesSpecTransformer } from './base-series-transformer';\n\nexport abstract class BaseSeries<T extends ISeriesSpec> extends BaseModel<T> implements ISeries {\n  readonly specKey: string = 'series';\n  readonly type: string = 'series';\n  layoutType: ILayoutType = 'absolute';\n  readonly modelType: string = 'series';\n  readonly name: string | undefined = undefined;\n\n  static readonly mark: SeriesMarkMap = baseSeriesMark;\n  static readonly transformerConstructor = BaseSeriesSpecTransformer;\n  readonly transformerConstructor = BaseSeriesSpecTransformer as any;\n\n  declare getSpecInfo: () => ISeriesSpecInfo;\n\n  protected _trigger!: ITrigger;\n  /**\n   * getTrigger\n   */\n  getTrigger() {\n    return this._trigger;\n  }\n\n  protected declare _option: ISeriesOption;\n\n  // 坐标系信息\n  readonly coordinate: CoordinateType = 'none';\n\n  // 区域\n  protected _region: IRegion = null as unknown as IRegion;\n  getRegion(): IRegion {\n    return this._region;\n  }\n\n  private _layoutStartPoint: ILayoutPoint = {\n    x: 0,\n    y: 0\n  };\n\n  getLayoutStartPoint(): ILayoutPoint {\n    return this._region.getLayoutStartPoint();\n  }\n\n  private _layoutRect: ILayoutRect = { width: null, height: null };\n\n  getLayoutRect: () => ILayoutRect = () => {\n    return {\n      width: this._layoutRect.width ?? this._region.getLayoutRect().width,\n      height: this._layoutRect.height ?? this._region.getLayoutRect().height\n    };\n  };\n\n  /** 系列的根 mark */\n  protected _rootMark: IGroupMark = null;\n  getRootMark() {\n    return this._rootMark;\n  }\n\n  /** series field 所作用的 mark */\n  protected _seriesMark: Maybe<IMark> = null;\n\n  protected _layoutLevel!: number;\n\n  /**\n   * data\n   * 数据节点\n   * rawData 只进行 fields 相关能力，筛选+sort。\n   * rawDataStatistics 的统计值是fields筛选后的。是符合预期的。\n   * viewDatFilter 节点用来做组件等图表逻辑的数据筛选\n   * viewData上不允许挂 filter\n   * 数据更新流程一：重新做数据变换\n   * viewData.reRunAllTransform()=>viewDataStatistics();\n   * 数据更新流程二：图表逻辑更新，进行数据筛选\n   * viewDatFilter.reRunAllTransform() => region.waitAllSeriesFilterOver()=>\n   * viewData.reRunAllTransform()=>viewDataStatistics();\n   * 数据更新流程三：用户更新数据\n   * rawData().parse().rawDataStatistics()=>\n   * viewDatFilter.reRunAllTransform() => region.waitAllSeriesFilterOver()=>\n   * viewData.reRunAllTransform()=>viewDataStatistics();\n   *\n   * NEED-OPTIMIZATION:\n   * 一：额外增加了 filter 节点，流程断开为2部分。只是因为堆积需要，因为 filter 和数据变换可以用排序解决。\n   * 二：running tag 没有找到好办法消除。只是增加了一个易用 api 到 dataView 上\n   */\n  protected _rawData!: DataView;\n  getRawData() {\n    return this._rawData;\n  }\n\n  protected _rawDataStatistics?: DataView;\n  protected _rawStatisticsCache: Record<string, { values?: any[]; min?: number; max?: number }>;\n\n  protected _viewDataMap: Map<number, DataView> = new Map();\n\n  // only add viewDataFilter when this._stack is true\n  protected _viewDataFilter: DataView = null;\n\n  getViewDataFilter() {\n    return this._viewDataFilter;\n  }\n\n  // view data\n  protected _data: SeriesData = null;\n  getViewData() {\n    return this._data?.getDataView();\n  }\n  getViewDataProductId() {\n    return this._data?.getProductId();\n  }\n\n  protected _viewDataStatistics!: DataView;\n  getViewDataStatistics() {\n    return this._viewDataStatistics;\n  }\n  protected _viewStackData!: DataView;\n  getViewStackData() {\n    return this._viewStackData;\n  }\n\n  protected _seriesField?: string;\n  getSeriesField() {\n    return this._seriesField;\n  }\n  setSeriesField(field: string) {\n    if (isValid(field)) {\n      this._seriesField = field;\n      this.getMarks()\n        .filter(m => {\n          return m.getDataView() === this.getViewData();\n        })\n        .forEach(m => {\n          m.setFacet(this._seriesField);\n        });\n    }\n  }\n\n  protected _groups?: IGroup;\n  getGroups() {\n    return this._groups;\n  }\n\n  protected _stack: boolean;\n  protected _supportStack: boolean;\n  getStack() {\n    return this._stack;\n  }\n\n  getStackValue() {\n    return this._spec.stackValue ?? `${PREFIX}_series_${this.type}`;\n  }\n  protected _percent: boolean = false;\n  getPercent() {\n    return this._percent;\n  }\n  protected _stackOffsetSilhouette: boolean = false;\n  getStackOffsetSilhouette() {\n    return this._stackOffsetSilhouette;\n  }\n  protected _dataSet: DataSet;\n\n  protected declare _tooltipHelper: ISeriesTooltipHelper | undefined;\n  get tooltipHelper() {\n    if (!this._tooltipHelper) {\n      this.initTooltip();\n    }\n\n    return this._tooltipHelper;\n  }\n\n  layoutZIndex: number = 0;\n\n  protected _invalidType: IInvalidType = 'break';\n  getInvalidType() {\n    return this._invalidType;\n  }\n  setInvalidType(t: IInvalidType) {\n    this._invalidType = t;\n    this.getViewData()?.reRunAllTransform();\n  }\n\n  protected _markAttributeContext: ISeriesMarkAttributeContext;\n  getMarkAttributeContext() {\n    return this._markAttributeContext;\n  }\n\n  constructor(spec: T, options: ISeriesOption) {\n    super(spec, options);\n    this._region = options.region;\n    this._dataSet = options.dataSet;\n    this._spec?.name && (this.name = this._spec.name);\n  }\n\n  created(): void {\n    super.created();\n    this._buildMarkAttributeContext();\n    // data\n    this.initData();\n    this.initGroups();\n    // 调整统计数据的创建时机，需要等待group创建完成\n    this.initStatisticalData();\n    this.event.emit(ChartEvent.afterInitData, { model: this });\n    // trigger\n    this.initTrigger();\n    // mark\n    this.initRootMark();\n    this.initMark();\n\n    const hasAnimation = isAnimationEnabledForSeries(this);\n\n    this._initExtensionMark({ hasAnimation });\n    this.initMarkStyle();\n    this.initMarkState();\n    if (hasAnimation) {\n      this.initAnimation();\n    }\n    this.afterInitMark();\n\n    // event\n    this.initEvent();\n    this.event.emit(ChartEvent.afterInitEvent, { model: this });\n  }\n\n  protected _buildMarkAttributeContext() {\n    this._markAttributeContext = {\n      vchart: this._option.globalInstance,\n      globalScale: (key: string, value: string | number) => {\n        return this._option.globalScale.getScale(key)?.scale(value);\n      },\n      seriesColor: (seriesValue: string | number) => {\n        if (isNil(seriesValue)) {\n          seriesValue = this.getSeriesKeys()[0];\n        }\n        return this._option.globalScale.getScale('color')?.scale(seriesValue);\n      },\n      getRegion: () => this._region\n    };\n  }\n\n  /** 预处理spec信息 */\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    this.setSeriesField(this._spec.seriesField);\n    if (isBoolean(this._spec.stack)) {\n      this._stack = this._spec.stack;\n    }\n    if (isBoolean(this._spec.percent)) {\n      this._percent = this._spec.percent;\n      this._stack = this._spec.percent || this._stack; // this._stack is `true` in bar/area series\n    }\n    if (isBoolean(this._spec.stackOffsetSilhouette)) {\n      this._stackOffsetSilhouette = this._spec.stackOffsetSilhouette;\n      this._stack = this._spec.stackOffsetSilhouette || this._stack; // this._stack is `true` in bar/area series\n    }\n    if (isValid(this._spec.stackValue)) {\n      this._stack = true;\n    }\n\n    if (isNil(this._stack) && this._supportStack && this._seriesField) {\n      // only set default value of stack to be `true` when series support stack and seriesField is not null\n      this._stack = true;\n    }\n    if (isValid(this._spec.invalidType)) {\n      this._invalidType = this._spec.invalidType;\n    }\n  }\n\n  /** data */\n  protected initData(): void {\n    const d = this._spec.data ?? this._option.getSeriesData(this._spec.dataId, this._spec.dataIndex);\n    if (d) {\n      this._rawData = dataToDataView(d, this._dataSet, this._option.sourceDataList, {\n        onError: this._option?.onError\n      });\n    }\n    this._rawData?.target?.addListener('change', this.rawDataUpdate.bind(this));\n    this._addDataIndexAndKey();\n    // 初始化viewData\n    if (this._rawData) {\n      if (this._stack) {\n        // 初始化viewDataFilter\n        this._viewDataFilter = dataViewFromDataView(this._rawData, this._dataSet, {\n          name: `${this.type}_${this.id}_viewDataFilter`\n        });\n      }\n\n      // 初始化viewData\n      const viewData = dataViewFromDataView(this._stack ? this._viewDataFilter : this._rawData, this._dataSet, {\n        name: `${this.type}_${this.id}_viewData`\n      });\n      this._data = new SeriesData(this._option, viewData);\n\n      if (this._stack) {\n        this._viewDataFilter.target.removeListener('change', viewData.reRunAllTransform);\n      }\n    }\n\n    // _invalidType 默认为 break/ignore，直接走图形层面的解析，不需要走 transform 数据处理逻辑\n    if (this._invalidType === 'zero' && this._rawData?.dataSet) {\n      registerDataSetInstanceTransform(this._rawData.dataSet, 'invalidTravel', invalidTravel);\n      // make sure each series only transform once\n      this._rawData?.transform(\n        {\n          type: 'invalidTravel',\n          options: {\n            config: () => {\n              return {\n                invalidType: this._invalidType,\n                checkField: this.getStackValueField()\n              };\n            }\n          }\n        },\n        false\n      );\n    }\n  }\n\n  protected initGroups() {\n    const groupFields = this.getGroupFields();\n    if (groupFields && groupFields.length) {\n      this._groups = { fields: groupFields };\n      // this._data && this._groups.initData(this._data.getDataView(), this._dataSet);\n    }\n  }\n\n  protected initStatisticalData(): void {\n    if (this._data) {\n      this._statisticViewData();\n    }\n  }\n\n  getRawDataStatisticsByField(field: string, isNumeric?: boolean) {\n    if (!this._rawStatisticsCache) {\n      this._rawStatisticsCache = {};\n    }\n\n    if (!this._rawStatisticsCache[field]) {\n      const canUseViewStatistics =\n        this._viewDataStatistics &&\n        (!this._viewDataFilter || this._viewDataFilter.transformsArr.length <= 1) &&\n        this.getViewData().transformsArr.length <= 1;\n\n      if (canUseViewStatistics && this._viewDataStatistics.latestData?.[field]) {\n        this._rawStatisticsCache[field] = this._viewDataStatistics.latestData[field];\n      } else if (this._rawData) {\n        // 如果有设置统计信息，应当与设置值保持一致\n        const fieldInfo = this._rawData.getFields()?.[field];\n        if (fieldInfo && fieldInfo.lockStatisticsByDomain && fieldInfo.domain) {\n          this._rawStatisticsCache[field] = {};\n          if (isNumeric) {\n            this._rawStatisticsCache[field].min = minInArray(fieldInfo.domain);\n            this._rawStatisticsCache[field].max = maxInArray(fieldInfo.domain);\n          } else {\n            this._rawStatisticsCache[field].values = fieldInfo.domain;\n          }\n        } else {\n          this._rawStatisticsCache[field] = dimensionStatisticsOfSimpleData(this._rawData.latestData, [\n            { key: field, operations: isNumeric ? ['min', 'max'] : ['values'] }\n          ])[field];\n        }\n      }\n    }\n\n    if (isNumeric && (isNil(this._rawStatisticsCache[field].min) || isNil(this._rawStatisticsCache[field].max))) {\n      this._rawStatisticsCache[field].min = minInArray(this._rawStatisticsCache[field].values);\n      this._rawStatisticsCache[field].max = maxInArray(this._rawStatisticsCache[field].values);\n    }\n\n    return this._rawStatisticsCache[field];\n  }\n\n  protected _statisticViewData() {\n    registerDataSetInstanceTransform(this._dataSet, 'dimensionStatistics', dimensionStatistics);\n    const viewDataStatisticsName = `${this.type}_${this.id}_viewDataStatic`;\n    this._viewDataStatistics = new DataView(this._dataSet, { name: viewDataStatisticsName });\n    this._viewDataStatistics.parse([this._data.getDataView()], {\n      type: 'dataview'\n    });\n    this._viewDataStatistics.transform(\n      {\n        type: 'dimensionStatistics',\n        options: {\n          fields: () => {\n            const fields = this.getStatisticFields();\n            if (this._seriesField) {\n              mergeFields(fields, [\n                {\n                  key: this._seriesField,\n                  operations: ['values']\n                }\n              ]);\n            }\n            return fields;\n          },\n          target: 'latest'\n        }\n      },\n      false\n    );\n\n    this._data.getDataView().target.removeListener('change', this._viewDataStatistics.reRunAllTransform);\n    if (this._stack) {\n      this.createdStackData();\n    }\n  }\n\n  protected createStatisticalData(\n    dataName: string,\n    rawData: DataView,\n    staticFields?: (dataId: string) => {\n      key: string;\n      operations: StatisticOperations;\n    }[]\n  ) {\n    registerDataSetInstanceTransform(this._dataSet, 'dimensionStatistics', dimensionStatistics);\n    const data = new DataView(this._dataSet, { name: dataName });\n    data.parse([rawData], {\n      type: 'dataview'\n    });\n    // data.name = dataName;\n    data.transform(\n      {\n        type: 'dimensionStatistics',\n        options: {\n          operations: ['max', 'min', 'values'],\n          fields: () => {\n            const fields = mergeFields(this.getStatisticFields(), staticFields?.(rawData.name as string) ?? []);\n            if (this._seriesField) {\n              mergeFields(fields, [\n                {\n                  key: this._seriesField,\n                  operations: ['values']\n                }\n              ]);\n            }\n\n            return fields;\n          },\n          target: 'latest'\n        }\n      },\n      false\n    );\n    return data;\n  }\n\n  // stack\n  private createdStackData(): void {\n    const dataName = `${this.type}_${this.id}_viewStackData`;\n    this._viewStackData = new DataView(this._dataSet, { name: dataName });\n    this._viewStackData.parse([this._viewDataFilter], {\n      type: 'dataview'\n    });\n    this._viewStackData.transform(\n      {\n        type: 'stackSplit',\n        options: {\n          fields: this.getStackGroupFields()\n        }\n      },\n      false\n    );\n  }\n\n  // make sure this function fast\n  protected _noAnimationDataKey(datum: Datum, index: number): unknown | undefined {\n    return index;\n  }\n\n  protected generateDefaultDataKey(dataKey: DataKeyType) {\n    if (isNil(dataKey)) {\n      return (datum: Datum, index: number, context: AddVChartPropertyContext) => {\n        // check if need animation data key\n        if (this._spec.animation === false) {\n          const v = this._noAnimationDataKey(datum, index);\n          if (v !== undefined) {\n            return v;\n          }\n        }\n        const { keyMap } = context;\n        const seriesDataKey = this._getSeriesDataKey(datum);\n        if (keyMap.get(seriesDataKey) === undefined) {\n          keyMap.set(seriesDataKey, 0);\n\n          return seriesDataKey;\n        }\n\n        keyMap.set(seriesDataKey, keyMap.get(seriesDataKey) + 1);\n        return `${seriesDataKey}_${keyMap.get(seriesDataKey)}`;\n      };\n    }\n\n    if (isString(dataKey)) {\n      return (datum: Datum) => datum[dataKey];\n    }\n\n    if (isArray(dataKey) && dataKey.every(d => isString(d))) {\n      return (datum: Datum) => dataKey.map(k => datum[k]).join('-');\n    }\n\n    if (isFunction(dataKey)) {\n      return (datum: Datum, index: number) => dataKey(datum, index);\n    }\n\n    this._option?.onError(`invalid dataKey: ${dataKey}`);\n    return (datum: Datum, index: number) => undefined as string;\n  }\n\n  protected _addDataIndexAndKey() {\n    if (this._rawData?.dataSet) {\n      registerDataSetInstanceTransform(this._rawData.dataSet, 'addVChartProperty', addVChartProperty);\n      this._rawData.transform(\n        {\n          type: 'addVChartProperty',\n          options: {\n            beforeCall: initKeyMap.bind(this),\n            call: addDataKey\n          }\n        },\n        false\n      );\n    }\n  }\n\n  updateRawData(d: any): void {\n    if (!this._rawData) {\n      return;\n    }\n    this._rawData.updateRawData(d);\n  }\n  rawDataUpdate(d: DataView): void {\n    this._rawDataStatistics?.reRunAllTransform();\n    this._rawStatisticsCache = null;\n    this.event.emit(ChartEvent.rawDataUpdate, { model: this });\n  }\n  viewDataFilterOver(d: DataView): void {\n    this.event.emit(ChartEvent.viewDataFilterOver, { model: this });\n  }\n  viewDataUpdate(d: DataView): void {\n    this.event.emit(ChartEvent.viewDataUpdate, { model: this });\n    // 依据数据更新设置渲染结果\n    // 初始化时会触发 viewDataUpdate，但是此时 srView 还未生成，因此实际上不会产生多余的 updateData 调用\n    this._data?.updateData();\n    this._viewDataStatistics && this._viewDataStatistics.reRunAllTransform();\n  }\n  viewDataStatisticsUpdate(d: DataView): void {\n    this.event.emit(ChartEvent.viewDataStatisticsUpdate, { model: this });\n  }\n\n  // 数据到位置值\n  getDatumPositionValue(datum: Datum, field: string) {\n    if (!datum || isNil(field)) {\n      return null;\n    }\n    return datum[field];\n  }\n  getDatumPositionValues(datum: Datum, fields: string | string[]) {\n    if (!datum || isNil(fields)) {\n      return [];\n    }\n\n    if (isString(fields)) {\n      return [datum[fields]];\n    }\n    return fields.map(f => datum[f]);\n  }\n  /** mark end */\n\n  /** 获取参与统计的字段与统计类型 */\n  abstract getStatisticFields(): {\n    key: string;\n    operations: StatisticOperations;\n  }[];\n  /** 获取分组字段 */\n  abstract getGroupFields(): string[];\n  /** 数据到坐标点的映射 */\n  abstract dataToPosition(data: Datum): IPoint;\n  /** 数据到 x 坐标点的映射 */\n  abstract dataToPositionX(data: Datum): number;\n  /** 数据到 y 坐标点的映射 */\n  abstract dataToPositionY(data: Datum): number;\n  /** 数据到坐标点的映射 */\n  abstract valueToPosition(value1: any, value2?: any): IPoint;\n  abstract initMark(): void;\n  abstract initMarkStyle(): void;\n\n  /** stack start */\n  abstract getStackGroupFields(): string[];\n  abstract getStackValueField(): string | undefined;\n  setValueFieldToStack() {\n    // do nothing\n  }\n  setValueFieldToPercent() {\n    // do nothing;\n  }\n  setValueFieldToStackOffsetSilhouette() {\n    // do nothing\n  }\n\n  /** 获取系列中可以被操作的mark(brush需要通过在图元spec中内置state的方式实现框选样式，所以需要获取可被框选的mark) */\n  abstract getActiveMarks(): IMark[];\n\n  initRootMark() {\n    this._rootMark = this._createMark(\n      { type: MarkTypeEnum.group, name: `seriesGroup_${this.type}_${this.id}` },\n      {\n        parent: this._region.getGroupMark?.(),\n        dataView: false\n      }\n    ) as IGroupMark;\n    this._rootMark.setZIndex(this.layoutZIndex);\n  }\n\n  protected _initExtensionMark(options: { hasAnimation: boolean }) {\n    if (!this._spec.extensionMark) {\n      return;\n    }\n    this._spec.extensionMark?.forEach((m, i) => {\n      this._createExtensionMark(m, null, `${PREFIX}_series_${this.id}_extensionMark`, i, options);\n    });\n  }\n\n  private _createExtensionMark(\n    spec: IExtensionMarkSpec<Exclude<EnableMarkType, MarkTypeEnum.group>> | IExtensionGroupMarkSpec,\n    parentMark: null | IGroupMark,\n    namePrefix: string,\n    index: number,\n    options: { hasAnimation: boolean }\n  ) {\n    const mark = this._createMark(\n      { type: spec.type, name: `${namePrefix}_${index}` },\n      {\n        // 避免二次dataflow\n        skipBeforeLayouted: true,\n        markSpec: spec,\n        parent: parentMark,\n        dataView: false,\n        customShape: spec?.customShape\n      }\n    ) as IGroupMark;\n    if (!mark) {\n      return;\n    }\n\n    if (options.hasAnimation) {\n      // 自定义图元默认不添加动画\n      const config = animationConfig({}, userAnimationConfig(spec.type, spec as any, this._markAttributeContext));\n      mark.setAnimationConfig(config);\n    }\n\n    if (spec.type === 'group') {\n      namePrefix = `${namePrefix}_${index}`;\n      spec.children?.forEach((s, i) => {\n        this._createExtensionMark(s as any, mark, namePrefix, i, options);\n      });\n    } else if (!parentMark && (!isNil(spec.dataId) || !isNil(spec.dataIndex))) {\n      const dataView = this._option.getSeriesData(spec.dataId, spec.dataIndex);\n      if (dataView === this._rawData) {\n        mark.setDataView(this.getViewData(), this.getViewDataProductId());\n      } else {\n        mark.setDataView(dataView);\n      }\n    }\n  }\n\n  protected _updateExtensionMarkSpec(lastSpec?: any) {\n    this._spec.extensionMark?.forEach((spec, i) => {\n      const mark = this._marks.getMarkWithInfo({ name: `${this.type}_${this.id}_extensionMark_${i}` });\n      if (!mark) {\n        return;\n      }\n      if (lastSpec && isEqual(lastSpec.extensionMark?.[i], spec)) {\n        return;\n      }\n      this.initMarkStyleWithSpec(mark, spec);\n      mark.updateStaticEncode();\n      mark.updateLayoutState();\n    });\n  }\n\n  getStackData(): ISeriesStackData {\n    return this._viewStackData?.latestData;\n  }\n  /** stack end */\n\n  /** mark */\n  initTrigger() {\n    const triggerSpec = {\n      hover: this._spec.hover,\n      select: this._spec.select\n    };\n    const triggerOptions = {\n      ...this._option,\n      model: this,\n      interaction: this._region.interaction\n    };\n    this._trigger = new Trigger(triggerSpec, triggerOptions);\n  }\n\n  initAnimation() {\n    // do nothing\n  }\n\n  initMarkState() {\n    this.initSeriesStyleState();\n  }\n\n  /**\n   * 初始化initSeriesStyleState所对应的state，配置series-style数组会转化到state实现，每一个seriesItem都对应一个state\n   * @returns\n   */\n  initSeriesStyleState() {\n    const seriesStyle = this._spec.seriesStyle;\n    if (!seriesStyle || !seriesStyle.length) {\n      return;\n    }\n    const groupBy = this._seriesField ?? DEFAULT_DATA_SERIES_FIELD;\n    this.getMarksWithoutRoot().forEach(mark => {\n      const filterMap: { [key: string]: true } = {};\n      const attrMap: { [key: string]: true } = {};\n      const markStyle: { [key: string]: { [key: string]: any } } = {};\n      seriesStyle.forEach(item => {\n        const style = item[mark.name]?.style;\n        if (style) {\n          filterMap[item.name] = true;\n          markStyle[item.name] = markStyle[item.name] || {};\n          Object.keys(style).forEach(key => {\n            attrMap[key] = true;\n            markStyle[item.name][key] = style[key];\n          });\n        }\n      });\n      mark.state.addStateInfo({\n        stateValue: DEFAULT_SERIES_STYLE_NAME,\n        level: -1,\n        filter: (datum: Datum) => {\n          if (Array.isArray(datum)) {\n            if (datum.length === 0) {\n              return false;\n            }\n            return filterMap[datum[0][groupBy]] === true;\n          }\n          return filterMap[datum[groupBy]] === true;\n        }\n      });\n      const style = {};\n      Object.keys(attrMap).forEach(key => {\n        style[key] = (datum: Datum) => {\n          let style;\n          if (Array.isArray(datum)) {\n            if (datum.length === 0) {\n              return undefined;\n            }\n            style = markStyle[datum[0][groupBy]]?.[key];\n          }\n          style = markStyle[datum[groupBy]]?.[key];\n          if (style) {\n            return style;\n          }\n          return mark.getAttribute(key as any, datum);\n        };\n      });\n      this.setMarkStyle(mark, style, DEFAULT_SERIES_STYLE_NAME);\n    });\n  }\n\n  afterInitMark(): void {\n    this.event.emit(ChartEvent.afterInitMark, { model: this });\n    this.setSeriesField(this._spec.seriesField);\n\n    let animationThreshold = this._spec.animationThreshold ?? Number.MAX_SAFE_INTEGER;\n    // set mark stroke color follow series color\n    // only set normal state in the level lower than level Series\n    this.getMarks().forEach(m => {\n      if (m.stateStyle?.normal?.lineWidth) {\n        m.setAttribute('stroke', this.getColorAttribute(), 'normal', AttributeLevel.Base_Series);\n      }\n      const config = m.getProgressiveConfig();\n      if (config) {\n        if (config.large && config.largeThreshold) {\n          animationThreshold = Math.min(animationThreshold, config.largeThreshold);\n        }\n        if (config.progressiveThreshold) {\n          animationThreshold = Math.min(animationThreshold, config.progressiveThreshold);\n        }\n      }\n    });\n    // auto close animation\n    if (this._rawData?.latestData?.length >= animationThreshold) {\n      this._spec.animation = false;\n    }\n  }\n\n  getMarksWithoutRoot(): IMark[] {\n    return this.getMarks().filter(m => !m.name.includes('seriesGroup'));\n  }\n  getMarksInType(type: string | string[]): IMark[] {\n    return this._marks.getMarksInType(type);\n  }\n  getMarkInName(name: string): IMark | undefined {\n    return this._marks.get(name);\n  }\n  getMarkInId(markId: number): IMark | undefined {\n    return this.getMarks().find(m => m.id === markId);\n  }\n  /** mark end */\n\n  /** event */\n  protected initEvent() {\n    this._trigger.init();\n    this._data?.getDataView()?.target.addListener('change', this.viewDataUpdate.bind(this));\n    this._viewDataStatistics?.target.addListener('change', this.viewDataStatisticsUpdate.bind(this));\n  }\n\n  protected _releaseEvent(): void {\n    super._releaseEvent();\n    this._trigger.release();\n  }\n\n  /** event end */\n\n  /** 初始化tooltip helper */\n  protected initTooltip() {\n    this._tooltipHelper = new BaseSeriesTooltipHelper(this);\n  }\n\n  /** updateSpec */\n  _compareSpec(spec: T, prevSpec: T, ignoreCheckKeys?: { [key: string]: true }) {\n    const result = super._compareSpec(spec, prevSpec);\n\n    const currentKeys = Object.keys(prevSpec || {}).sort();\n    const nextKeys = Object.keys(spec || {}).sort();\n    if (!isEqual(currentKeys, nextKeys)) {\n      result.reMake = true;\n      return result;\n    }\n\n    ignoreCheckKeys = ignoreCheckKeys ?? { data: true };\n\n    ignoreCheckKeys.invalidType = true;\n    if (spec.invalidType !== prevSpec.invalidType) {\n      result.reCompile = true;\n    }\n\n    ignoreCheckKeys.extensionMark = true;\n    if (\n      array(spec.extensionMark).length !== array(prevSpec.extensionMark).length ||\n      (<Array<any>>prevSpec.extensionMark)?.some(\n        (mark, index) => mark.type !== spec.extensionMark[index].type || mark.id !== spec.extensionMark[index].id\n      )\n    ) {\n      result.reMake = true;\n    }\n\n    if (result.reMake) {\n      return result;\n    }\n\n    // mark visible logic in compile\n    if (\n      (<Array<any>>prevSpec.extensionMark)?.some((mark, index) => mark.visible !== spec.extensionMark[index].visible)\n    ) {\n      result.reCompile = true;\n    }\n\n    // mark visible logic in compile\n    if (\n      this._marks.getMarks().some(m => {\n        ignoreCheckKeys[m.name] = true;\n        return prevSpec[m.name]?.visible !== spec[m.name]?.visible;\n      })\n    ) {\n      result.reCompile = true;\n    }\n\n    if (\n      currentKeys.some(k => {\n        if (ignoreCheckKeys[k]) {\n          return false;\n        } else if (!isEqual(spec[k], prevSpec[k])) {\n          return true;\n        }\n        return false;\n      })\n    ) {\n      result.reMake = true;\n      return result;\n    }\n\n    return result;\n  }\n\n  _updateSpecData() {\n    if (this._rawData && this._spec.data && !(this._spec.data instanceof DataView)) {\n      updateDataViewInData(this._rawData, this._spec.data, true);\n    }\n  }\n\n  reInit(spec?: T) {\n    super.reInit(spec);\n\n    const marks = this.getMarksWithoutRoot();\n    // FIXME: 合并 mark spec 的时机是否需要统一调整到 this.initMarkStyle() 中？\n    marks.forEach(mark => {\n      this._spec[mark.name] && this.initMarkStyleWithSpec(mark, this._spec[mark.name]);\n    });\n    this.initMarkStyle();\n    marks.forEach(mark => {\n      mark.updateStaticEncode();\n      mark.updateLayoutState(true);\n    });\n    this._updateExtensionMarkSpec(spec);\n    this._updateSpecData();\n\n    if (this._tooltipHelper) {\n      this._tooltipHelper.updateTooltipSpec();\n    }\n  }\n\n  // 首次布局完成后填充系列数据\n  onEvaluateEnd(ctx: IModelEvaluateOption): void {\n    this._data.updateData();\n  }\n  onRender(ctx: IModelRenderOption): void {\n    return;\n  }\n  release(): void {\n    super.release();\n    this._viewDataMap.clear();\n    // TODO: rawData transform clear;\n    // this._dataSet=>// _rawData.tag = vchart\n    // clear add transforms of rawData\n    const transformIndex = this._rawData?.transformsArr?.findIndex(t => t.type === 'addVChartProperty');\n    if (transformIndex >= 0) {\n      this._rawData.transformsArr.splice(transformIndex, 1);\n    }\n    this._data?.release();\n    this._dataSet =\n      this._data =\n      this._rawData =\n      this._rawDataStatistics =\n      this._spec =\n      this._region =\n      this._viewDataStatistics =\n      this._viewStackData =\n        null;\n  }\n\n  setLayoutStartPosition(pos: Partial<IPoint>): void {\n    if (isValidNumber(pos.x)) {\n      this._layoutStartPoint.x = pos.x;\n    }\n    if (isValidNumber(pos.y)) {\n      this._layoutStartPoint.y = pos.y;\n    }\n  }\n\n  setLayoutRect({ width, height }: Partial<ILayoutRect>, levelMap?: Partial<ILayoutRect>) {\n    if (isValidNumber(width)) {\n      this._layoutRect.width = width;\n    }\n\n    if (isValidNumber(height)) {\n      this._layoutRect.height = height;\n    }\n  }\n\n  /** seriesField */\n  getSeriesKeys(): string[] {\n    if (this._seriesField) {\n      return this.getRawDataStatisticsByField(this._seriesField)?.values ?? [];\n    }\n    if (this.name) {\n      return [this.name];\n    }\n    if (this.userId) {\n      return [`${this.userId}`];\n    }\n    return [`${this.type}_${this.id}`];\n  }\n\n  getSeriesStyle(datum: Datum) {\n    return (attribute: string) => this._seriesMark?.getAttribute(attribute as any, datum) ?? undefined;\n  }\n\n  protected _getSeriesInfo(field: string, keys: string[]) {\n    const defaultShapeType = this.getDefaultShapeType();\n    return keys.map(key => {\n      return {\n        key,\n        style: this.getSeriesStyle({\n          [field]: key\n        }),\n        shapeType: defaultShapeType\n      };\n    });\n  }\n\n  getSeriesInfoInField(field: string) {\n    return this._getSeriesInfo(field, this.getRawDataStatisticsByField(field)?.values ?? []);\n  }\n\n  getSeriesInfoList() {\n    return this._getSeriesInfo(this._seriesField ?? DEFAULT_DATA_SERIES_FIELD, this.getSeriesKeys());\n  }\n\n  /** seriesField end */\n\n  // get default color scale\n  // 重复代码太多了，整合一下\n  protected _getDefaultColorScale() {\n    const colorDomain = this.getDefaultColorDomain();\n    const colorRange = this._getDataScheme();\n    return new ColorOrdinalScale().domain(colorDomain).range?.(colorRange);\n  }\n\n  protected _getDataScheme() {\n    return getDataScheme(this.getColorScheme(), this.type as any);\n  }\n\n  /** 获取默认 color scale 的 domain */\n  getDefaultColorDomain(): any[] {\n    return this._seriesField ? this.getViewDataStatistics()?.latestData[this._seriesField]?.values : [];\n  }\n\n  // 通用的默认颜色映射 用户设置优先级比这个高，会在setStyle中处理\n  getColorAttribute() {\n    return {\n      scale: this._option.globalScale.getScale('color') ?? this._getDefaultColorScale(),\n      field: this._seriesField ?? DEFAULT_DATA_SERIES_FIELD\n    };\n  }\n\n  /** 获取维度field */\n  getDimensionField(): string[] {\n    return [];\n  }\n  /** 获取指标field */\n  getMeasureField(): string[] {\n    return [];\n  }\n\n  // 用于 axisHelper 更新\n  protected onMarkPositionUpdate(): void {\n    this.onMarkTreePositionUpdate(this.getMarksWithoutRoot());\n  }\n\n  protected onMarkTreePositionUpdate(marks: IMark[]): void {\n    // do nothing\n  }\n\n  protected _createMark<M extends IMark>(markInfo: ISeriesMarkInfo, option: ISeriesMarkInitOption = {}) {\n    const {\n      key,\n      groupKey,\n      skipBeforeLayouted,\n      themeSpec = {},\n      markSpec,\n      dataView,\n      dataProductId,\n      parent,\n      isSeriesMark,\n      depend,\n      progressive,\n      support3d = this._spec.support3d || !!(this._spec as any).zField,\n      morph = false,\n      customShape\n    } = option;\n    const m = super._createMark<M>(markInfo, {\n      key: key ?? this._getDataIdKey(),\n      support3d,\n      seriesId: this.id,\n      attributeContext: this._markAttributeContext\n    });\n    if (isValid(m)) {\n      this._marks.addMark(m, { name: markInfo.name });\n\n      if (isSeriesMark) {\n        this._seriesMark = m;\n      }\n\n      if (isNil(parent)) {\n        this._rootMark?.addMark(m);\n      } else if (parent !== false) {\n        parent.addMark(m);\n      }\n\n      if (isNil(dataView)) {\n        m.setDataView(this.getViewData(), this.getViewDataProductId());\n        m.setSkipBeforeLayouted(true);\n      } else if (dataView !== false) {\n        m.setDataView(dataView, dataProductId);\n      }\n\n      if (isBoolean(skipBeforeLayouted)) {\n        m.setSkipBeforeLayouted(skipBeforeLayouted);\n      }\n\n      if (isValid(depend)) {\n        m.setDepend(...array(depend));\n      }\n\n      const spec = this.getSpec() || ({} as T);\n\n      m.setMorph(morph);\n      m.setMorphKey(spec.morph?.morphKey || `${this._specIndex}`);\n      m.setMorphElementKey(spec.morph?.morphElementKey ?? option.defaultMorphElementKey);\n\n      if (!isNil(progressive)) {\n        m.setProgressiveConfig(progressive);\n      }\n\n      if (!isNil(groupKey)) {\n        m.setGroupKey(groupKey);\n      }\n\n      if (customShape) {\n        m.setCustomizedShapeCallback(customShape);\n      }\n\n      this.initMarkStyleWithSpec(m, mergeSpec({}, themeSpec, markSpec || spec[m.name]));\n    }\n    return m;\n  }\n\n  protected _getDataIdKey() {\n    // 系列图元默认使用 rawData 初始生成的唯一数据 id 作为 key\n    return super._getDataIdKey() ?? DEFAULT_DATA_KEY;\n  }\n\n  /**\n   * 默认数据 id 生成逻辑。\n   * 数据中的 维度A的值_维度B的值_***_维度C的值_seriesField的值_index\n   * index作用是为了避免 id 重复\n   */\n  protected _getSeriesDataKey(datum: Datum) {\n    let key = '';\n    if (!datum) {\n      return key;\n    }\n\n    const dimensionFields = this.getDimensionField();\n    key = dimensionFields.map(field => datum[field]).join('_');\n\n    const seriesField = this.getSeriesField();\n\n    if (seriesField && !dimensionFields.includes(seriesField)) {\n      key += `_${datum[seriesField]}`;\n    }\n\n    return key;\n  }\n\n  /**\n   * data\n   */\n  addViewDataFilter(option: ITransformOptions) {\n    (this._viewDataFilter ?? this.getViewData())?.transform(option, false);\n  }\n\n  reFilterViewData() {\n    (this._viewDataFilter ?? this.getViewData())?.reRunAllTransform();\n  }\n\n  reTransformViewData() {\n    this._data?.getDataView()?.reRunAllTransform();\n  }\n\n  fillData() {\n    this.getRawData()?.reRunAllTransform();\n  }\n\n  compile() {\n    this.compileData(); // 系列只需要编译数据，mark 将在 region 编译过程中编译\n  }\n\n  getDefaultShapeType() {\n    return 'circle';\n  }\n\n  getFieldAlias(field: string) {\n    if (\n      field === STACK_FIELD_END ||\n      field === STACK_FIELD_END_PERCENT ||\n      field === STACK_FIELD_START ||\n      field === STACK_FIELD_START_PERCENT\n    ) {\n      field = this.getStackValueField();\n    }\n    return getFieldAlias(this.getRawData(), field) ?? field;\n  }\n\n  getMarkInfoList() {\n    const list = super.getMarkInfoList();\n    if (!list.length) {\n      return Object.values<ISeriesMarkInfo>(seriesMarkInfoMap[this.type] ?? {});\n    }\n    return list;\n  }\n\n  protected _getInvalidConnectType() {\n    return this._invalidType === 'zero' ? 'zero' : this._invalidType === 'link' ? 'connect' : 'none';\n  }\n\n  protected _getInvalidDefined = (datum: Datum) => couldBeValidNumber(datum[this.getStackValueField()]);\n}\n"]}