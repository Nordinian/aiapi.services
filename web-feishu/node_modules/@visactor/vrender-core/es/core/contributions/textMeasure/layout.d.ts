import type { ITextMeasure, TextOptionsType } from '../../../interface/text';
import type { TextLayoutBBox, LayoutItemType, LayoutType, TextAlignType, TextBaselineType } from '../../../interface';
export declare class CanvasTextLayout {
    private fontFamily;
    private textOptions;
    private textMeasure;
    constructor(fontFamily: string, options: TextOptionsType, textMeasure: ITextMeasure);
    LayoutBBox(bbox: TextLayoutBBox, textAlign: TextAlignType, textBaseline: TextBaselineType): TextLayoutBBox;
    GetLayout(str: string, width: number, height: number, textAlign: TextAlignType, textBaseline: TextBaselineType, lineHeight: number, suffix: string, wordBreak: boolean, suffixPosition: 'start' | 'end' | 'middle'): LayoutType;
    GetLayoutByLines(lines: (string | number)[], textAlign: TextAlignType, textBaseline: TextBaselineType, lineHeight: number, suffix: string, wordBreak: boolean, lineWidth?: number, suffixPosition?: 'start' | 'end' | 'middle'): LayoutType;
    layoutWithBBox(bbox: TextLayoutBBox, lines: LayoutItemType[], textAlign: TextAlignType, textBaseline: TextBaselineType, lineHeight: number): LayoutType;
    private lineOffset;
}
