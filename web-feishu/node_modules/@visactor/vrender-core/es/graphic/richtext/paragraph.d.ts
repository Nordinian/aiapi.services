import type { IContext2d, IRichTextParagraphCharacter } from '../../interface';
export default class Paragraph {
    text: string;
    ascent: number;
    descent: number;
    width: number;
    height: number;
    lineHeight: number;
    fontSize: number;
    length: number;
    newLine: boolean;
    character: IRichTextParagraphCharacter;
    left: number;
    top: number;
    direction?: 'horizontal' | 'vertical';
    widthOrigin?: number;
    heightOrigin?: number;
    textBaseline?: CanvasTextBaseline;
    ellipsis: 'normal' | 'add' | 'replace' | 'hide';
    ellipsisWidth: number;
    ellipsisOtherParagraphWidth: number;
    verticalEllipsis?: boolean;
    constructor(text: string, newLine: boolean, character: IRichTextParagraphCharacter);
    updateWidth(): void;
    draw(ctx: IContext2d, baseline: number, deltaLeft: number, isLineFirst: boolean, textAlign: string): void;
    getWidthWithEllips(direction: string): number;
}
export declare function seperateParagraph(paragraph: Paragraph, index: number): Paragraph[];
