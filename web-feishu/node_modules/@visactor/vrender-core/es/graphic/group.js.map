{"version":3,"sources":["../src/graphic/group.ts"],"names":[],"mappings":"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","file":"group.js","sourcesContent":["import type { AABBBounds, Matrix, OBBBounds } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { Point } from '@visactor/vutils';\nimport { application } from '../application';\nimport type {\n  IStage,\n  GraphicAttributeMap,\n  INode,\n  IGraphic,\n  ITheme,\n  IThemeSpec,\n  ILayer,\n  GraphicType\n} from '../interface';\nimport type { IGroup, IGroupGraphicAttribute } from '../interface/graphic/group';\nimport { Graphic, NOWORK_ANIMATE_ATTR } from './graphic';\nimport { getTheme, Theme } from './theme';\nimport { parsePadding } from '../common/utils';\nimport { UpdateTag, IContainPointMode } from '../common/enums';\nimport { GROUP_NUMBER_TYPE } from './constants';\nimport { DefaultTransform } from './config';\n\n// Group更新AABBBounds的策略\nexport enum GroupUpdateAABBBoundsMode {\n  // Group较少的情况，不会批量设置所有父层的tag，而是每次都查找\n  LESS_GROUP = 0,\n  // Group较多的情况，每次都会设置tag到最顶层\n  MORE_GROUP = 1\n}\n\nexport class Group extends Graphic<IGroupGraphicAttribute> implements IGroup {\n  type: GraphicType = 'group';\n  parent: any = null;\n  isContainer: boolean = true;\n  // 子元素的更新标记\n  declare _childUpdateTag: number;\n\n  declare theme?: ITheme;\n\n  static NOWORK_ANIMATE_ATTR = NOWORK_ANIMATE_ATTR;\n\n  constructor(params: IGroupGraphicAttribute) {\n    super(params);\n    this.numberType = GROUP_NUMBER_TYPE;\n    this._childUpdateTag = UpdateTag.UPDATE_BOUNDS;\n    // this.theme = new Theme();\n  }\n\n  setMode(mode: '2d' | '3d') {\n    mode === '3d' ? this.set3dMode() : this.set2dMode();\n  }\n\n  set3dMode() {\n    this.in3dMode = true;\n    // this.forEachChildren((c: IGraphic) => {\n    //   c.setMode('3d');\n    // });\n  }\n  set2dMode() {\n    this.in3dMode = false;\n    // this.forEachChildren((c: IGraphic) => {\n    //   c.setMode('2d');\n    // });\n  }\n\n  setTheme(t: IThemeSpec) {\n    if (!this.theme) {\n      this.theme = new Theme();\n    }\n    return this.theme.setTheme(t, this);\n  }\n\n  createTheme() {\n    if (!this.theme) {\n      this.theme = new Theme();\n    }\n  }\n\n  hideAll() {\n    this.setAttribute('visible', false);\n    this.forEachChildren((item: IGraphic) => {\n      if (item.isContainer && (item as any).hideAll) {\n        (item as any).hideAll();\n      } else {\n        item.setAttribute('visible', false);\n      }\n    });\n  }\n\n  showAll() {\n    this.setAttribute('visible', true);\n    this.forEachChildren((item: IGraphic) => {\n      if (item.isContainer && (item as any).showAll) {\n        (item as any).showAll();\n      } else {\n        item.setAttribute('visible', true);\n      }\n    });\n  }\n\n  /**\n   * 是否包含某个点（点需要是全局坐标系）\n   * group containsPoint 只需要判断bounds\n   * TODO: group的shape判断\n   * @param x\n   * @param y\n   * @param mode\n   * @returns\n   */\n  containsPoint(x: number, y: number, mode: IContainPointMode): boolean {\n    if (mode === IContainPointMode.GLOBAL) {\n      // 转换x，y更精准\n      const point = new Point(x, y);\n      if (this.parent) {\n        this.parent.globalTransMatrix.transformPoint(point, point);\n      }\n      return this.AABBBounds.contains(point.x, point.y);\n    }\n    return this.AABBBounds.contains(x, y);\n  }\n\n  shouldUpdateAABBBounds(): boolean {\n    // 检索自己是否需要更新\n    if (super.shouldUpdateAABBBounds()) {\n      return true;\n    }\n    // 检索叶子节点是否有更新（如果children是叶子节点的话）\n    if (this._childUpdateTag & UpdateTag.UPDATE_BOUNDS) {\n      return true;\n    }\n    return false;\n    // // 检索是否子group需要更新\n    // let needUpdate = false;\n    // this.forEachChildren((node: IGraphic) => {\n    //   // 只查找group层级\n    //   if (node.isContainer && (node as Group).shouldUpdateAABBBounds()) {\n    //     needUpdate = true;\n    //     return true;\n    //   }\n    //   return false;\n    // });\n    // return needUpdate;\n  }\n\n  protected tryUpdateAABBBounds(): AABBBounds {\n    if (!this.shouldUpdateAABBBounds()) {\n      return this._AABBBounds;\n    }\n    application.graphicService.beforeUpdateAABBBounds(this, this.stage, true, this._AABBBounds);\n    const selfChange = this.shouldSelfChangeUpdateAABBBounds();\n    const bounds = this.doUpdateAABBBounds();\n    this.addUpdateLayoutTag();\n    application.graphicService.afterUpdateAABBBounds(this, this.stage, this._AABBBounds, this, selfChange);\n    return bounds;\n  }\n\n  /**\n   * 大部分group不需要更新matrix，这里特殊优化一下\n   * 更新局部matrix的具体函数\n   */\n  protected doUpdateLocalMatrix() {\n    const {\n      x = DefaultTransform.x,\n      y = DefaultTransform.y,\n      dx = DefaultTransform.dx,\n      dy = DefaultTransform.dy,\n      scaleX = DefaultTransform.scaleX,\n      scaleY = DefaultTransform.scaleY,\n      angle = DefaultTransform.angle,\n      postMatrix\n    } = this.attribute;\n    if (x === 0 && y === 0 && dx === 0 && dy === 0 && scaleX === 1 && scaleY === 1 && angle === 0 && !postMatrix) {\n      this._transMatrix.reset();\n      return;\n    }\n    return super.doUpdateLocalMatrix();\n  }\n\n  protected doUpdateAABBBounds(): AABBBounds {\n    const attribute = this.attribute;\n    const groupTheme = getTheme(this).group;\n    // debugger;\n    this._AABBBounds.setValue(Infinity, Infinity, -Infinity, -Infinity);\n    const bounds = application.graphicService.updateGroupAABBBounds(\n      attribute,\n      groupTheme,\n      this._AABBBounds,\n      this\n    ) as AABBBounds;\n\n    const { boundsPadding = groupTheme.boundsPadding } = attribute;\n    const paddingArray = parsePadding(boundsPadding);\n    if (paddingArray) {\n      bounds.expand(paddingArray);\n    }\n    // 更新bounds之后需要设置父节点，否则tag丢失\n    this.parent && this.parent.addChildUpdateBoundTag();\n    this.clearUpdateBoundTag();\n\n    this._emitCustomEvent('AAABBBoundsChange');\n    return bounds;\n  }\n\n  protected clearUpdateBoundTag() {\n    this._updateTag &= UpdateTag.CLEAR_BOUNDS;\n    this._childUpdateTag &= UpdateTag.CLEAR_BOUNDS;\n  }\n\n  protected tryUpdateOBBBounds(): OBBBounds {\n    throw new Error('暂不支持');\n  }\n\n  addUpdateBoundTag() {\n    this._updateTag |= UpdateTag.UPDATE_BOUNDS; // for bounds\n    if (this.parent) {\n      this.parent.addChildUpdateBoundTag();\n    }\n  }\n\n  addChildUpdateBoundTag() {\n    // 如果已经设置过updateTag，那就不需要设置了\n    if (this._childUpdateTag & UpdateTag.UPDATE_BOUNDS) {\n      return;\n    }\n    // 如果没有设置过，那么继续向上设置\n    this._childUpdateTag |= UpdateTag.UPDATE_BOUNDS;\n    this.parent && this.parent.addChildUpdateBoundTag();\n  }\n\n  getTheme() {\n    return this.theme.getTheme(this);\n  }\n\n  // getDefaultAttribute(name: string) {\n  //   return DefaultGroupAttribute[name];\n  // }\n\n  /* 场景树结构 */\n  incrementalAppendChild(node: INode): INode | null {\n    const data = super.appendChild(node);\n    if (this.stage && data) {\n      (data as unknown as this).stage = this.stage;\n      (data as unknown as this).layer = this.layer;\n    }\n    this.addUpdateBoundTag();\n    application.graphicService.onAddIncremental(node as unknown as IGraphic, this, this.stage);\n    return data;\n  }\n  incrementalClearChild(): void {\n    super.removeAllChild();\n    this.addUpdateBoundTag();\n    application.graphicService.onClearIncremental(this, this.stage);\n    return;\n  }\n\n  appendChild(node: INode, addStage: boolean = true): INode | null {\n    const data = super.appendChild(node);\n    if (addStage && this.stage && data) {\n      (data as unknown as this).setStage(this.stage, this.layer);\n    }\n    this.addUpdateBoundTag();\n    return data;\n  }\n  insertBefore(newNode: INode, referenceNode: INode): INode | null {\n    const data = super.insertBefore(newNode, referenceNode);\n    if (this.stage && data) {\n      (data as unknown as this).setStage(this.stage, this.layer);\n    }\n    this.addUpdateBoundTag();\n    return data;\n  }\n  insertAfter(newNode: INode, referenceNode: INode): INode | null {\n    const data = super.insertAfter(newNode, referenceNode);\n    if (this.stage && data) {\n      (data as unknown as this).setStage(this.stage, this.layer);\n    }\n    this.addUpdateBoundTag();\n    return data;\n  }\n  insertInto(newNode: INode, idx: number): INode | null {\n    const data = super.insertInto(newNode, idx);\n    if (this.stage && data) {\n      (data as unknown as this).setStage(this.stage, this.layer);\n    }\n    this.addUpdateBoundTag();\n    return data;\n  }\n\n  removeChild(child: IGraphic): IGraphic {\n    const data = super.removeChild(child);\n    child.stage = null;\n    application.graphicService.onRemove(child);\n    this.addUpdateBoundTag();\n    return data as IGraphic;\n  }\n\n  removeAllChild(): void {\n    this.forEachChildren((child: IGraphic) => {\n      application.graphicService.onRemove(child);\n    });\n    super.removeAllChild();\n    this.addUpdateBoundTag();\n  }\n\n  setStage(stage?: IStage, layer?: ILayer) {\n    if (this.stage !== stage) {\n      this.stage = stage;\n      this.layer = layer;\n      this.setStageToShadowRoot(stage, layer);\n      this._onSetStage && this._onSetStage(this, stage, layer);\n      application.graphicService.onSetStage(this, stage);\n      this.forEachChildren(item => {\n        (item as any).setStage(stage, this.layer);\n      });\n    }\n  }\n  /**\n   * 更新位置tag，包括全局tag和局部tag\n   */\n  addUpdatePositionTag() {\n    super.addUpdatePositionTag();\n    // 批量设置底层group的global tag\n    this.forEachChildren((g: Group) => {\n      if (g.isContainer) {\n        g.addUpdateGlobalPositionTag();\n      }\n    });\n  }\n  /**\n   * 更新全局位置tag\n   */\n  addUpdateGlobalPositionTag() {\n    super.addUpdateGlobalPositionTag();\n    // 批量设置底层group的global tag\n    this.forEachChildren((g: Group) => {\n      if (g.isContainer) {\n        g.addUpdateGlobalPositionTag();\n      }\n    });\n  }\n  /**\n   * group更新全局的transMatrix\n   * @param clearTag\n   * @returns\n   */\n  protected tryUpdateGlobalTransMatrix(clearTag: boolean = true): Matrix {\n    if (this.shouldUpdateGlobalMatrix()) {\n      if (!this._globalTransMatrix) {\n        this._globalTransMatrix = this.parent\n          ? (this.parent as IGroup).globalTransMatrix.clone()\n          : this.transMatrix.clone();\n      } else if (this.parent) {\n        const m = (this.parent as IGroup).globalTransMatrix;\n        this._globalTransMatrix.setValue(m.a, m.b, m.c, m.d, m.e, m.f);\n      }\n      this.doUpdateGlobalMatrix();\n      clearTag && this.clearUpdateGlobalPositionTag();\n    }\n    return this._globalTransMatrix;\n  }\n  /**\n   * 查找自身更新global的tag，如果存在，就更新\n   * @returns\n   */\n  shouldUpdateGlobalMatrix(): boolean {\n    const shouldUpdate = !!(this._updateTag & UpdateTag.UPDATE_GLOBAL_MATRIX);\n    return shouldUpdate;\n  }\n\n  private _getChildByName<T extends INode = INode>(name: string, deep?: boolean): T | null {\n    return this.find(node => node.name === name, deep);\n  }\n\n  /**\n   * if graphic exist then update attributes, otherwise create a new instance\n   * @param graphicName the name of graphic\n   * @param attributes the attributes of graphic\n   * @param graphicType the type of graphic\n   * @returns the graphic instance\n   */\n  createOrUpdateChild<T extends keyof GraphicAttributeMap>(\n    graphicName: string,\n    attributes: GraphicAttributeMap[T],\n    graphicType: T\n  ): INode {\n    let graphic = this._getChildByName(graphicName) as IGraphic;\n    if (graphic) {\n      graphic.setAttributes(attributes);\n    } else {\n      graphic = application.graphicService.creator[graphicType](attributes as any);\n      graphic.name = graphicName;\n      this.add(graphic);\n    }\n\n    return graphic;\n  }\n\n  clone() {\n    return new Group({ ...this.attribute });\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Group.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createGroup(attributes: IGroupGraphicAttribute): IGroup {\n  return new Group(attributes);\n}\n"]}