"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.getAngleByPoint = exports.polarToCartesian = exports.clampAngleByDegree = exports.clampDegree = exports.clampAngleByRadian = exports.clampRadian = exports.radianToDegree = exports.degreeToRadian = void 0;

const math_1 = require("./math");

function degreeToRadian(degree) {
    return degree * (Math.PI / 180);
}

function radianToDegree(radian) {
    return 180 * radian / Math.PI;
}

exports.degreeToRadian = degreeToRadian, exports.radianToDegree = radianToDegree;

const clampRadian = (angle = 0) => {
    if (angle < 0) for (;angle < -math_1.tau; ) angle += math_1.tau; else if (angle > 0) for (;angle > math_1.tau; ) angle -= math_1.tau;
    return angle;
};

exports.clampRadian = clampRadian, exports.clampAngleByRadian = exports.clampRadian;

const clampDegree = (a = 0) => a > 360 || a < -360 ? a % 360 : a;

function polarToCartesian(center, radius, angleInRadian) {
    return {
        x: center.x + radius * Math.cos(angleInRadian),
        y: center.y + radius * Math.sin(angleInRadian)
    };
}

function getAngleByPoint(center, point) {
    return Math.atan2(point.y - center.y, point.x - center.x);
}

exports.clampDegree = clampDegree, exports.clampAngleByDegree = exports.clampDegree, 
exports.polarToCartesian = polarToCartesian, exports.getAngleByPoint = getAngleByPoint;