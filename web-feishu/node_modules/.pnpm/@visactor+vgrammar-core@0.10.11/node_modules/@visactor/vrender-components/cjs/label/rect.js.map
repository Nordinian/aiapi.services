{"version":3,"sources":["../src/label/rect.ts"],"names":[],"mappings":"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","file":"rect.js","sourcesContent":["import type { IBoundsLike } from '@visactor/vutils';\nimport { merge } from '@visactor/vutils';\nimport type { RectLabelAttrs } from './type';\nimport { LabelBase } from './base';\nimport type { ComponentOptions } from '../interface';\n\nexport class RectLabel extends LabelBase<RectLabelAttrs> {\n  static tag = 'rect-label';\n\n  static defaultAttributes: Partial<RectLabelAttrs> = {\n    textStyle: {\n      fontSize: 12,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle',\n      boundsPadding: [-1, 0, -1, 0] // to ignore the textBound buf\n    },\n    position: 'top',\n    offset: 5,\n    pickable: false\n  };\n\n  constructor(attributes: RectLabelAttrs, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, RectLabel.defaultAttributes, attributes));\n  }\n\n  protected labeling(textBounds: IBoundsLike, graphicBounds: IBoundsLike, position = 'top', offset = 0) {\n    if (!textBounds || !graphicBounds) {\n      return;\n    }\n\n    const { x1, y1, x2, y2 } = textBounds;\n    const width = Math.abs(x2 - x1);\n    const height = Math.abs(y2 - y1);\n\n    const rectWidth = Math.abs(graphicBounds.x2 - graphicBounds.x1);\n    const rectHeight = Math.abs(graphicBounds.y2 - graphicBounds.y1);\n    let anchorX = (graphicBounds.x1 + graphicBounds.x2) / 2;\n    let anchorY = (graphicBounds.y1 + graphicBounds.y2) / 2;\n\n    let sx = 0;\n    let sy = 0;\n\n    switch (position) {\n      case 'top':\n      case 'inside-top':\n        sy = -0.5;\n        break;\n      case 'bottom':\n      case 'inside-bottom':\n        sy = 0.5;\n        break;\n      case 'left':\n      case 'inside-left':\n        sx = -0.5;\n        break;\n      case 'right':\n      case 'inside-right':\n        sx = 0.5;\n        break;\n      case 'top-right':\n        sx = 0.5;\n        sy = -0.5;\n        break;\n      case 'top-left':\n        sx = -0.5;\n        sy = -0.5;\n        break;\n      case 'bottom-right':\n        sx = 0.5;\n        sy = 0.5;\n        break;\n      case 'bottom-left':\n        sx = -0.5;\n        sy = 0.5;\n    }\n\n    anchorX += sx * rectWidth;\n    anchorY += sy * rectHeight;\n\n    let vx = 0;\n    let vy = 0;\n\n    const isInside = position.includes('inside');\n\n    if (position.includes('top')) {\n      vy = isInside ? 1 : -1;\n    } else if (position.includes('bottom')) {\n      vy = isInside ? -1 : 1;\n    } else if (position.includes('left')) {\n      vx = isInside ? 1 : -1;\n    } else if (position.includes('right')) {\n      vx = isInside ? -1 : 1;\n    }\n\n    switch (position) {\n      case 'top-right':\n      case 'bottom-right':\n        vx = -1;\n        break;\n      case 'top-left':\n      case 'bottom-left':\n        vx = 1;\n        break;\n      default:\n        break;\n    }\n\n    const x = anchorX + vx * offset + (vx * width) / 2;\n    const y = anchorY + vy * offset + (vy * height) / 2;\n\n    return { x, y };\n  }\n}\n"]}