import type { IGraphic, IGroup, IPlugin, IPluginService } from '@visactor/vrender-core';
import { ScrollBar } from './scrollbar';
import type { IAABBBounds } from '@visactor/vutils';
type IParams = {
    timeout?: number;
    bufferV?: number;
    bufferH?: number;
};
export declare class ScrollBarPlugin implements IPlugin {
    name: 'scrollbar';
    activeEvent: 'onRegister';
    pluginService: IPluginService;
    _uid: number;
    key: string;
    activeGraphic: IGraphic;
    childrenBounds: IAABBBounds;
    scrollContainerBounds: IAABBBounds;
    static defaultParams: IParams;
    params: IParams;
    activate(context: IPluginService): void;
    scroll: (e: {
        deltaX: number;
        deltaY: number;
        target: IGraphic;
    }) => void;
    addOrUpdateScroll(showH: boolean, showV: boolean, container: IGroup, scrollContainer: IGroup): {
        h: boolean;
        deltaH: number;
        v: boolean;
        deltaV: number;
    };
    addOrUpdateHScroll(scrollContainerB: IAABBBounds, container: IGroup, scrollBar?: ScrollBar): {
        valid: boolean;
        delta: number;
    };
    addOrUpdateVScroll(scrollContainerB: IAABBBounds, container: IGroup, scrollBar?: ScrollBar): {
        valid: boolean;
        delta: number;
    };
    disappearScrollBar(scrollBar: ScrollBar, valid: boolean): void;
    getScrollContainer(graphic: IGraphic): {
        g: IGroup;
        showH: boolean;
        showV: boolean;
    } | null;
    deactivate(context: IPluginService): void;
}
export {};
