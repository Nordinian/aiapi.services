"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    void 0 === k2 && (k2 = k);
    var desc = Object.getOwnPropertyDescriptor(m, k);
    desc && !("get" in desc ? !m.__esModule : desc.writable || desc.configurable) || (desc = {
        enumerable: !0,
        get: function() {
            return m[k];
        }
    }), Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    void 0 === k2 && (k2 = k), o[k2] = m[k];
}), __exportStar = this && this.__exportStar || function(m, exports) {
    for (var p in m) "default" === p || Object.prototype.hasOwnProperty.call(exports, p) || __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.calcLineCache = void 0;

const linear_1 = require("./linear"), basis_1 = require("./basis"), monotone_1 = require("./monotone"), step_1 = require("./step"), linear_closed_1 = require("./linear-closed");

function calcLineCache(points, curveType, params) {
    switch (curveType) {
      case "linear":
      default:
        return (0, linear_1.genLinearSegments)(points, params);

      case "basis":
        return (0, basis_1.genBasisSegments)(points, params);

      case "monotoneX":
        return (0, monotone_1.genMonotoneXSegments)(points, params);

      case "monotoneY":
        return (0, monotone_1.genMonotoneYSegments)(points, params);

      case "step":
        return (0, step_1.genStepSegments)(points, .5, params);

      case "stepBefore":
        return (0, step_1.genStepSegments)(points, 0, params);

      case "stepAfter":
        return (0, step_1.genStepSegments)(points, 1, params);

      case "linearClosed":
        return (0, linear_closed_1.genLinearClosedSegments)(points, params);
    }
}

__exportStar(require("./linear"), exports), __exportStar(require("./linear-closed"), exports), 
__exportStar(require("./basis"), exports), __exportStar(require("./monotone"), exports), 
__exportStar(require("./step"), exports), __exportStar(require("./curve/curve-context"), exports), 
exports.calcLineCache = calcLineCache;
//# sourceMappingURL=index.js.map
