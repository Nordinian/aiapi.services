{"version":3,"sources":["../src/brush/brush.ts"],"names":[],"mappings":"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","file":"brush.js","sourcesContent":["/**\n * @description 框选组件\n */\nimport type { FederatedPointerEvent, IGroup, IPolygon } from '@visactor/vrender-core';\nimport { graphicCreator, vglobal } from '@visactor/vrender-core';\nimport type { IBounds, IPointLike } from '@visactor/vutils';\nimport { cloneDeep, debounce, merge, polygonContainPoint, throttle } from '@visactor/vutils';\nimport { AbstractComponent } from '../core/base';\nimport type { BrushAttributes } from './type';\nimport { IOperateType } from './type';\nimport { DEFAULT_BRUSH_ATTRIBUTES, DEFAULT_SIZE_THRESHOLD } from './config';\nimport type { ComponentOptions } from '../interface';\nimport { loadBrushComponent } from './register';\n\nconst delayMap = {\n  debounce: debounce,\n  throttle: throttle\n};\n\nloadBrushComponent();\nexport class Brush extends AbstractComponent<Required<BrushAttributes>> {\n  name = 'brush';\n  static defaultAttributes = DEFAULT_BRUSH_ATTRIBUTES;\n\n  private _container!: IGroup;\n\n  // 绘制mask时的相关属性\n  private _activeDrawState = false; // 用于标记绘制状态\n  private _cacheDrawPoints: IPointLike[] = []; // 用于维护鼠标走过的路径，主要用于绘制mask的点\n  private _isDrawedBeforeEnd = false;\n  // 移动mask时的相关属性\n  private _activeMoveState = false; // 用于标记移动状态\n  private _operatingMaskMoveDx = 0; // 用于标记移动的位移量\n  private _operatingMaskMoveDy = 0;\n  private _operatingMaskMoveRangeX: [number, number] = [-Infinity, Infinity];\n  private _operatingMaskMoveRangeY: [number, number] = [-Infinity, Infinity];\n  private _cacheMovePoint!: IPointLike; // 用于维护鼠标所在位置，主要用于计算位移量\n\n  private _operatingMask!: IPolygon; // 用于标记正在绘制的mask 或 正在移动的mask\n\n  // 透出给上层的属性（主要是所有mask的AABBBounds，这里用的是dict存储方便添加和修改）\n  private _brushMaskAABBBoundsDict: { [name: string]: IBounds } = {};\n\n  constructor(attributes: BrushAttributes, options?: ComponentOptions) {\n    super(options?.skipDefault ? attributes : merge({}, Brush.defaultAttributes, attributes));\n  }\n\n  private _bindBrushEvents(): void {\n    if (this.attribute.disableTriggerEvent) {\n      return;\n    }\n    const {\n      delayType = 'throttle',\n      delayTime = 0,\n      trigger = DEFAULT_BRUSH_ATTRIBUTES.trigger,\n      updateTrigger = DEFAULT_BRUSH_ATTRIBUTES.updateTrigger,\n      endTrigger = DEFAULT_BRUSH_ATTRIBUTES.endTrigger,\n      resetTrigger = DEFAULT_BRUSH_ATTRIBUTES.resetTrigger\n    } = this.attribute as BrushAttributes;\n    // 拖拽绘制开始\n    this.stage.addEventListener(trigger, this._onBrushStart as EventListener);\n    // 拖拽绘制时\n    this.stage.addEventListener(updateTrigger, delayMap[delayType](this._onBrushing, delayTime) as EventListener);\n    // 拖拽绘制结束\n    this.stage.addEventListener(endTrigger, this._onBrushEnd as EventListener);\n    this.stage.addEventListener(resetTrigger, this._onBrushEnd as EventListener);\n  }\n\n  private _isPosInBrushMask(e: FederatedPointerEvent) {\n    const pos = this.eventPosToStagePos(e);\n    const brushMasks = this._container.getChildren();\n    for (let i = 0; i < brushMasks.length; i++) {\n      const { points = [], dx = 0, dy = 0 } = (brushMasks[i] as IPolygon).attribute;\n      const pointsConsiderOffset: IPointLike[] = points.map((point: IPointLike) => {\n        return {\n          x: point.x + dx,\n          y: point.y + dy\n        };\n      });\n      if (polygonContainPoint(pointsConsiderOffset, pos.x, pos.y)) {\n        this._operatingMask = brushMasks[i] as IPolygon;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 开始绘制 或 移动\n   * @description\n   * 1. 判断状态: 如果在brushMask中，则属于移动状态; 否则属于绘制状态\n   *（移动状态和绘制状态互斥, 且移动状态考虑brushMoved配置, 如果在brush点内但brushMoved为false, 则走绘制状态, 而非两个状态都不响应, 此效果与echarts保持一致）\n   * 2. 判断坐标是否在有效交互范围内\n   * 2. 如果是移动状态: 标记移动状态 & 标记正在移动的mask & 初始化mask的dx和dy\n   * 3. 如果是绘制状态: 标记绘制状态 & 标记正在绘制的mask & 清除之前的mask & 添加新的mask\n   */\n  private _onBrushStart = (e: FederatedPointerEvent) => {\n    if (this._outOfInteractiveRange(e)) {\n      return;\n    }\n    e.stopPropagation();\n\n    const brushMoved = this.attribute.brushMoved ?? true;\n    this._activeMoveState = brushMoved && this._isPosInBrushMask(e); // 如果是移动状态，在这里会标记operatingMask为正在移动的mask\n    this._activeDrawState = !this._activeMoveState;\n\n    this._activeDrawState && this._initDraw(e); // 如果是绘制状态，在这里会标记operatingMask为正在绘制的mask\n    this._activeMoveState && this._initMove(e);\n  };\n\n  /**\n   * 绘制 或 移动 中\n   * @description\n   * 1. 如果是绘制状态: 更新_cacheDrawPoints 和 mask的points属性\n   * 2. 如果是移动状态: 标记移动状态 & 计算位移量 & 给被移动的mask偏移属性\n   */\n  private _onBrushing = (e: FederatedPointerEvent) => {\n    if (this._outOfInteractiveRange(e)) {\n      return;\n    }\n\n    if (this._activeDrawState || this._activeMoveState) {\n      e.stopPropagation();\n    }\n\n    this._activeDrawState && this._drawing(e); // 如果是绘制状态，在这里会标记operatingMask为正在绘制的mask\n    this._activeMoveState && this._moving(e);\n  };\n\n  /**\n   * 结束绘制 和 移动\n   * @description 取消绘制 和 移动 状态\n   */\n  private _onBrushEnd = (e: FederatedPointerEvent) => {\n    e.preventDefault();\n    const { removeOnClick = true } = this.attribute as BrushAttributes;\n    if (this._activeDrawState && !this._isDrawedBeforeEnd && removeOnClick) {\n      this._container.incrementalClearChild();\n      this._brushMaskAABBBoundsDict = {};\n      this._dispatchEvent(IOperateType.brushClear, {\n        operateMask: this._operatingMask as any,\n        operatedMaskAABBBounds: this._brushMaskAABBBoundsDict,\n        event: e\n      });\n    } else {\n      if (this._activeDrawState) {\n        this._dispatchEvent(IOperateType.drawEnd, {\n          operateMask: this._operatingMask as any,\n          operatedMaskAABBBounds: this._brushMaskAABBBoundsDict,\n          event: e\n        });\n      }\n\n      if (this._activeMoveState) {\n        this._dispatchEvent(IOperateType.moveEnd, {\n          operateMask: this._operatingMask as any,\n          operatedMaskAABBBounds: this._brushMaskAABBBoundsDict,\n          event: e\n        });\n      }\n    }\n\n    this._activeDrawState = false;\n    this._activeMoveState = false;\n    this._isDrawedBeforeEnd = false;\n    if (this._operatingMask) {\n      this._operatingMask.setAttribute('pickable', false);\n    }\n  };\n\n  /**\n   * 初始化绘制状态\n   * @description 清除之前的mask & 添加新的mask\n   */\n  private _initDraw(e: FederatedPointerEvent) {\n    const { brushMode } = this.attribute as BrushAttributes;\n    const pos = this.eventPosToStagePos(e);\n    this._cacheDrawPoints = [pos];\n    this._isDrawedBeforeEnd = false;\n    if (brushMode === 'single') {\n      this._brushMaskAABBBoundsDict = {};\n      this._container.incrementalClearChild();\n    }\n    this._addBrushMask();\n    this._dispatchEvent(IOperateType.drawStart, {\n      operateMask: this._operatingMask as any,\n      operatedMaskAABBBounds: this._brushMaskAABBBoundsDict,\n      event: e\n    });\n  }\n\n  /**\n   * 初始化移动状态\n   * @description 初始化mask的dx和dy\n   */\n  private _initMove(e: FederatedPointerEvent) {\n    this._cacheMovePoint = this.eventPosToStagePos(e);\n\n    this._operatingMaskMoveDx = this._operatingMask.attribute.dx ?? 0;\n    this._operatingMaskMoveDy = this._operatingMask.attribute.dy ?? 0;\n\n    // 计算最大移动范围, 为了将brushMask限制在交互范围内\n    const { interactiveRange } = this.attribute as BrushAttributes;\n    const { minY = -Infinity, maxY = Infinity, minX = -Infinity, maxX = Infinity } = interactiveRange;\n\n    const { x1, x2, y1, y2 } = this._operatingMask.globalAABBBounds;\n    const minMoveStepX = minX - x1;\n    const maxMoveStepX = maxX - x2;\n    const minMoveStepY = minY - y1;\n    const maxMoveStepY = maxY - y2;\n\n    this._operatingMaskMoveRangeX = [minMoveStepX, maxMoveStepX];\n    this._operatingMaskMoveRangeY = [minMoveStepY, maxMoveStepY];\n\n    this._operatingMask.setAttribute('pickable', true);\n    this._dispatchEvent(IOperateType.moveStart, {\n      operateMask: this._operatingMask as any,\n      operatedMaskAABBBounds: this._brushMaskAABBBoundsDict,\n      event: e\n    });\n  }\n\n  /**\n   * 绘制中\n   * @description 更新_cacheDrawPoints 和 mask的points属性\n   */\n  private _drawing(e: FederatedPointerEvent) {\n    const pos = this.eventPosToStagePos(e);\n    const { x1 = 0, x2 = 0, y1 = 0, y2 = 0 } = this._operatingMask?._AABBBounds;\n    const { sizeThreshold = DEFAULT_SIZE_THRESHOLD, brushType } = this.attribute as BrushAttributes;\n\n    const cacheLength = this._cacheDrawPoints.length;\n    this._isDrawedBeforeEnd = !!(Math.abs(x2 - x1) > sizeThreshold || Math.abs(y1 - y2) > sizeThreshold);\n\n    // 如果当前点的位置和上一次点的位置一致，则无需更新\n    if (cacheLength > 0) {\n      const lastPos = this._cacheDrawPoints[this._cacheDrawPoints.length - 1] ?? ({} as IPointLike);\n      if (pos.x === lastPos.x && pos.y === lastPos.y) {\n        return;\n      }\n    }\n    // 更新交互位置\n    if (brushType === 'polygon' || cacheLength <= 1) {\n      this._cacheDrawPoints.push(pos);\n    } else {\n      this._cacheDrawPoints[cacheLength - 1] = pos;\n    }\n    // 更新mask形状\n    const maskPoints = this._computeMaskPoints();\n    this._operatingMask.setAttribute('points', maskPoints);\n    this._brushMaskAABBBoundsDict[this._operatingMask.name] = this._operatingMask.AABBBounds;\n    this._dispatchEvent(IOperateType.drawing, {\n      operateMask: this._operatingMask as any,\n      operatedMaskAABBBounds: this._brushMaskAABBBoundsDict,\n      event: e\n    });\n  }\n\n  /**\n   * 移动中\n   * @description 标记移动状态 & 计算位移量 & 给被移动的mask偏移属性\n   */\n  private _moving(e: FederatedPointerEvent) {\n    const startPos = this._cacheMovePoint;\n    const pos = this.eventPosToStagePos(e);\n    // 如果当前点的位置和上一次点的位置一致，则无需更新\n    if (pos.x === startPos?.x && pos.y === startPos?.y) {\n      return;\n    }\n\n    const moveStepX = pos.x - startPos.x;\n    const moveStepY = pos.y - startPos.y;\n    const moveX =\n      Math.min(this._operatingMaskMoveRangeX[1], Math.max(this._operatingMaskMoveRangeX[0], moveStepX)) +\n      this._operatingMaskMoveDx;\n    const moveY =\n      Math.min(this._operatingMaskMoveRangeY[1], Math.max(this._operatingMaskMoveRangeY[0], moveStepY)) +\n      this._operatingMaskMoveDy;\n\n    this._operatingMask.setAttributes({\n      dx: moveX,\n      dy: moveY\n    });\n    this._brushMaskAABBBoundsDict[this._operatingMask.name] = this._operatingMask.AABBBounds;\n    this._dispatchEvent(IOperateType.moving, {\n      operateMask: this._operatingMask as any,\n      operatedMaskAABBBounds: this._brushMaskAABBBoundsDict,\n      event: e\n    });\n  }\n\n  /**\n   * 构造brushMask的points属性\n   * @description 根据不同的brushType从_cacheDrawPoints中取points\n   * 1. 'rect': 只取鼠标轨迹_cacheDrawPoints的第一个点和最后一个点\n   * 2. 'x': 只取鼠标轨迹_cacheDrawPoints的第一个点和最后一个点的x坐标\n   * 3. 'y': 只取鼠标轨迹_cacheDrawPoints的第一个点和最后一个点的y坐标\n   * 4. 'polygon': 取鼠标轨迹_cacheDrawPoints的所有点\n   */\n  private _computeMaskPoints() {\n    const { brushType, xRange = [0, 0], yRange = [0, 0] } = this.attribute as BrushAttributes;\n    let maskPoints: IPointLike[] = [];\n    const startPoint = this._cacheDrawPoints[0];\n    const endPoint = this._cacheDrawPoints[this._cacheDrawPoints.length - 1];\n\n    if (brushType === 'rect') {\n      maskPoints = [\n        startPoint,\n        {\n          x: endPoint.x,\n          y: startPoint.y\n        },\n        endPoint,\n        {\n          x: startPoint.x,\n          y: endPoint.y\n        }\n      ];\n    } else if (brushType === 'x') {\n      maskPoints = [\n        {\n          x: startPoint.x,\n          y: yRange[0]\n        },\n        {\n          x: endPoint.x,\n          y: yRange[0]\n        },\n        {\n          x: endPoint.x,\n          y: yRange[1]\n        },\n        {\n          x: startPoint.x,\n          y: yRange[1]\n        }\n      ];\n    } else if (brushType === 'y') {\n      maskPoints = [\n        {\n          x: xRange[0],\n          y: startPoint.y\n        },\n        {\n          x: xRange[0],\n          y: endPoint.y\n        },\n        {\n          x: xRange[1],\n          y: endPoint.y\n        },\n        {\n          x: xRange[1],\n          y: startPoint.y\n        }\n      ];\n    } else {\n      maskPoints = cloneDeep(this._cacheDrawPoints); // _cacheDrawPoints在不断更新，所以这里需要cloneDeep\n    }\n    return maskPoints;\n  }\n\n  private _addBrushMask() {\n    const { brushStyle, hasMask } = this.attribute as BrushAttributes;\n    const brushMask = graphicCreator.polygon({\n      points: cloneDeep(this._cacheDrawPoints), // _cacheDrawPoints在不断更新，所以这里需要cloneDeep\n      cursor: 'move',\n      pickable: false,\n      ...brushStyle,\n      opacity: hasMask ? brushStyle.opacity ?? 1 : 0\n    });\n    brushMask.name = `brush-${Date.now()}`; // 用Date给mask唯一标记\n    this._operatingMask = brushMask;\n    this._container.add(brushMask);\n    this._brushMaskAABBBoundsDict[brushMask.name] = brushMask.AABBBounds;\n  }\n\n  private _outOfInteractiveRange(e: FederatedPointerEvent) {\n    // 在返回坐标时，将其限制在交互范围内\n    const { interactiveRange } = this.attribute as BrushAttributes;\n    const { minY = -Infinity, maxY = Infinity, minX = -Infinity, maxX = Infinity } = interactiveRange;\n    const pos = this.eventPosToStagePos(e);\n    if (pos.x > maxX || pos.x < minX || pos.y > maxY || pos.y < minY) {\n      return true;\n    }\n    return false;\n  }\n\n  /** 事件系统坐标转换为stage坐标 */\n  protected eventPosToStagePos(e: FederatedPointerEvent) {\n    const { x, y } = vglobal.mapToCanvasPoint(e);\n    return {\n      x: x - (this.stage?.x || 0),\n      y: y - (this.stage?.y || 0)\n    };\n  }\n\n  protected render() {\n    this._bindBrushEvents();\n    const group = this.createOrUpdateChild('brush-container', {}, 'group') as unknown as IGroup;\n    this._container = group;\n  }\n\n  releaseBrushEvents(): void {\n    const {\n      delayType = 'throttle',\n      delayTime = 0,\n      trigger = DEFAULT_BRUSH_ATTRIBUTES.trigger,\n      updateTrigger = DEFAULT_BRUSH_ATTRIBUTES.updateTrigger,\n      endTrigger = DEFAULT_BRUSH_ATTRIBUTES.endTrigger,\n      resetTrigger = DEFAULT_BRUSH_ATTRIBUTES.resetTrigger\n    } = this.attribute as BrushAttributes;\n    this.stage.removeEventListener(trigger, this._onBrushStart as EventListener);\n    this.stage.removeEventListener(updateTrigger, delayMap[delayType](this._onBrushing, delayTime) as EventListener);\n    this.stage.removeEventListener(endTrigger, this._onBrushEnd as EventListener);\n    this.stage.removeEventListener(resetTrigger, this._onBrushEnd as EventListener);\n  }\n}\n"]}