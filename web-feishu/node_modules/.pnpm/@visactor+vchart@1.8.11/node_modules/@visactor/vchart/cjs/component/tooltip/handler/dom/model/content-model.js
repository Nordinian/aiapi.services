"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.ContentModel = void 0;

const style_constants_1 = require("./style-constants"), base_tooltip_model_1 = require("./base-tooltip-model"), content_column_model_1 = require("./content-column-model"), merge_spec_1 = require("../../../../../util/spec/merge-spec");

class ContentModel extends base_tooltip_model_1.BaseTooltipModel {
    init() {
        this.product || (this.product = this.createElement("div", [ "container-box" ])), 
        this.shapeBox || this._initShapeBox(), this.keyBox || this._initKeyBox(), this.valueBox || this._initValueBox();
    }
    _initShapeBox() {
        const shapeBox = new content_column_model_1.ContentColumnModel(this.product, this._option, "shape-box", 0);
        shapeBox.init(), this.shapeBox = shapeBox, this.children[shapeBox.childIndex] = shapeBox;
    }
    _initKeyBox() {
        const keyBox = new content_column_model_1.ContentColumnModel(this.product, this._option, "key-box", 1);
        keyBox.init(), this.keyBox = keyBox, this.children[keyBox.childIndex] = keyBox;
    }
    _initValueBox() {
        const valueBox = new content_column_model_1.ContentColumnModel(this.product, this._option, "value-box", 2);
        valueBox.init(), this.valueBox = valueBox, this.children[valueBox.childIndex] = valueBox;
    }
    setStyle(style) {
        super.setStyle((0, merge_spec_1.mergeSpec)({}, style_constants_1.defaultContentContainerStyle, style)), 
        Object.values(this.children).forEach((c => {
            c.setStyle();
        }));
    }
    setContent() {
        Object.values(this.children).forEach((c => {
            c.setContent();
        }));
    }
    release() {
        super.release(), this.shapeBox = null, this.keyBox = null, this.valueBox = null;
    }
}

exports.ContentModel = ContentModel;
//# sourceMappingURL=content-model.js.map
