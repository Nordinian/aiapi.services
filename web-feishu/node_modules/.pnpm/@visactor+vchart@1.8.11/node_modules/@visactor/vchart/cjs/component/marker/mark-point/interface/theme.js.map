{"version":3,"sources":["../src/component/marker/mark-point/interface/theme.ts"],"names":[],"mappings":"","file":"theme.js","sourcesContent":["import type { IImageGraphicAttribute, IRichTextGraphicAttribute } from '@visactor/vrender-core';\nimport type { IMarkPointItemPosition } from '@visactor/vrender-components';\nimport type { ILineMarkSpec, ISymbolMarkSpec } from '../../../../typings';\nimport type { IMarkerLabelSpec, IMarkerRef, IMarkerSymbol } from '../../interface';\n\nexport interface IItemContent extends IMarkerRef {\n  /**\n   * 标注类型\n   */\n  type?: 'symbol' | 'text' | 'image' | 'richText';\n  /**\n   * 标注内容相对于定位点的位置\n   */\n  position?: IMarkPointItemPosition;\n  /**\n   * x 方向偏移量\n   */\n  offsetX?: number;\n  /**\n   * y 方向偏移量\n   */\n  offsetY?: number;\n  /**\n   * 是否自动调整 item content 使其展示在 marker 可见区域内。\n   * @default false\n   * @since 1.8.7\n   */\n  confine?: boolean;\n  /**\n   * type为symbol时, symbol的样式\n   */\n  symbol?: {\n    style?: ISymbolMarkSpec;\n  };\n  /**\n   * type为image时, image的样式\n   */\n  image?: {\n    style?: IImageGraphicAttribute;\n  };\n  /**\n   * type为text时, text的样式\n   * 'text'类型的ItemContent新增三种子类型：'text','rich','html'。配置在textStyle.type上。\n   */\n  text?: IMarkerLabelSpec;\n  /**\n   * type为rich text时, rich text的样式\n   */\n  richText?: {\n    style?: IRichTextGraphicAttribute;\n  };\n}\n\nexport type IItemLine<T extends Partial<IMarkerSymbol> = IMarkerSymbol> = {\n  /** TODO：'type-opo' */\n  /**\n   * 引导线类型\n   * 'type-s'表示起点和终点直接连线; 'type-do'表示包含一个折点，且折点x坐标为起点到终点的 1/2 x坐标，折点y坐标为起点y坐标；'type-op' 表示包含一个折点，且折点x坐标为起点x坐标，折点y坐标为终点y坐标；'type-po' 表示包含一个折点，且折点x坐标为终点x坐标，折点y坐标为起点y坐标\n   * 引导线类型的具体形式参考：https://journals.sagepub.com/doi/10.1177/1473871618799500\n   */\n  type?: 'type-s' | 'type-do' | 'type-po' | 'type-op';\n  /**\n   * 引导线可见性\n   */\n  visible?: boolean;\n  /**\n   * 垂直于引导线的装饰线，参考案例: https://observablehq.com/@mikelotis/edmonton-population-history-line-chart\n   */\n  decorativeLine?: {\n    /**\n     * 装饰线可见性\n     */\n    visible?: boolean;\n    /**\n     * 装饰线的长度\n     */\n    length?: number;\n  };\n  /**\n   * 引导线起点symbol样式\n   */\n  startSymbol?: T;\n  /**\n   * 引导线终点symbol样式\n   */\n  endSymbol?: T;\n  /**\n   * 引导线样式\n   */\n  line?: {\n    style?: Omit<ILineMarkSpec, 'visible'>;\n  };\n};\n\nexport interface IMarkPointTheme<T extends Partial<IMarkerSymbol> = Partial<IMarkerSymbol>> {\n  /**\n   * 标注引导线\n   */\n  itemLine?: IItemLine<T>;\n\n  /**\n   * 标注内容\n   */\n  itemContent?: IItemContent;\n}\n"]}