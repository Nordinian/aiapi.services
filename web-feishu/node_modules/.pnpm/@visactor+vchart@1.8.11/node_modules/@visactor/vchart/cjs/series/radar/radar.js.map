{"version":3,"sources":["../src/series/radar/radar.ts"],"names":[],"mappings":"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","file":"radar.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { LineLikeSeriesMixin } from '../mixin/line-mixin';\nimport type { ILineMark } from '../../mark/line';\nimport type { IMark, IMarkProgressiveConfig } from '../../mark/interface';\nimport { AttributeLevel, ChartEvent, POLAR_START_RADIAN } from '../../constant';\nimport { DEFAULT_LINEAR_INTERPOLATE } from '../../typings/interpolate';\nimport type { Datum, IPoint, IPolarPoint, Maybe } from '../../typings';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport { degreeToRadian, isArray, mixin, isValid } from '@visactor/vutils';\nimport type { IRadarSeriesSpec, IRadarSeriesTheme } from './interface';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { registerRadarAnimation, type IRadarAnimationParams, type RadarAppearPreset } from './animation';\nimport { RoseLikeSeries } from '../polar/rose-like';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport type { IAreaMark } from '../../mark/area';\nimport { AreaMark, registerAreaMark } from '../../mark/area';\nimport { LineMark, registerLineMark } from '../../mark/line';\nimport { SymbolMark, registerSymbolMark } from '../../mark/symbol';\nimport { radarSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\nimport { registerMarkOverlapTransform } from '@visactor/vgrammar-core';\nimport { LineLikeSeriesSpecTransformer } from '../mixin/line-mixin-transformer';\n\nexport interface RadarSeries<T extends IRadarSeriesSpec>\n  extends Pick<\n      LineLikeSeriesMixin,\n      | 'initLineMark'\n      | 'initSymbolMark'\n      | 'initLabelMarkStyle'\n      | 'initLineMarkStyle'\n      | 'initSymbolMarkStyle'\n      | 'encodeDefined'\n      | '_lineMark'\n      | '_symbolMark'\n      | 'addOverlapCompile'\n    >,\n    RoseLikeSeries<T> {}\n\nexport class RadarSeries<T extends IRadarSeriesSpec = IRadarSeriesSpec> extends RoseLikeSeries<T> {\n  static readonly type: string = SeriesTypeEnum.radar;\n  type = SeriesTypeEnum.radar;\n\n  static readonly mark: SeriesMarkMap = radarSeriesMark;\n  static readonly transformerConstructor = LineLikeSeriesSpecTransformer as any;\n  readonly transformerConstructor = LineLikeSeriesSpecTransformer;\n\n  private _areaMark: ILineMark;\n  protected _sortDataByAxis: boolean = false;\n\n  initGroups() {\n    // do nothing\n  }\n\n  compile(): void {\n    super.compile();\n    this.addOverlapCompile();\n  }\n\n  initMark(): void {\n    const progressive = {\n      progressiveStep: this._spec.progressiveStep,\n      progressiveThreshold: this._spec.progressiveThreshold,\n      large: this._spec.large,\n      largeThreshold: this._spec.largeThreshold\n    };\n\n    const isAreaVisible = this._spec.area?.visible !== false && this._spec.area?.style?.visible !== false;\n    const seriesMark = this._spec.seriesMark ?? 'area';\n    this.initAreaMark(progressive, isAreaVisible && seriesMark === 'area');\n    this.initLineMark(progressive, seriesMark === 'line' || (seriesMark === 'area' && !isAreaVisible));\n    this.initSymbolMark(progressive, seriesMark === 'point');\n  }\n\n  initMarkStyle(): void {\n    this.initAreaMarkStyle();\n    this.initLineMarkStyle();\n    this.initSymbolMarkStyle();\n  }\n\n  initAreaMark(progressive: IMarkProgressiveConfig, isSeriesMark: boolean) {\n    this._areaMark = this._createMark(RadarSeries.mark.area, {\n      progressive,\n      isSeriesMark,\n      customShape: this._spec.area?.customShape\n    }) as IAreaMark;\n  }\n\n  initAreaMarkStyle() {\n    const areaMark = this._areaMark;\n    if (areaMark) {\n      this.setMarkStyle(\n        areaMark,\n        {\n          x: this.dataToPositionX.bind(this),\n          y: this.dataToPositionY.bind(this),\n          x1: (datum: Datum) => {\n            if (!datum || !this.angleAxisHelper || !this.radiusAxisHelper) {\n              return Number.NaN;\n            }\n            return this.valueToPosition(\n              this.getDatumPositionValues(datum, this._angleField),\n              this._stack ? this.getDatumPositionValues(datum, this._innerRadiusField) : this.radiusScale.domain()[0]\n            ).x;\n          },\n          y1: (datum: Datum) => {\n            if (!datum || !this.angleAxisHelper || !this.radiusAxisHelper) {\n              return Number.NaN;\n            }\n\n            const value = this.valueToPosition(\n              this.getDatumPositionValues(datum, this._angleField),\n              this._stack ? this.getDatumPositionValues(datum, this._innerRadiusField) : this.radiusScale.domain()[0]\n            ).y;\n            return value;\n          },\n          fill: this.getColorAttribute(),\n          curveType: DEFAULT_LINEAR_INTERPOLATE,\n          closePath: true\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n\n      if (this._invalidType !== 'zero') {\n        this.setMarkStyle(\n          areaMark,\n          {\n            defined: this._getInvalidDefined,\n            connectedType: this._getInvalidConnectType()\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      }\n      this.event.on(ChartEvent.viewDataStatisticsUpdate, { filter: param => param.model === this }, () => {\n        this.encodeDefined(areaMark, 'defined');\n      });\n      this._trigger.registerMark(areaMark);\n    }\n  }\n\n  protected initTooltip() {\n    super.initTooltip();\n\n    this._lineMark && this._tooltipHelper.activeTriggerSet.dimension.add(this._lineMark);\n    this._symbolMark && this._tooltipHelper.activeTriggerSet.mark.add(this._symbolMark);\n    this._areaMark && this._tooltipHelper.activeTriggerSet.dimension.add(this._areaMark);\n  }\n\n  initAnimation() {\n    const animationParams: IRadarAnimationParams = {\n      center: () => this.angleAxisHelper?.center(),\n      radius: () => {\n        const rect = this.getLayoutRect();\n        return Math.min(rect.width, rect.height);\n      },\n      startAngle: isValid(this._spec.startAngle) ? degreeToRadian(this._spec.startAngle) : POLAR_START_RADIAN,\n      pointToCoord: (point: IPoint) => this.angleAxisHelper?.pointToCoord(point),\n      coordToPoint: (coord: IPolarPoint) => this.angleAxisHelper.coordToPoint(coord)\n    };\n    const appearPreset = ((this._spec?.animationAppear as IStateAnimateSpec<RadarAppearPreset>)?.preset ??\n      'clipIn') as RadarAppearPreset;\n\n    if (appearPreset === 'clipIn') {\n      if (this._rootMark) {\n        this._rootMark.setAnimationConfig(\n          animationConfig(\n            Factory.getAnimationInKey('radarGroup')?.(animationParams, appearPreset),\n            userAnimationConfig(SeriesMarkNameEnum.group, this._spec, this._markAttributeContext)\n          )\n        );\n      }\n    }\n\n    // TODO: animationType\n    const markAnimationMap: [IMark, string][] = [\n      [this._areaMark, 'radar'],\n      [this._lineMark, 'radar'],\n      [this._symbolMark, 'radarSymbol']\n    ];\n\n    // 为 mark 添加动画\n    markAnimationMap.forEach(([mark, animation]) => {\n      if (isValid(mark)) {\n        const getAnimation = Factory.getAnimationInKey(animation);\n        mark.setAnimationConfig(\n          animationConfig(\n            getAnimation?.(animationParams, appearPreset),\n            userAnimationConfig(mark.name, this._spec, this._markAttributeContext)\n          )\n        );\n      }\n    });\n  }\n\n  getDefaultShapeType() {\n    return 'square';\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._areaMark, this._symbolMark, this._lineMark];\n  }\n\n  getSeriesStyle(datum: Datum) {\n    return (attribute: string) => {\n      let result = this._seriesMark?.getAttribute(attribute as any, datum) ?? undefined;\n      if (attribute === 'fill' && !result) {\n        attribute = 'stroke';\n        result = this._seriesMark?.getAttribute(attribute, datum) ?? undefined;\n      }\n      if (attribute === 'stroke' && isArray(result)) {\n        return result[0];\n      }\n      return result;\n    };\n  }\n}\n\nmixin(RadarSeries, LineLikeSeriesMixin);\n\nexport const registerRadarSeries = () => {\n  registerMarkOverlapTransform();\n  registerAreaMark();\n  registerLineMark();\n  registerSymbolMark();\n  registerRadarAnimation();\n  Factory.registerSeries(RadarSeries.type, RadarSeries);\n};\n"]}