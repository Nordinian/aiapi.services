{"version":3,"sources":["../src/component/tooltip/handler/utils/attribute.ts"],"names":[],"mappings":"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","file":"attribute.js","sourcesContent":["import type {\n  TooltipAttributes,\n  TooltipPanelAttrs,\n  TooltipRowAttrs,\n  TooltipRowStyleAttrs,\n  TooltipSymbolAttrs,\n  TooltipTextAttrs\n} from '@visactor/vrender-components';\nimport type { IPadding, IToolTipActual } from '../../../../typings';\nimport type { ITooltipTextStyle } from '../interface';\nimport { isValid, maxInArray, normalizePadding } from '@visactor/vutils';\nimport { mergeSpec } from '../../../../util/spec/merge-spec';\nimport { normalizeLayoutPaddingSpec } from '../../../../util/space';\nimport type { ITooltipSpec } from '../../interface/spec';\nimport type { ITooltipTextTheme, ITooltipTheme } from '../../interface/theme';\nimport { THEME_CONSTANTS } from '../../../../theme/builtin/common/constants';\nimport { measureTooltipText } from './common';\nimport type { ITheme } from '../../../../theme';\n\nconst DEFAULT_TEXT_ATTRIBUTES: Partial<ITooltipTextStyle> = {\n  fontFamily: THEME_CONSTANTS.defaultFontFamily,\n  spacing: 10,\n  wordBreak: 'break-word'\n};\n\nexport function getTextAttributes(\n  style: ITooltipTextTheme = {},\n  globalTheme?: ITheme,\n  defaultAttributes?: Partial<ITooltipTextStyle>\n): ITooltipTextStyle {\n  const attrs: ITooltipTextStyle = {\n    ...(defaultAttributes ?? DEFAULT_TEXT_ATTRIBUTES),\n    fill: (style.fill ?? style.fontColor) as string,\n    textAlign: style.textAlign,\n    textBaseline: style.textBaseline,\n    fontFamily: style.fontFamily ?? globalTheme?.fontFamily,\n    fontSize: style.fontSize,\n    fontWeight: style.fontWeight,\n    lineHeight: style.lineHeight,\n    spacing: style.spacing,\n    multiLine: style.multiLine,\n    maxWidth: style.maxWidth,\n    wordBreak: style.wordBreak,\n    autoWidth: style.autoWidth\n  };\n  return attrs;\n}\n\nexport const getPanelAttributes = (style: ITooltipTheme['panel']): TooltipPanelAttrs => {\n  const { backgroundColor, border, shadow } = style;\n  const panelAttrs: TooltipPanelAttrs = {\n    lineWidth: border?.width ?? 0,\n    shadow: !!shadow\n  };\n  if (border?.color) {\n    panelAttrs.stroke = border.color as string;\n  }\n  if (backgroundColor) {\n    panelAttrs.fill = backgroundColor as string;\n  }\n  if (shadow) {\n    panelAttrs.shadowColor = shadow.color as string;\n    panelAttrs.shadowBlur = shadow.blur;\n    panelAttrs.shadowOffsetX = shadow.x;\n    panelAttrs.shadowOffsetY = shadow.y;\n    panelAttrs.shadowSpread = shadow.spread;\n  }\n  const { radius } = border ?? {};\n  if (isValid(radius)) {\n    panelAttrs.cornerRadius = [radius, radius, radius, radius];\n  }\n  return panelAttrs;\n};\n\nexport const getTooltipAttributes = (\n  actualTooltip: IToolTipActual,\n  spec: ITooltipSpec,\n  globalTheme: ITheme\n): TooltipAttributes => {\n  const { style = {}, enterable, transitionDuration } = spec;\n  const { panel = {}, titleLabel, shape, keyLabel, valueLabel, spaceRow: commonSpaceRow } = style;\n  const padding = normalizePadding(panel.padding);\n  const paddingSpec = normalizeLayoutPaddingSpec(panel.padding) as IPadding;\n\n  const titleStyle = getTextAttributes(titleLabel, globalTheme);\n  const keyStyle = getTextAttributes(keyLabel, globalTheme);\n  const valueStyle = getTextAttributes(valueLabel, globalTheme);\n  const shapeStyle: TooltipRowStyleAttrs['shape'] = {\n    fill: true,\n    size: shape?.size ?? 8,\n    spacing: shape?.spacing ?? 6\n  };\n\n  const attributes: TooltipAttributes = {\n    panel: getPanelAttributes(panel),\n    padding,\n\n    title: {},\n    content: [],\n\n    titleStyle: {\n      value: titleStyle,\n      spaceRow: commonSpaceRow\n    },\n    contentStyle: {\n      shape: shapeStyle,\n      key: keyStyle,\n      value: valueStyle,\n      spaceRow: commonSpaceRow\n    },\n    hasContentShape: false,\n    keyWidth: 0,\n    valueWidth: 0,\n\n    enterable,\n    transitionDuration\n  };\n\n  const { title = {}, content = [] } = actualTooltip;\n\n  let containerWidth = paddingSpec.left + paddingSpec.right;\n  let containerHeight = paddingSpec.top + paddingSpec.bottom;\n\n  // calculate content\n  let contentMaxWidth = 0;\n  // filter content\n  const filteredContent = content.filter(item => {\n    return (item.key || item.value) && item.visible !== false;\n  });\n  const hasContent = !!filteredContent.length;\n  let maxKeyWidth = 0;\n  let maxAdaptiveKeyWidth = 0;\n  let maxValueWidth = 0;\n  let maxShapeWidth = 0;\n\n  if (hasContent) {\n    const keyWidths: number[] = [];\n    const adaptiveKeyWidths: number[] = [];\n    const valueWidths: number[] = [];\n    const shapeWidths: number[] = [];\n\n    attributes.content = filteredContent.map((item, i) => {\n      let itemHeight = 0;\n      const {\n        hasShape: actualHasShape,\n        key: actualKey,\n        shapeType: actualShapeType = '',\n        shapeFill: actualShapeFill,\n        shapeStroke: actualShapeStroke,\n        shapeLineWidth: actualShapeLineWidth,\n        shapeSize: actualShapeSize,\n        value: actualValue,\n        isKeyAdaptive: actualIsKeyAdaptive,\n        spaceRow: actualSpaceRow,\n        keyStyle: actualKeyStyle,\n        valueStyle: actualValueStyle,\n        // 弃用的属性，做下兼容\n        shapeColor: actualShapeColor,\n        shapeHollow: actualShapeHollow\n      } = item;\n      const itemAttrs: TooltipRowAttrs = { height: 0, spaceRow: actualSpaceRow ?? commonSpaceRow };\n      if (isValid(actualKey)) {\n        const itemKeyStyle: ITooltipTextStyle = mergeSpec(\n          {},\n          keyStyle,\n          getTextAttributes(actualKeyStyle, undefined, {})\n        );\n        const { width, height, text } = measureTooltipText(actualKey, itemKeyStyle);\n        itemAttrs.key = {\n          width,\n          height,\n          ...itemKeyStyle,\n          text\n        };\n        if (!actualIsKeyAdaptive) {\n          keyWidths.push(width);\n        } else {\n          adaptiveKeyWidths.push(width);\n        }\n        itemHeight = Math.max(itemHeight, height);\n      }\n      if (isValid(actualValue)) {\n        const itemValueStyle: ITooltipTextStyle = mergeSpec(\n          {},\n          valueStyle,\n          getTextAttributes(actualValueStyle, undefined, {})\n        );\n        const { width, height, text } = measureTooltipText(actualValue, itemValueStyle);\n        itemAttrs.value = {\n          width,\n          height,\n          ...itemValueStyle,\n          text\n        };\n        valueWidths.push(width);\n        itemHeight = Math.max(itemHeight, height);\n      }\n      if (actualHasShape) {\n        const shape: TooltipSymbolAttrs = {\n          visible: true,\n          symbolType: actualShapeType\n        };\n        const adaptiveShapeFill = actualShapeFill ?? actualShapeColor;\n        if (actualShapeHollow) {\n          shape.stroke = adaptiveShapeFill;\n        } else {\n          shape.fill = adaptiveShapeFill;\n        }\n        shape.stroke = actualShapeStroke ?? adaptiveShapeFill;\n        shape.lineWidth = actualShapeLineWidth;\n        itemAttrs.shape = shape;\n\n        const shapeWidth = actualShapeSize ?? shapeStyle.size;\n        itemHeight = Math.max(shapeWidth, itemHeight);\n        shapeWidths.push(shapeWidth);\n      } else {\n        itemAttrs.shape = { visible: false };\n      }\n\n      itemAttrs.height = itemHeight;\n      containerHeight += itemHeight;\n      if (i < filteredContent.length - 1) {\n        containerHeight += itemAttrs.spaceRow;\n      }\n\n      return itemAttrs;\n    });\n\n    maxKeyWidth = keyWidths.length ? maxInArray(keyWidths) : 0; // name 需要对齐\n    maxAdaptiveKeyWidth = adaptiveKeyWidths.length ? maxInArray(adaptiveKeyWidths) : 0;\n    maxValueWidth = valueWidths.length ? maxInArray(valueWidths) : 0; // value 需要对齐\n    maxShapeWidth = shapeWidths.length ? maxInArray(shapeWidths) + shapeStyle.spacing : 0; // shape 列宽度\n    contentMaxWidth = Math.max(\n      maxShapeWidth + maxKeyWidth + keyStyle.spacing + maxValueWidth + valueStyle.spacing,\n      maxShapeWidth + maxAdaptiveKeyWidth,\n      contentMaxWidth\n    );\n    attributes.hasContentShape = !!shapeWidths.length;\n    attributes.keyWidth = maxKeyWidth;\n    attributes.valueWidth = maxValueWidth;\n  }\n\n  // calculate title\n  let titleMaxWidth = 0;\n  let titleMaxHeight = 0;\n  const {\n    visible: actualTitleVisible = true,\n    value: actualTitleValue = '',\n    valueStyle: actualTitleValueStyle,\n    spaceRow: actualTitleSpaceRow\n  } = title;\n  attributes.title.visible = actualTitleVisible;\n  attributes.title.spaceRow = actualTitleSpaceRow ?? commonSpaceRow;\n\n  let titleValueStyle: ITooltipTextStyle = {};\n  // 当前是否处于自适应宽度模式\n  const isAutoWidthMode = () => titleValueStyle.autoWidth && titleValueStyle.multiLine !== false;\n  if (actualTitleVisible) {\n    titleValueStyle = mergeSpec({}, titleStyle, getTextAttributes(actualTitleValueStyle, undefined, {}));\n    // 标题默认优化策略：如果 autoWidth 为 true，则宽度默认跟随 content 宽度并开启自动换行\n    if (isAutoWidthMode()) {\n      titleValueStyle.multiLine = titleValueStyle.multiLine ?? true;\n      titleValueStyle.maxWidth = titleValueStyle.maxWidth ?? (hasContent ? Math.ceil(contentMaxWidth) : undefined);\n    }\n\n    const { text, width, height } = measureTooltipText(actualTitleValue, titleValueStyle);\n    attributes.title.value = {\n      width: isAutoWidthMode() ? Math.min(width, titleValueStyle.maxWidth ?? Number.MAX_VALUE) : width,\n      height,\n      ...titleValueStyle,\n      text\n    };\n    titleMaxWidth = attributes.title.value.width;\n    titleMaxHeight = attributes.title.value.height;\n\n    containerHeight += titleMaxHeight + (hasContent ? attributes.title.spaceRow : 0);\n  }\n  attributes.title.width = titleMaxWidth;\n  attributes.title.height = titleMaxHeight;\n\n  if (isAutoWidthMode()) {\n    containerWidth += contentMaxWidth ? contentMaxWidth : titleMaxWidth;\n  } else {\n    containerWidth += Math.max(titleMaxWidth, contentMaxWidth);\n  }\n\n  // 处理 content 的自动宽度模式\n  if (hasContent) {\n    attributes.content.forEach(item => {\n      const value = item.value as ITooltipTextStyle & TooltipTextAttrs;\n      // 最后一列默认自适应宽度\n      if (value && (value.autoWidth ?? true)) {\n        value.width =\n          containerWidth -\n          paddingSpec.left -\n          paddingSpec.right -\n          maxShapeWidth -\n          maxKeyWidth -\n          keyStyle.spacing -\n          valueStyle.spacing;\n        //value.multiLine = true;  multiLine 需要用户手动开启，不会自动开启\n        if (!value.maxWidth) {\n          value.maxWidth = Math.ceil(value.width);\n        }\n        attributes.valueWidth = Math.max(attributes.valueWidth, value.width);\n      }\n    });\n  }\n\n  attributes.panel.width = containerWidth;\n  attributes.panel.height = containerHeight;\n\n  return attributes;\n};\n"]}