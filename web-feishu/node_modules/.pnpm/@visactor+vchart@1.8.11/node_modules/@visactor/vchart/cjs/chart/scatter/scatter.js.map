{"version":3,"sources":["../src/chart/scatter/scatter.ts"],"names":[],"mappings":";;;AAAA,0DAAqE;AACrE,sDAA6D;AAG7D,gDAA6C;AAC7C,+DAAoE;AACpE,kCAAoC;AAEpC,MAAa,YAA8D,SAAQ,gBAAY;IAA/F;;QAMW,2BAAsB,GAAG,iDAA2B,CAAC;QACrD,SAAI,aAAiC;QACrC,eAAU,GAAW,qBAAc,CAAC,OAAO,CAAC;QAC3C,cAAS,GAAY,IAAI,CAAC;IACtC,CAAC;;AAVD,oCAUC;AATiB,iBAAI,aAAiC;AACrC,uBAAU,GAAW,qBAAc,CAAC,OAAO,CAAC;AAC5C,iBAAI,GAAW,eAAe,CAAC;AAC/B,mCAAsB,GAAG,iDAA2B,CAAC;AAQhE,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,IAAA,+BAAqB,GAAE,CAAC;IACxB,iBAAO,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACzD,CAAC,CAAC;AAHW,QAAA,oBAAoB,wBAG/B","file":"scatter.js","sourcesContent":["import { registerScatterSeries } from '../../series/scatter/scatter';\nimport { SeriesTypeEnum } from '../../series/interface/type';\nimport { ChartTypeEnum } from '../interface/type';\nimport type { IScatterChartSpec } from './interface';\nimport { Factory } from '../../core/factory';\nimport { ScatterChartSpecTransformer } from './scatter-transformer';\nimport { BaseChart } from '../base';\n\nexport class ScatterChart<T extends IScatterChartSpec = IScatterChartSpec> extends BaseChart<T> {\n  static readonly type: string = ChartTypeEnum.scatter;\n  static readonly seriesType: string = SeriesTypeEnum.scatter;\n  static readonly view: string = 'singleDefault';\n  static readonly transformerConstructor = ScatterChartSpecTransformer;\n  // @ts-ignore\n  readonly transformerConstructor = ScatterChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.scatter;\n  readonly seriesType: string = SeriesTypeEnum.scatter;\n  protected _canStack: boolean = true;\n}\n\nexport const registerScatterChart = () => {\n  registerScatterSeries();\n  Factory.registerChart(ScatterChart.type, ScatterChart);\n};\n"]}