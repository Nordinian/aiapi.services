"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.LinkSeriesTooltipHelper = void 0;

const tooltip_helper_1 = require("../base/tooltip-helper"), time_1 = require("../../component/axis/cartesian/util/time");

class LinkSeriesTooltipHelper extends tooltip_helper_1.BaseSeriesTooltipHelper {
    getDefaultTooltipPattern(activeType) {
        return "mark" === activeType ? {
            visible: !0,
            activeType: activeType,
            title: {
                key: "link info",
                value: "link info"
            },
            content: [ {
                hasShape: !0,
                shapeType: "square",
                shapeColor: this.contentShapeColorCallback,
                shapeStroke: this.contentShapeColorCallback,
                key: "time",
                value: datum => time_1.TimeUtil.getInstance().timeFormat("%Y%m%d %H:%M", datum.from.split("_")[1])
            }, {
                hasShape: !0,
                shapeType: "square",
                shapeColor: this.contentShapeColorCallback,
                shapeStroke: this.contentShapeColorCallback,
                key: "type",
                value: datum => datum.action_type
            }, {
                hasShape: !0,
                shapeType: "square",
                shapeColor: this.contentShapeColorCallback,
                shapeStroke: this.contentShapeColorCallback,
                key: "from",
                value: datum => datum.from
            }, {
                hasShape: !0,
                shapeType: "square",
                shapeColor: this.contentShapeColorCallback,
                shapeStroke: this.contentShapeColorCallback,
                key: "to",
                value: datum => datum.to
            } ]
        } : null;
    }
}

exports.LinkSeriesTooltipHelper = LinkSeriesTooltipHelper;
//# sourceMappingURL=tooltip-helper.js.map
