{"version":3,"sources":["../src/series/range-area/range-area.ts"],"names":[],"mappings":"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","file":"range-area.js","sourcesContent":["import type { DataView } from '@visactor/vdataset';\nimport { AreaSeries } from '../area/area';\nimport type { SeriesMarkMap } from '../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { SeriesTypeEnum } from '../interface/type';\nimport { AreaMark, registerAreaMark, type IAreaMark } from '../../mark/area';\nimport { DEFAULT_SMOOTH_INTERPOLATE } from '../../typings/interpolate';\nimport { Direction } from '../../typings/space';\nimport type { Datum } from '../../typings';\nimport { AttributeLevel } from '../../constant';\nimport { RangeAreaSeriesTooltipHelper } from './tooltip-helper';\nimport type { IAreaSeriesSpec } from '../area/interface';\nimport { rangeAreaSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\n\nexport class RangeAreaSeries<T extends IAreaSeriesSpec = IAreaSeriesSpec> extends AreaSeries<T> {\n  static readonly type: string = SeriesTypeEnum.rangeArea;\n  type = SeriesTypeEnum.rangeArea;\n\n  static readonly mark: SeriesMarkMap = rangeAreaSeriesMark;\n\n  initMark(): void {\n    // area\n    this._areaMark = this._createMark(RangeAreaSeries.mark.area, {\n      defaultMorphElementKey: this.getDimensionField()[0],\n      groupKey: this._seriesField,\n      isSeriesMark: true,\n      customShape: this._spec.area?.customShape\n    }) as IAreaMark;\n  }\n\n  initMarkStyle(): void {\n    const userCurveType = this.getSpec().area?.style?.curveType ?? this.getSpec().line?.style?.curveType;\n    const curveType =\n      userCurveType === DEFAULT_SMOOTH_INTERPOLATE\n        ? this._direction === Direction.vertical\n          ? 'monotoneX'\n          : 'monotoneY'\n        : userCurveType;\n\n    // area\n    const areaMark = this._areaMark;\n    if (areaMark) {\n      if (this._direction === Direction.vertical) {\n        this.setMarkStyle(\n          this._areaMark,\n          {\n            x: this.dataToPositionX.bind(this),\n            y1: (datum: Datum) => {\n              if (!this._yAxisHelper) {\n                return Number.NaN;\n              }\n              const { dataToPosition } = this._yAxisHelper;\n\n              return dataToPosition(this.getDatumPositionValues(datum, this._spec.yField[1]), {\n                bandPosition: this._bandPosition\n              });\n            },\n            y: this.dataToPositionY.bind(this)\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      } else {\n        this.setMarkStyle(\n          this._areaMark,\n          {\n            x: this.dataToPositionX.bind(this),\n            x1: (datum: Datum) => {\n              if (!this._xAxisHelper) {\n                return Number.NaN;\n              }\n              const { dataToPosition } = this._xAxisHelper;\n\n              return dataToPosition(this.getDatumPositionValues(datum, this._spec.xField[1]), {\n                bandPosition: this._bandPosition\n              });\n            },\n            y: this.dataToPositionY.bind(this),\n            orient: this._direction\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      }\n      this.setMarkStyle(\n        areaMark,\n        {\n          fill: this.getColorAttribute(),\n          stroke: false\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n      if (this._invalidType !== 'zero') {\n        this.setMarkStyle(\n          areaMark,\n          {\n            defined: this._getInvalidDefined,\n            connectedType: this._getInvalidConnectType()\n          },\n          'normal',\n          AttributeLevel.Series\n        );\n      }\n      this.setMarkStyle(\n        areaMark,\n        {\n          curveType\n        },\n        'normal',\n        AttributeLevel.Built_In\n      );\n      this._trigger.registerMark(areaMark);\n    }\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new RangeAreaSeriesTooltipHelper(this);\n    this._areaMark && this._tooltipHelper.activeTriggerSet.dimension.add(this._areaMark);\n  }\n\n  viewDataStatisticsUpdate(d: DataView) {\n    super.viewDataStatisticsUpdate(d);\n    this.encodeDefined(this._areaMark, 'defined');\n  }\n}\n\nexport const registerRangeAreaSeries = () => {\n  registerAreaMark();\n  Factory.registerSeries(RangeAreaSeries.type, RangeAreaSeries);\n};\n"]}