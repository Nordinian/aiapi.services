"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.continuousLegendFilter = exports.continuousLegendDataMake = void 0;

const vutils_1 = require("@visactor/vutils"), continuousLegendDataMake = (data, op) => {
    const {series: series, field: field, scale: scale} = op, datumField = field();
    if (field && datumField) {
        let min = Number.MAX_VALUE, max = Number.MIN_VALUE;
        return series().forEach((s => {
            const statisticData = s.getRawDataStatisticsByField(datumField, !0), seriesMin = null == statisticData ? void 0 : statisticData.min, seriesMax = null == statisticData ? void 0 : statisticData.max;
            (0, vutils_1.isValidNumber)(seriesMin) && (min = seriesMin), (0, vutils_1.isValidNumber)(seriesMax) && (max = seriesMax);
        })), [ min, max ];
    }
    if (scale) {
        const _scale = scale();
        return _scale ? _scale.domain() : [];
    }
    return [];
};

exports.continuousLegendDataMake = continuousLegendDataMake;

const continuousLegendFilter = (data, op) => {
    const {selected: selected, field: field, data: legendData} = op, selectedRange = selected(), datumField = field();
    if (selectedRange === legendData()) return data;
    if (datumField && !(0, vutils_1.isEmpty)(selectedRange)) {
        const [min, max] = selectedRange;
        return data.filter((datum => datum[datumField] >= min && datum[datumField] <= max));
    }
    return data;
};

exports.continuousLegendFilter = continuousLegendFilter;
//# sourceMappingURL=continuous.js.map
