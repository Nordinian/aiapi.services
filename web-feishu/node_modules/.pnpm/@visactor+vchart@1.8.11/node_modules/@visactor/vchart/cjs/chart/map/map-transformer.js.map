{"version":3,"sources":["../src/chart/map/map-transformer.ts"],"names":[],"mappings":";;;AAEA,yCAA8C;AAE9C,kCAAmD;AAGnD,MAAa,uBAAiE,SAAQ,+BAA2B;IACrG,cAAc,CAAC,IAAY;QACnC,OAAO,IAAI,KAAK,uBAAc,CAAC,GAAG,CAAC;IACrC,CAAC;IAES,qBAAqB,CAAC,IAAmB;QACjD,MAAM,MAAM,mCACP,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAEpC,IAAI,EAAE,IAAI,CAAC,IAAI,EAEf,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,EAE7B,GAAG,EAAE,IAAI,CAAC,GAAG,EAEb,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EACvC,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,IAAI,EAAE,IAAI,CAAC,IAAI,EAEf,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,GACxC,CAAC;QAEF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAc,EAAE,EAAE;YACrC,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,MAAM,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,MAAM,GAAG,CAAC,iBAAiB,CAAC,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;oBAChC,OAAO;iBACR;gBACD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACzC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;wBACb,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;qBAC7B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF;AAnDD,0DAmDC","file":"map-transformer.js","sourcesContent":["import type { IMapSeriesSpec } from '../../series';\n// eslint-disable-next-line no-duplicate-imports\nimport { SeriesTypeEnum } from '../../series';\nimport type { IRegionSpec, ISeriesSpec } from '../../typings';\nimport { BaseChartSpecTransformer } from '../base';\nimport type { IMapChartSpec } from './interface';\n\nexport class MapChartSpecTransformer<T extends IMapChartSpec = IMapChartSpec> extends BaseChartSpecTransformer<T> {\n  protected _isValidSeries(type: string) {\n    return type === SeriesTypeEnum.map;\n  }\n\n  protected _getDefaultSeriesSpec(spec: IMapChartSpec): IMapSeriesSpec {\n    const series: any = {\n      ...super._getDefaultSeriesSpec(spec),\n\n      type: spec.type,\n\n      nameField: spec.nameField,\n      valueField: spec.valueField,\n      seriesField: spec.seriesField,\n\n      map: spec.map,\n\n      nameProperty: spec.nameProperty,\n      centroidProperty: spec.centroidProperty,\n      nameMap: spec.nameMap,\n      area: spec.area,\n\n      defaultFillColor: spec.defaultFillColor\n    };\n\n    return series;\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n\n    spec.region.forEach((r: IRegionSpec) => {\n      r.coordinate = 'geo';\n    });\n\n    const defaultSeriesSpec = this._getDefaultSeriesSpec(spec);\n    if (!spec.series || spec.series.length === 0) {\n      spec.series = [defaultSeriesSpec];\n    } else {\n      spec.series.forEach((s: ISeriesSpec) => {\n        if (!this._isValidSeries(s.type)) {\n          return;\n        }\n        Object.keys(defaultSeriesSpec).forEach(k => {\n          if (!(k in s)) {\n            s[k] = defaultSeriesSpec[k];\n          }\n        });\n      });\n    }\n  }\n}\n"]}