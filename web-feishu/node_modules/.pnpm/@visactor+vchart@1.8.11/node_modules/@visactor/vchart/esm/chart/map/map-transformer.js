import { SeriesTypeEnum } from "../../series";

import { BaseChartSpecTransformer } from "../base";

export class MapChartSpecTransformer extends BaseChartSpecTransformer {
    _isValidSeries(type) {
        return type === SeriesTypeEnum.map;
    }
    _getDefaultSeriesSpec(spec) {
        return Object.assign(Object.assign({}, super._getDefaultSeriesSpec(spec)), {
            type: spec.type,
            nameField: spec.nameField,
            valueField: spec.valueField,
            seriesField: spec.seriesField,
            map: spec.map,
            nameProperty: spec.nameProperty,
            centroidProperty: spec.centroidProperty,
            nameMap: spec.nameMap,
            area: spec.area,
            defaultFillColor: spec.defaultFillColor
        });
    }
    transformSpec(spec) {
        super.transformSpec(spec), spec.region.forEach((r => {
            r.coordinate = "geo";
        }));
        const defaultSeriesSpec = this._getDefaultSeriesSpec(spec);
        spec.series && 0 !== spec.series.length ? spec.series.forEach((s => {
            this._isValidSeries(s.type) && Object.keys(defaultSeriesSpec).forEach((k => {
                k in s || (s[k] = defaultSeriesSpec[k]);
            }));
        })) : spec.series = [ defaultSeriesSpec ];
    }
}
//# sourceMappingURL=map-transformer.js.map
