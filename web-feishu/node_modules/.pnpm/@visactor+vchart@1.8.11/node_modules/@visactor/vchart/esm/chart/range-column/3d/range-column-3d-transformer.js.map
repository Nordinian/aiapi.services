{"version":3,"sources":["../src/chart/range-column/3d/range-column-3d-transformer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,6BAA6B,EAAE,MAAM,iBAAiB,CAAC;AAGhE,MAAM,OAAO,iCAEX,SAAQ,6BAAgC;IAC9B,qBAAqB,CAAC,IAAS;;QACvC,MAAM,MAAM,mCACP,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KACpC,aAAa,EAAG,IAAgC,CAAC,aAAa,GAC/D,CAAC;QACF,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,SAAS,iBAAyB,EAAE;YAC3C,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;aAAM;YACL,MAAM,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF","file":"range-column-3d-transformer.js","sourcesContent":["import { Direction } from '../../../typings';\nimport { CartesianChartSpecTransformer } from '../../cartesian';\nimport type { IRangeColumn3dChartSpec } from '../interface';\n\nexport class RangeColumn3dChartSpecTransformer<\n  T extends IRangeColumn3dChartSpec = IRangeColumn3dChartSpec\n> extends CartesianChartSpecTransformer<T> {\n  protected _getDefaultSeriesSpec(spec: any): any {\n    const series: any = {\n      ...super._getDefaultSeriesSpec(spec),\n      barGapInGroup: (spec as IRangeColumn3dChartSpec).barGapInGroup\n    };\n    series.bar3d = spec.bar3d;\n    if (spec.direction === Direction.horizontal) {\n      series.xField = spec.xField ?? [spec.minField, spec.maxField];\n    } else {\n      series.yField = spec.yField ?? [spec.minField, spec.maxField];\n    }\n    return series;\n  }\n}\n"]}