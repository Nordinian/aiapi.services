{"version":3,"sources":["../src/series/sankey/sankey.ts"],"names":[],"mappings":"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","file":"sankey.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport { CartesianSeries } from '../cartesian/cartesian';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../interface/type';\nimport type { IRectMark } from '../../mark/rect';\nimport type { ILinkPathMark } from '../../mark/link-path';\nimport type { ITextMark } from '../../mark/text';\nimport { registerSankeyTransforms } from '@visactor/vgrammar-sankey';\nimport type { Datum, IRectMarkSpec, ILinkPathMarkSpec, ITextMarkSpec } from '../../typings';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { registerFadeInOutAnimation } from '../../animation/config';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport type { ISankeyOpt } from '../../data/transforms/sankey';\nimport { sankeyFormat, sankeyLayout, collectHierarchyField } from '../../data/transforms/sankey';\nimport { sankeyNodes } from '../../data/transforms/sankey-nodes';\nimport { sankeyLinks } from '../../data/transforms/sankey-links';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { DataView } from '@visactor/vdataset';\nimport { LayoutZIndex, AttributeLevel, Event_Bubble_Level, DEFAULT_DATA_INDEX } from '../../constant';\nimport { SeriesData } from '../base/series-data';\nimport { SankeySeriesTooltipHelper } from './tooltip-helper';\nimport type { IBounds } from '@visactor/vutils';\nimport { Bounds, array, isNil } from '@visactor/vutils';\nimport { registerSankeyAnimation, type ISankeyAnimationParams } from './animation';\nimport type { ISankeySeriesSpec } from './interface';\nimport type { ExtendEventParam } from '../../event/interface';\nimport type { IElement, IGlyphElement } from '@visactor/vgrammar-core';\nimport type { IMarkAnimateSpec } from '../../animation/spec';\nimport { ColorOrdinalScale } from '../../scale/color-ordinal-scale';\nimport { RectMark, registerRectMark } from '../../mark/rect';\nimport { TextMark, registerTextMark } from '../../mark/text';\nimport { LinkPathMark, registerLinkPathMark } from '../../mark/link-path';\nimport { sankeySeriesMark } from './constant';\nimport { flatten } from '../../data/transforms/flatten';\nimport type { SankeyNodeElement } from '@visactor/vgrammar-sankey';\nimport { Factory } from '../../core/factory';\nimport type { IMark } from '../../mark/interface';\nimport { TransformLevel } from '../../data/initialize';\nimport type { IBaseScale } from '@visactor/vscale';\nimport { addDataKey, initKeyMap } from '../../data/transforms/data-key';\n\nexport class SankeySeries<T extends ISankeySeriesSpec = ISankeySeriesSpec> extends CartesianSeries<T> {\n  static readonly type: string = SeriesTypeEnum.sankey;\n  type = SeriesTypeEnum.sankey;\n\n  static readonly mark: SeriesMarkMap = sankeySeriesMark;\n\n  private _nodeMark: IRectMark;\n  private _linkMark: ILinkPathMark;\n  private _labelMark?: ITextMark;\n\n  private _nodeLayoutZIndex = LayoutZIndex.Node;\n  private _labelLayoutZIndex = LayoutZIndex.Label;\n  private _labelLimit: number;\n\n  protected _nodesSeriesData?: SeriesData;\n  protected _linksSeriesData?: SeriesData;\n\n  private _viewBox: IBounds = new Bounds();\n\n  protected _categoryField!: string;\n  private _colorScale: IBaseScale;\n  getCategoryField() {\n    return this._categoryField;\n  }\n  setCategoryField(f: string): string {\n    this._categoryField = f;\n    return this._categoryField;\n  }\n\n  protected _valueField!: string;\n  getValueField() {\n    return this._valueField;\n  }\n  setValueField(f: string): string {\n    this._valueField = f;\n    return this._valueField;\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    this.setCategoryField(this._spec.categoryField);\n    this.setValueField(this._spec.valueField);\n    this.setSeriesField(this._spec.seriesField ?? this._spec.categoryField);\n    this._labelLimit = this._spec.label?.limit ?? 100;\n  }\n\n  initData() {\n    super.initData();\n    const viewData = this.getViewData();\n    const rawData = this.getRawData();\n\n    if (rawData && viewData) {\n      // 初始化桑基图数据\n      registerDataSetInstanceTransform(this._dataSet, 'sankeyLayout', sankeyLayout);\n      registerDataSetInstanceTransform(this._dataSet, 'sankeyFormat', sankeyFormat);\n\n      rawData.transform(\n        {\n          type: 'sankeyFormat'\n        },\n        false\n      );\n\n      viewData.transform({\n        type: 'sankeyLayout',\n        options: {\n          view: () => {\n            return {\n              x0: this._viewBox.x1,\n              x1: this._viewBox.x2,\n              y0: this._viewBox.y1,\n              y1: this._viewBox.y2\n            };\n          },\n          sourceField: this._spec.sourceField,\n          targetField: this._spec.targetField,\n          valueField: this._spec.valueField,\n          direction: this._spec.direction,\n          nodeAlign: this._spec.nodeAlign ?? 'justify',\n          nodeGap: this._spec.nodeGap ?? 8,\n          nodeWidth: this._spec.nodeWidth ?? 10,\n          linkWidth: this._spec.linkWidth,\n          minStepWidth: this._spec.minStepWidth,\n          minNodeHeight: this._spec.minNodeHeight ?? 4,\n          minLinkHeight: this._spec.minLinkHeight,\n          iterations: this._spec.iterations,\n          nodeKey: this._spec.nodeKey,\n          linkSortBy: this._spec.linkSortBy,\n          nodeSortBy: this._spec.nodeSortBy,\n          setNodeLayer: this._spec.setNodeLayer\n        } as ISankeyOpt,\n        level: TransformLevel.sankeyLayout\n      });\n\n      // 注册扁平化算法\n      const { dataSet } = this._option;\n      registerDataSetInstanceTransform(dataSet, 'sankeyNodes', sankeyNodes);\n      registerDataSetInstanceTransform(dataSet, 'flatten', flatten);\n      const nodesDataView = new DataView(dataSet, { name: `sankey-node-${this.id}-data` });\n      nodesDataView.parse([this.getViewData()], {\n        type: 'dataview'\n      });\n      nodesDataView.transform({\n        type: 'sankeyNodes'\n      });\n      // sankeyNode进行扁平化处理(针对层级数据)\n      nodesDataView.transform(\n        {\n          type: 'flatten',\n          options: {\n            callback: (node: SankeyNodeElement) => {\n              if (node.datum) {\n                const nodeData = node.datum[node.depth];\n                return { ...node, ...nodeData };\n              }\n              return node;\n            }\n          }\n        },\n        false\n      );\n\n      nodesDataView.transform(\n        {\n          type: 'addVChartProperty',\n          options: {\n            beforeCall: initKeyMap.bind(this),\n            call: addDataKey\n          }\n        },\n        false\n      );\n\n      this._nodesSeriesData = new SeriesData(this._option, nodesDataView);\n\n      registerDataSetInstanceTransform(dataSet, 'sankeyLinks', sankeyLinks);\n      const linksDataView = new DataView(dataSet, { name: `sankey-link-${this.id}-data` });\n      linksDataView.parse([this.getViewData()], {\n        type: 'dataview'\n      });\n      linksDataView.transform({\n        type: 'sankeyLinks'\n      });\n\n      linksDataView.transform(\n        {\n          type: 'addVChartProperty',\n          options: {\n            beforeCall: initKeyMap.bind(this),\n            call: addDataKey\n          }\n        },\n        false\n      );\n      this._linksSeriesData = new SeriesData(this._option, linksDataView);\n    }\n  }\n\n  initMark(): void {\n    const nodeMark = this._createMark(SankeySeries.mark.node, {\n      isSeriesMark: true,\n      key: DEFAULT_DATA_INDEX,\n      dataView: this._nodesSeriesData.getDataView(),\n      dataProductId: this._nodesSeriesData.getProductId(),\n      customShape: this._spec.node?.customShape\n    }) as IRectMark;\n    if (nodeMark) {\n      nodeMark.setZIndex(this._nodeLayoutZIndex);\n      this._nodeMark = nodeMark;\n    }\n\n    const linkMark = this._createMark(SankeySeries.mark.link, {\n      key: DEFAULT_DATA_INDEX,\n      dataView: this._linksSeriesData.getDataView(),\n      dataProductId: this._linksSeriesData.getProductId(),\n      customShape: this._spec.link?.customShape\n    }) as ILinkPathMark;\n    if (linkMark) {\n      this._linkMark = linkMark;\n    }\n\n    if (this._spec.label?.visible) {\n      const labelMark = this._createMark(SankeySeries.mark.label, {\n        key: DEFAULT_DATA_INDEX,\n        dataView: this._nodesSeriesData.getDataView(),\n        dataProductId: this._nodesSeriesData.getProductId()\n      }) as ITextMark;\n      if (labelMark) {\n        this._labelMark = labelMark;\n      }\n    }\n  }\n\n  initMarkStyle(): void {\n    this._initNodeMarkStyle();\n    this._initLinkMarkStyle();\n    this._initLabelMarkStyle();\n  }\n\n  protected _initNodeMarkStyle() {\n    const nodeMark = this._nodeMark;\n    if (!nodeMark) {\n      return;\n    }\n\n    this.setMarkStyle<IRectMarkSpec>(\n      nodeMark,\n      {\n        x: (datum: Datum) => {\n          return datum.x0;\n        },\n        x1: (datum: Datum) => datum.x1,\n        y: (datum: Datum) => datum.y0,\n        y1: (datum: Datum) => datum.y1,\n        fill: (datum: Datum) => {\n          return this._spec.node?.style?.fill ?? this._colorScale?.scale(this._getNodeNameFromData(datum));\n        }\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Mark\n    );\n    this._trigger.registerMark(nodeMark);\n  }\n\n  protected _initLinkMarkStyle() {\n    const linkMark = this._linkMark;\n    if (!linkMark) {\n      return;\n    }\n\n    this.setMarkStyle<ILinkPathMarkSpec>(\n      linkMark,\n      {\n        x0: (datum: Datum) => datum.x0,\n        x1: (datum: Datum) => datum.x1,\n        y0: (datum: Datum) => datum.y0,\n        y1: (datum: Datum) => datum.y1,\n        thickness: (datum: Datum) => datum.thickness,\n        fill: (datum: Datum) => {\n          const fill = this._spec.link?.style?.fill;\n\n          if (fill) {\n            return fill;\n          }\n\n          const sourceName =\n            this._spec.nodeKey || this._rawData.latestData[0]?.nodes?.[0]?.children\n              ? datum.source\n              : this.getNodeList()[datum.source];\n          return this._colorScale?.scale(sourceName);\n        },\n        direction: this._spec.direction ?? 'horizontal'\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n    this._trigger.registerMark(linkMark);\n  }\n\n  protected _initLabelMarkStyle() {\n    if (!this._labelMark) {\n      return;\n    }\n    if (this._spec.direction === 'vertical') {\n      if (this._spec.label.position === 'inside-start') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => datum.x0,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: '#ffffff',\n            text: (datum: Datum) => this._createText(datum),\n            limit: (datum: Datum) => this._spec.label.limit ?? datum.x1 - datum.x0,\n            textAlign: 'left',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else if (this._spec.label.position === 'inside-middle') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => (datum.x0 + datum.x1) / 2,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: '#ffffff',\n            text: (datum: Datum) => this._createText(datum),\n            limit: (datum: Datum) => this._spec.label.limit ?? datum.x1 - datum.x0,\n            textAlign: 'center',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else if (this._spec.label.position === 'inside-end') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => datum.x1,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: '#ffffff',\n            text: (datum: Datum) => this._createText(datum),\n            limit: (datum: Datum) => this._spec.label.limit ?? datum.x1 - datum.x0,\n            textAlign: 'right',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => (datum.x0 + datum.x1) / 2,\n            y: (datum: Datum) => {\n              if (datum.y1 >= this._viewBox.y2) {\n                return datum.y0;\n              }\n              return datum.y1;\n            },\n            fill: (datum: Datum) => {\n              return this._spec.node?.style?.fill ?? this._colorScale?.scale(this._getNodeNameFromData(datum));\n            },\n            text: (datum: Datum) => this._createText(datum),\n            limit: this._labelLimit,\n            textAlign: 'center',\n            textBaseline: (datum: Datum) => {\n              if (datum.y1 >= this._viewBox.y2) {\n                return 'bottom';\n              }\n              return 'top';\n            }\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      }\n    } else {\n      if (this._spec.label.position === 'inside-start') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => datum.x0,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: '#ffffff',\n            text: (datum: Datum) => this._createText(datum),\n            limit: (datum: Datum) => this._spec.label.limit ?? datum.x1 - datum.x0,\n            textAlign: 'left',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else if (this._spec.label.position === 'inside-middle') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => (datum.x0 + datum.x1) / 2,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: '#ffffff',\n            text: (datum: Datum) => this._createText(datum),\n            limit: (datum: Datum) => this._spec.label.limit ?? datum.x1 - datum.x0,\n            textAlign: 'center',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else if (this._spec.label.position === 'inside-end') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => datum.x1,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: '#ffffff',\n            text: (datum: Datum) => this._createText(datum),\n            limit: (datum: Datum) => this._spec.label.limit ?? datum.x1 - datum.x0,\n            textAlign: 'right',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else if (this._spec.label.position === 'left') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => datum.x0,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: (datum: Datum) => {\n              return this._spec.node?.style?.fill ?? this._colorScale?.scale(this._getNodeNameFromData(datum));\n            },\n            text: (datum: Datum) => this._createText(datum),\n            limit: this._labelLimit,\n            textAlign: 'right',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else if (this._spec.label.position === 'right') {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => datum.x1,\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: (datum: Datum) => {\n              return this._spec.node?.style?.fill ?? this._colorScale?.scale(this._getNodeNameFromData(datum));\n            },\n            text: (datum: Datum) => this._createText(datum),\n            limit: this._labelLimit,\n            textAlign: 'left',\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      } else {\n        this.setMarkStyle<ITextMarkSpec>(\n          this._labelMark,\n          {\n            x: (datum: Datum) => {\n              if (datum.x1 >= this._viewBox.x2) {\n                return datum.x0;\n              }\n              return datum.x1;\n            },\n            y: (datum: Datum) => (datum.y0 + datum.y1) / 2,\n            fill: (datum: Datum) => {\n              return this._spec.node?.style?.fill ?? this._colorScale?.scale(this._getNodeNameFromData(datum));\n            },\n            text: (datum: Datum) => this._createText(datum),\n            limit: this._labelLimit,\n            textAlign: (datum: Datum) => {\n              if (datum.x1 >= this._viewBox.x2) {\n                return 'right';\n              }\n              return 'left';\n            },\n            textBaseline: 'middle'\n          },\n          STATE_VALUE_ENUM.STATE_NORMAL,\n          AttributeLevel.Series\n        );\n      }\n    }\n\n    this._labelMark.setZIndex(this._labelLayoutZIndex);\n    this._trigger.registerMark(this._labelMark);\n  }\n\n  private _createText(datum: Datum) {\n    if (isNil(datum) || isNil(datum.datum)) {\n      return '';\n    }\n    let text = datum.datum[this._spec.categoryField] || '';\n    if (this._spec.label?.formatMethod) {\n      text = this._spec.label.formatMethod(text, datum.datum);\n    }\n    return text;\n  }\n\n  initAnimation() {\n    const animationParams: ISankeyAnimationParams = {\n      direction: this.direction,\n      growFrom: () =>\n        this.direction === 'horizontal'\n          ? this._xAxisHelper?.getScale(0).scale(0)\n          : this._yAxisHelper?.getScale(0).scale(0)\n    };\n    const appearPreset = (this._spec?.animationAppear as IMarkAnimateSpec<string>)?.preset;\n    if (this._nodeMark) {\n      this._nodeMark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('sankeyNode')?.(animationParams, appearPreset),\n          userAnimationConfig(SeriesMarkNameEnum.node, this._spec, this._markAttributeContext)\n        )\n      );\n    }\n    if (this._linkMark) {\n      this._linkMark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('sankeyLinkPath')?.(animationParams, appearPreset),\n          userAnimationConfig(SeriesMarkNameEnum.link, this._spec, this._markAttributeContext)\n        )\n      );\n    }\n    if (this._labelMark) {\n      this._labelMark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('fadeInOut')?.(),\n          userAnimationConfig(SeriesMarkNameEnum.label, this._spec, this._markAttributeContext)\n        )\n      );\n    }\n  }\n\n  protected initEvent(): void {\n    super.initEvent();\n\n    this._nodesSeriesData.getDataView()?.target.addListener('change', this.nodesSeriesDataUpdate.bind(this));\n    this._linksSeriesData.getDataView()?.target.addListener('change', this.linksSeriesDataUpdate.bind(this));\n    const emphasisSpec = this._spec.emphasis ?? ({} as T['emphasis']);\n    // 没有关闭交互时，才增加这些交互事件\n    if (this._option.disableTriggerEvent !== true) {\n      if (emphasisSpec.enable && emphasisSpec.effect === 'adjacency') {\n        if (emphasisSpec.trigger === 'hover') {\n          // 浮动事件\n          this.event.on('pointerover', { level: Event_Bubble_Level.chart }, this._handleAdjacencyClick);\n        } else {\n          // emphasisSpec.trigger === 'click'\n          // 点击事件\n          this.event.on('pointerdown', { level: Event_Bubble_Level.chart }, this._handleAdjacencyClick);\n        }\n      }\n\n      if (emphasisSpec.enable && emphasisSpec.effect === 'related') {\n        if (emphasisSpec.trigger === 'hover') {\n          // 浮动事件\n          this.event.on('pointerover', { level: Event_Bubble_Level.chart }, this._handleRelatedClick);\n        } else {\n          // emphasisSpec.trigger === 'click'\n          // 点击事件\n          this.event.on('pointerdown', { level: Event_Bubble_Level.chart }, this._handleRelatedClick);\n        }\n      }\n    }\n  }\n\n  private nodesSeriesDataUpdate() {\n    this._nodesSeriesData.updateData();\n\n    this._setNodeOrdinalColorScale();\n  }\n\n  private linksSeriesDataUpdate() {\n    this._linksSeriesData.updateData();\n  }\n\n  protected _handleAdjacencyClick = (params: ExtendEventParam) => {\n    const element = params.item;\n    if (element && element.mark.id().includes('node')) {\n      this._handleNodeAdjacencyClick(element);\n    } else if (element && element.mark.id().includes('link')) {\n      this._handleLinkAdjacencyClick(element);\n    } else {\n      this._handleClearEmpty();\n    }\n  };\n\n  protected _handleRelatedClick = (params: ExtendEventParam) => {\n    const element = params.item;\n    if (element && element.mark.id().includes('node')) {\n      this._handleNodeRelatedClick(element);\n    } else if (element && element.mark.id().includes('link')) {\n      this._handleLinkRelatedClick(element);\n    } else {\n      this._handleClearEmpty();\n    }\n  };\n\n  protected _handleClearEmpty = () => {\n    const nodeVGrammarMark = this._nodeMark.getProduct();\n\n    if (!nodeVGrammarMark || !nodeVGrammarMark.elements || !nodeVGrammarMark.elements.length) {\n      return;\n    }\n    const allNodeElements = nodeVGrammarMark.elements;\n\n    const linkVGrammarMark = this._linkMark.getProduct();\n\n    if (!linkVGrammarMark || !linkVGrammarMark.elements || !linkVGrammarMark.elements.length) {\n      return;\n    }\n    const allLinkElements = linkVGrammarMark.elements;\n\n    const labelVGrammarMark = this._labelMark.getProduct();\n\n    if (!labelVGrammarMark || !labelVGrammarMark.elements || !labelVGrammarMark.elements.length) {\n      return;\n    }\n    const allLabelElements = labelVGrammarMark.elements;\n\n    allNodeElements.forEach(el => {\n      el.clearStates();\n    });\n    allLinkElements.forEach(el => {\n      el.clearStates();\n    });\n    allLabelElements.forEach(el => {\n      el.clearStates();\n    });\n  };\n\n  protected _handleNodeAdjacencyClick = (element: IElement) => {\n    const nodeDatum = element.getDatum();\n    const highlightNodes: string[] = [nodeDatum.key];\n\n    if (this._linkMark) {\n      const vGrammarMark = this._linkMark.getProduct();\n\n      if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n        return;\n      }\n      const allLinkElements = vGrammarMark.elements;\n\n      allLinkElements.forEach((linkEl: IElement, i: number) => {\n        linkEl.clearStates();\n        const linkDatum = linkEl.getDatum();\n        const father = linkDatum?.parents ? 'parents' : 'source';\n        if (array(linkDatum[father]).includes(nodeDatum.key)) {\n          // 下游link\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n          }\n\n          if (!highlightNodes.includes(linkDatum.target)) {\n            highlightNodes.push(linkDatum.target);\n          }\n\n          let ratio;\n          if (father === 'parents') {\n            const originalDatum = linkDatum.datum;\n            const val = originalDatum\n              ? originalDatum\n                  .filter((entry: any) => entry.parents.some((par: any) => par.key === nodeDatum.key))\n                  .reduce((sum: number, d: any) => {\n                    return (sum += d.value);\n                  }, 0)\n              : 0;\n            ratio = val / linkDatum.value;\n          }\n\n          linkEl.addState('selected', { ratio });\n        } else if (linkDatum.target === nodeDatum.key) {\n          // 上游link\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n          }\n        } else {\n          linkEl.useStates(['blur']);\n        }\n      });\n    }\n\n    if (this._nodeMark) {\n      const vGrammarMark = this._nodeMark.getProduct();\n\n      if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n        return;\n      }\n      const allNodeElements = vGrammarMark.elements;\n\n      allNodeElements.forEach(el => {\n        el.clearStates();\n        if (highlightNodes.includes(el.getDatum().key)) {\n          //\n        } else {\n          el.useStates(['blur']);\n        }\n      });\n    }\n\n    if (this._labelMark) {\n      const vGrammarMark = this._labelMark.getProduct();\n\n      if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n        return;\n      }\n      const allLabelElements = vGrammarMark.elements;\n\n      allLabelElements.forEach(el => {\n        el.clearStates();\n        if (highlightNodes.includes(el.getDatum().key)) {\n          //\n        } else {\n          el.useStates(['blur']);\n        }\n      });\n    }\n  };\n\n  protected _handleLinkAdjacencyClick = (element: IGlyphElement) => {\n    const curLinkDatum = element.getDatum();\n    const highlightNodes: string[] = [curLinkDatum.source, curLinkDatum.target];\n\n    if (this._linkMark) {\n      const vGrammarMark = this._linkMark.getProduct();\n\n      if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n        return;\n      }\n      const allLinkElements = vGrammarMark.elements;\n\n      allLinkElements.forEach(linkEl => {\n        linkEl.clearStates();\n\n        if (linkEl === element) {\n          linkEl.addState('selected', { ratio: 1 });\n        } else {\n          linkEl.useStates(['blur']);\n        }\n      });\n    }\n\n    if (this._nodeMark) {\n      const vGrammarMark = this._nodeMark.getProduct();\n\n      if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n        return;\n      }\n      const allNodeElements = vGrammarMark.elements;\n\n      allNodeElements.forEach(el => {\n        el.clearStates();\n        if (highlightNodes.includes(el.getDatum().key)) {\n          //\n        } else {\n          el.useStates(['blur']);\n        }\n      });\n    }\n\n    if (this._labelMark) {\n      const vGrammarMark = this._labelMark.getProduct();\n\n      if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n        return;\n      }\n      const allLabelElements = vGrammarMark.elements;\n\n      allLabelElements.forEach(el => {\n        el.clearStates();\n        if (highlightNodes.includes(el.getDatum().key)) {\n          //\n        } else {\n          el.useStates(['blur']);\n        }\n      });\n    }\n  };\n\n  protected _handleNodeRelatedClick = (element: IElement) => {\n    const nodeDatum = element.getDatum();\n    const nodeVGrammarMark = this._nodeMark.getProduct();\n\n    if (!nodeVGrammarMark || !nodeVGrammarMark.elements || !nodeVGrammarMark.elements.length) {\n      return;\n    }\n    const allNodeElements = nodeVGrammarMark.elements;\n\n    const linkVGrammarMark = this._linkMark.getProduct();\n\n    if (!linkVGrammarMark || !linkVGrammarMark.elements || !linkVGrammarMark.elements.length) {\n      return;\n    }\n    const allLinkElements = linkVGrammarMark.elements;\n\n    const father = allLinkElements[0].getDatum()?.parents ? 'parents' : 'source';\n\n    if (father === 'source') {\n      // node-link 型数据\n      const highlightNodes: string[] = [nodeDatum.key];\n      const highlightLinks: string[] = [];\n\n      allLinkElements.forEach((linkEl: IElement, i: number) => {\n        linkEl.clearStates();\n        const linkDatum = linkEl.getDatum();\n        const father = linkDatum?.parents ? 'parents' : 'source';\n\n        if (array(linkDatum[father]).includes(nodeDatum.key)) {\n          // 下游link\n          if (!highlightLinks.includes(linkDatum.key ?? linkDatum.index)) {\n            highlightLinks.push(linkDatum.key ?? linkDatum.index);\n          }\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n          }\n\n          if (!highlightNodes.includes(linkDatum.target)) {\n            highlightNodes.push(linkDatum.target);\n            // 下游link的目标节点\n            const targetNode = allNodeElements.find(nodeElement => {\n              return nodeElement.data[0].key === linkDatum.target;\n            });\n\n            // 以下游link的目标节点为起点的links\n            let targetNodeSourceLinks: any[] = targetNode.data[0].sourceLinks as any[];\n            while (targetNodeSourceLinks?.length > 0) {\n              const newTargetNodeSourceLinks: any[] = [];\n              targetNodeSourceLinks.forEach((targetNodeSourceLinkDatum: any) => {\n                if (!highlightLinks.includes(targetNodeSourceLinkDatum.key ?? targetNodeSourceLinkDatum.index)) {\n                  highlightLinks.push(targetNodeSourceLinkDatum.key ?? targetNodeSourceLinkDatum.index);\n                  // 该links的目标节点\n                  if (!highlightNodes.includes(targetNodeSourceLinkDatum.target)) {\n                    highlightNodes.push(targetNodeSourceLinkDatum.target);\n                    const sourceNodeTemp = allNodeElements.find(nodeElement => {\n                      return nodeElement.data[0].key === targetNodeSourceLinkDatum.target;\n                    });\n                    // 以该目标节点为起点的links\n                    newTargetNodeSourceLinks.push(sourceNodeTemp.data[0].targetLinks as any[]);\n                  } else {\n                    return;\n                  }\n                } else {\n                  return;\n                }\n              });\n              targetNodeSourceLinks = newTargetNodeSourceLinks;\n              return;\n            }\n          }\n        } else if (linkDatum.target === nodeDatum.key) {\n          // 上游link\n          if (!highlightLinks.includes(linkDatum.key ?? linkDatum.index)) {\n            highlightLinks.push(linkDatum.key ?? linkDatum.index);\n          }\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n            const sourceNode = allNodeElements.find(nodeElement => {\n              return nodeElement.data[0].key === linkDatum.source;\n            });\n            let sourceNodeTargetLinks: any[] = sourceNode.data[0].targetLinks as any;\n            while (sourceNodeTargetLinks?.length > 0) {\n              const newSourceNodeTargetLinks: any[] = [];\n              sourceNodeTargetLinks.forEach((sourceNodeTargetLinkDatum: any) => {\n                if (!highlightLinks.includes(sourceNodeTargetLinkDatum.key ?? sourceNodeTargetLinkDatum.index)) {\n                  highlightLinks.push(sourceNodeTargetLinkDatum.key ?? sourceNodeTargetLinkDatum.index);\n                  if (!highlightNodes.includes(sourceNodeTargetLinkDatum.source)) {\n                    highlightNodes.push(sourceNodeTargetLinkDatum.source);\n                    const sourceNodeTemp = allNodeElements.find(nodeElement => {\n                      return nodeElement.data[0].key === sourceNodeTargetLinkDatum.source;\n                    });\n                    newSourceNodeTargetLinks.push(sourceNodeTemp.data[0].targetLinks as any[]);\n                  } else {\n                    return;\n                  }\n                } else {\n                  return;\n                }\n              });\n              sourceNodeTargetLinks = newSourceNodeTargetLinks;\n              return;\n            }\n          }\n        }\n      });\n\n      if (this._linkMark) {\n        const vGrammarMark = this._linkMark.getProduct();\n\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allLinkElements = vGrammarMark.elements;\n\n        allLinkElements.forEach((linkEl: IElement, i: number) => {\n          linkEl.clearStates();\n          if (highlightLinks.includes(linkEl.getDatum().key ?? linkEl.getDatum().index)) {\n            linkEl.useStates(['selected']);\n          } else {\n            linkEl.useStates(['blur']);\n          }\n        });\n      }\n\n      if (this._nodeMark) {\n        const vGrammarMark = this._nodeMark.getProduct();\n\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allNodeElements = vGrammarMark.elements;\n\n        allNodeElements.forEach(el => {\n          el.clearStates();\n          if (highlightNodes.includes(el.getDatum().key)) {\n            //\n          } else {\n            el.useStates(['blur']);\n          }\n        });\n      }\n\n      if (this._labelMark) {\n        const vGrammarMark = this._labelMark.getProduct();\n\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allLabelElements = vGrammarMark.elements;\n\n        allLabelElements.forEach(el => {\n          el.clearStates();\n          if (highlightNodes.includes(el.getDatum().key)) {\n            //\n          } else {\n            el.useStates(['blur']);\n          }\n        });\n      }\n    } else {\n      // 层级型数据\n      const highlightNodes: string[] = [nodeDatum.key];\n\n      const upstreamLinks = nodeDatum.targetLinks.reduce((res: any[], link: any) => {\n        const dividedLinks = array((link as any).datum);\n\n        dividedLinks.forEach(dividedLink => {\n          const parents = dividedLink.parents;\n          const len = parents.length;\n\n          for (let i = 0; i < len; i++) {\n            const source = parents[i].key;\n            const target = parents[i + 1] ? parents[i + 1].key : nodeDatum.key;\n            const value = dividedLink.value;\n\n            // 检查 res 数组中是否已存在相同的 source 和 target\n            const existingItem = res.find(item => item.source === source && item.target === target);\n\n            if (existingItem) {\n              // 如果存在相同的项，则对其 value 进行累加\n              existingItem.value += value;\n            } else {\n              // 如果不存在相同的项，则添加新的项到 res 数组中\n              res.push({ source, target, value });\n            }\n          }\n        });\n        return res;\n      }, []);\n\n      allLinkElements.forEach((linkEl: IElement, i: number) => {\n        linkEl.clearStates();\n        const linkDatum = linkEl.getDatum();\n        const father = linkDatum?.parents ? 'parents' : 'source';\n        const originalDatum = linkDatum.datum;\n        const selectedDatum = originalDatum\n          ? originalDatum.filter((entry: any) => entry[father].some((par: any) => par.key === nodeDatum.key))\n          : null;\n\n        const upSelectedLink = upstreamLinks.find(\n          (upLink: any) => upLink.source === linkDatum.source && upLink.target === linkDatum.target\n        );\n\n        if (selectedDatum && selectedDatum.length) {\n          // 下游link\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n          }\n\n          if (!highlightNodes.includes(linkDatum.target)) {\n            highlightNodes.push(linkDatum.target);\n          }\n\n          const val = selectedDatum.reduce((sum: number, d: any) => {\n            return (sum += d.value);\n          }, 0);\n          const ratio = val / linkDatum.value;\n\n          linkEl.useStates(['selected']);\n          linkEl.addState('selected', { ratio });\n\n          return;\n        }\n\n        if (upSelectedLink) {\n          // 上游link\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n          }\n\n          if (!highlightNodes.includes(linkDatum.target)) {\n            highlightNodes.push(linkDatum.target);\n          }\n\n          linkEl.useStates(['selected']);\n          linkEl.addState('selected', { ratio: upSelectedLink.value / linkDatum.value });\n\n          return;\n        }\n\n        linkEl.useStates(['blur']);\n\n        return;\n      });\n\n      if (this._nodeMark) {\n        const vGrammarMark = this._nodeMark.getProduct();\n\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allNodeElements = vGrammarMark.elements;\n\n        allNodeElements.forEach(el => {\n          el.clearStates();\n          if (highlightNodes.includes(el.getDatum().key)) {\n            //\n          } else {\n            el.useStates(['blur']);\n          }\n        });\n      }\n\n      if (this._labelMark) {\n        const vGrammarMark = this._labelMark.getProduct();\n\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allLabelElements = vGrammarMark.elements;\n\n        allLabelElements.forEach(el => {\n          el.clearStates();\n          if (highlightNodes.includes(el.getDatum().key)) {\n            //\n          } else {\n            el.useStates(['blur']);\n          }\n        });\n      }\n    }\n  };\n\n  protected _handleLinkRelatedClick = (element: IGlyphElement) => {\n    const nodeVGrammarMark = this._nodeMark.getProduct();\n\n    if (!nodeVGrammarMark || !nodeVGrammarMark.elements || !nodeVGrammarMark.elements.length) {\n      return;\n    }\n    const allNodeElements = nodeVGrammarMark.elements;\n\n    const linkVGrammarMark = this._linkMark.getProduct();\n\n    if (!linkVGrammarMark || !linkVGrammarMark.elements || !linkVGrammarMark.elements.length) {\n      return;\n    }\n    const allLinkElements = linkVGrammarMark.elements;\n\n    const father = element.getDatum()?.parents ? 'parents' : 'source';\n    if (father === 'source') {\n      if (this._linkMark) {\n        const vGrammarMark = this._linkMark.getProduct();\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allLinkElements = vGrammarMark.elements;\n        allLinkElements.forEach(linkEl => {\n          linkEl.clearStates();\n        });\n      }\n\n      if (this._nodeMark) {\n        const vGrammarMark = this._nodeMark.getProduct();\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allNodeElements = vGrammarMark.elements;\n        allNodeElements.forEach(el => {\n          el.clearStates();\n        });\n      }\n\n      if (this._labelMark) {\n        const vGrammarMark = this._labelMark.getProduct();\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allLabelElements = vGrammarMark.elements;\n        allLabelElements.forEach(el => {\n          el.clearStates();\n        });\n      }\n    } else {\n      const curLinkDatum = element.getDatum();\n      const highlightNodes: string[] = [curLinkDatum.source, curLinkDatum.target];\n      const upstreamLinks: Array<{ source: string; target: string; value: number }> = [];\n\n      const dividedLinks = array((curLinkDatum as any).datum);\n\n      dividedLinks.forEach(dividedLink => {\n        const parents = (dividedLink as any).parents;\n        const len = parents.length;\n        for (let i = 0; i < len - 1; i++) {\n          const source = parents[i].key;\n          const target = parents[i + 1].key;\n          const value = dividedLink.value;\n\n          // 检查 upstreamLinks 数组中是否已存在相同的 source 和 target\n          const existingItem = upstreamLinks.find(item => item.source === source && item.target === target);\n          upstreamLinks.push({\n            source: parents[i].key,\n            target: parents[i + 1].key,\n            value: dividedLink.value\n          });\n\n          if (existingItem) {\n            // 如果存在相同的项，则对其 value 进行累加\n            existingItem.value += value;\n          } else {\n            // 如果不存在相同的项，则添加新的项到 upstreamLinks 数组中\n            upstreamLinks.push({ source, target, value });\n          }\n        }\n      });\n\n      allLinkElements.forEach(linkEl => {\n        linkEl.clearStates();\n        const linkDatum = linkEl.getDatum();\n        const originalDatum = linkDatum.datum;\n\n        if (linkDatum.source === curLinkDatum.source && linkDatum.target === curLinkDatum.target) {\n          // 自身\n          linkEl.useStates(['selected']);\n          linkEl.addState('selected', { ratio: 1 });\n          return;\n        }\n\n        const selectedDatum = originalDatum\n          ? originalDatum.filter((entry: any) => {\n              const parentKeysList = entry.parents.map((item: any) => item.key);\n              return parentKeysList.includes(curLinkDatum.source) && parentKeysList.includes(curLinkDatum.target);\n            })\n          : null;\n\n        if (selectedDatum && selectedDatum.length) {\n          // 下游link\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n          }\n\n          if (!highlightNodes.includes(linkDatum.target)) {\n            highlightNodes.push(linkDatum.target);\n          }\n\n          const val = selectedDatum\n            .filter((entry: any) => {\n              return entry.parents.some((par: any, index: number) => {\n                return par.key === curLinkDatum.source && entry.parents[index + 1]?.key === curLinkDatum.target;\n              });\n            })\n            .reduce((sum: number, d: any) => {\n              return (sum += d.value);\n            }, 0);\n          const ratio = val / linkDatum.value;\n\n          linkEl.useStates(['selected']);\n          linkEl.addState('selected', { ratio });\n\n          return;\n        }\n\n        const upSelectedLink = upstreamLinks.find(\n          (upLink: any) => upLink.source === linkDatum.source && upLink.target === linkDatum.target\n        );\n\n        if (upSelectedLink) {\n          // 点击节点的上游一层的节点\n          if (!highlightNodes.includes(linkDatum.source)) {\n            highlightNodes.push(linkDatum.source);\n          }\n          if (!highlightNodes.includes(linkDatum.target)) {\n            highlightNodes.push(linkDatum.target);\n          }\n          linkEl.useStates(['selected']);\n          linkEl.addState('selected', { ratio: upSelectedLink.value / linkDatum.value });\n\n          return;\n        }\n        linkEl.useStates(['blur']);\n\n        return;\n      });\n\n      allNodeElements.forEach(el => {\n        el.clearStates();\n        if (highlightNodes.includes(el.getDatum().key)) {\n          //\n        } else {\n          el.useStates(['blur']);\n        }\n      });\n\n      if (this._labelMark) {\n        const vGrammarMark = this._labelMark.getProduct();\n\n        if (!vGrammarMark || !vGrammarMark.elements || !vGrammarMark.elements.length) {\n          return;\n        }\n        const allLabelElements = vGrammarMark.elements;\n\n        allLabelElements.forEach(el => {\n          el.clearStates();\n          if (highlightNodes.includes(el.getDatum().key)) {\n            //\n          } else {\n            el.useStates(['blur']);\n          }\n        });\n      }\n    }\n  };\n\n  protected initTooltip() {\n    this._tooltipHelper = new SankeySeriesTooltipHelper(this);\n    this._nodeMark && this._tooltipHelper.activeTriggerSet.mark.add(this._nodeMark);\n    this._linkMark && this._tooltipHelper.activeTriggerSet.mark.add(this._linkMark);\n    this._labelMark && this._tooltipHelper.activeTriggerSet.mark.add(this._labelMark);\n  }\n\n  _setNodeOrdinalColorScale() {\n    const colorScale = this._option?.globalScale?.getScale('color');\n\n    if ((colorScale as any)?._specified) {\n      this._colorScale = colorScale;\n      return;\n    }\n\n    let colorDomain: string[];\n    let colorRange: string[];\n\n    if (colorScale) {\n      colorDomain = colorScale.domain();\n      colorRange = colorScale.range();\n    }\n\n    if (!colorRange) {\n      colorRange = this._getDataScheme() as unknown as string[];\n    }\n\n    if (!colorDomain || isNil(colorDomain[0])) {\n      // no validate domain\n      colorDomain = this.getNodeList();\n\n      if (colorDomain.length > 10) {\n        colorRange = (this._getDataScheme()[1] as any)?.scheme;\n      }\n    }\n\n    const ordinalScale = new ColorOrdinalScale();\n\n    ordinalScale.domain(colorDomain).range?.(colorRange);\n\n    this._colorScale = ordinalScale;\n    return;\n  }\n\n  getNodeList() {\n    const nodeList = this._rawData.latestData[0]?.nodes\n      ? this._rawData.latestData[0].nodes[0]?.children\n        ? Array.from(this.extractNamesFromTree(this._rawData.latestData[0].nodes, this._spec.categoryField))\n        : this._rawData.latestData[0].nodes.map((datum: Datum, index: number) => {\n            return datum[this._spec.categoryField];\n          })\n      : this._rawData.latestData[0]?.values.map((datum: Datum, index: number) => {\n          return datum[this._spec.categoryField];\n        });\n\n    return nodeList;\n  }\n\n  _getNodeNameFromData(datum: Datum) {\n    return datum?.datum ? datum?.datum[this._spec.categoryField] : datum[this._spec.categoryField];\n  }\n\n  extractNamesFromTree(tree: any, categoryName: string) {\n    // Set 用于存储唯一的 name 值\n    const uniqueNames = new Set();\n\n    // 遍历当前节点的子节点\n    tree.forEach((node: any) => {\n      // 将当前节点的 name 值添加到 Set 中\n      uniqueNames.add(node[categoryName]);\n\n      // 如果当前节点还有子节点，则递归调用该函数继续遍历子节点\n      if (node.children) {\n        const childNames = this.extractNamesFromTree(node.children, categoryName);\n        childNames.forEach(name => uniqueNames.add(name));\n      }\n    });\n\n    return uniqueNames;\n  }\n\n  getDimensionField() {\n    return [this._spec.categoryField];\n  }\n\n  getMeasureField(): string[] {\n    return [this._valueField];\n  }\n\n  getRawDataStatisticsByField(field: string, isNumeric?: boolean) {\n    // overwrite the getRawDataStatisticsByField of base-series\n    if (!this._rawStatisticsCache) {\n      this._rawStatisticsCache = {};\n    }\n\n    if (!this._rawStatisticsCache[field]) {\n      const canUseViewStatistics = this._viewDataStatistics && this.getViewData().transformsArr.length <= 1;\n\n      if (canUseViewStatistics && this._viewDataStatistics.latestData?.[field]) {\n        this._rawStatisticsCache[field] = this._viewDataStatistics.latestData[field];\n      } else if (this._rawData) {\n        this._rawStatisticsCache[field] = {\n          values: this._collectByField(field)\n        };\n      }\n    }\n\n    return this._rawStatisticsCache[field];\n  }\n\n  private _collectByField(field: string): string[] {\n    const keyArray: any[] = [];\n    const rawData = this.getRawData()?.latestData?.[0];\n\n    if (!rawData) {\n      return [];\n    }\n\n    if ((rawData as any).links) {\n      //node-link型数据\n      if ((rawData as any).nodes?.length) {\n        (rawData as any).nodes.forEach((node: any) => {\n          if (node[this._seriesField]) {\n            keyArray.push(node[this._seriesField]);\n          }\n        });\n      }\n    } else if ((rawData as any).nodes) {\n      const set = new Set<string>();\n      // 层级型数据\n      collectHierarchyField(set, (rawData as any).nodes, this._seriesField);\n\n      return Array.from(set);\n    }\n\n    return keyArray;\n  }\n\n  onLayoutEnd(ctx: any): void {\n    super.onLayoutEnd(ctx);\n    this._viewBox.set(0, 0, this._region.getLayoutRect().width, this._region.getLayoutRect().height);\n\n    // calculate the sankeyLayout\n    this.getViewData().reRunAllTransform();\n    this._nodesSeriesData.updateData();\n    this._linksSeriesData.updateData();\n  }\n\n  getDefaultShapeType(): string {\n    return 'square';\n  }\n\n  // make sure this function fast\n  protected _noAnimationDataKey(datum: Datum, index: number): unknown | undefined {\n    return undefined;\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._nodeMark, this._linkMark];\n  }\n}\n\nexport const registerSankeySeries = () => {\n  registerSankeyTransforms();\n  registerRectMark();\n  registerLinkPathMark();\n  registerTextMark();\n  registerSankeyAnimation();\n  registerFadeInOutAnimation();\n  Factory.registerSeries(SankeySeries.type, SankeySeries);\n};\n"]}