{"version":3,"sources":["../src/series/base/base-series-transformer.ts"],"names":[],"mappings":"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","file":"base-series-transformer.js","sourcesContent":["import type { IChartSpecInfo } from '../../chart/interface';\nimport type { ILabelSpec, TransformedLabelSpec } from '../../component/label';\nimport type { IBaseModelSpecTransformerResult } from '../../model/interface';\nimport { BaseModelSpecTransformer } from '../../model/base-model-transformer';\nimport type { ISeriesSpec } from '../../typings';\nimport { array, get, isValid, mergeSpec, transformSeriesThemeToMerge } from '../../util';\nimport type { SeriesMarkNameEnum } from '../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport type { ISeries } from '../interface';\nimport { getDirectionFromSeriesSpec } from '../util/spec';\n\nexport class BaseSeriesSpecTransformer<T extends ISeriesSpec, K> extends BaseModelSpecTransformer<T, K> {\n  markLabelSpec: Partial<Record<SeriesMarkNameEnum, TransformedLabelSpec[]>> = {};\n\n  getLabelSpec(markName: string) {\n    return this.markLabelSpec[markName];\n  }\n\n  setLabelSpec(markName: string, label: TransformedLabelSpec | TransformedLabelSpec[]) {\n    this.markLabelSpec[markName] = array(label);\n  }\n\n  addLabelSpec(markName: string, label: TransformedLabelSpec, head = false) {\n    if (!this.markLabelSpec[markName]) {\n      this.markLabelSpec[markName] = [];\n    }\n    if (head) {\n      // 排序靠前的 label 优先布局，尽可能避免碰撞隐藏\n      this.markLabelSpec[markName].unshift(label);\n    } else {\n      this.markLabelSpec[markName].push(label);\n    }\n  }\n\n  getTheme(spec: T, chartSpec: any): K {\n    const direction = getDirectionFromSeriesSpec(spec);\n    const chartTheme = this._option?.getTheme();\n    const { markByName, mark } = chartTheme;\n    const type = this._option.type;\n    const theme = transformSeriesThemeToMerge(get(chartTheme, `series.${type}`), type, mark, markByName);\n    const themeWithDirection = transformSeriesThemeToMerge(\n      get(chartTheme, `series.${type}_${direction}`),\n      `${type}_${direction}`,\n      mark,\n      markByName\n    );\n    return mergeSpec({}, theme, themeWithDirection);\n  }\n\n  /** 不建议重写该方法，最好重写对应子步骤 */\n  transformSpec(spec: T, chartSpec: any, chartSpecInfo?: IChartSpecInfo): IBaseModelSpecTransformerResult<T, K> {\n    const result = super.transformSpec(spec, chartSpec, chartSpecInfo);\n    this._transformLabelSpec(result.spec);\n    return {\n      ...result,\n      markLabelSpec: this.markLabelSpec\n    };\n  }\n\n  protected _transformLabelSpec(spec: T) {\n    // empty\n  }\n\n  protected _addMarkLabelSpec<V extends ISeries = ISeries>(\n    spec: T,\n    markName: SeriesMarkNameEnum,\n    labelSpecKey: keyof T = 'label' as any,\n    styleHandlerName: keyof V = 'initLabelMarkStyle',\n    hasAnimation?: boolean,\n    head?: boolean\n  ): void {\n    const labelSpec = spec?.[labelSpecKey] as ILabelSpec;\n    if (labelSpec?.visible) {\n      this.addLabelSpec(\n        markName,\n        {\n          animation: hasAnimation ?? spec.animation,\n          ...labelSpec,\n          getStyleHandler: (series: V) => (series[styleHandlerName] as any)?.bind(series)\n        } as TransformedLabelSpec,\n        head\n      );\n    }\n  }\n\n  protected _getDefaultSpecFromChart(chartSpec: any): any {\n    const spec = (super._getDefaultSpecFromChart(chartSpec) as any) ?? {};\n    const { outerRadius, innerRadius } = chartSpec;\n    if (isValid(outerRadius)) {\n      spec.outerRadius = outerRadius;\n    }\n    if (isValid(innerRadius)) {\n      spec.innerRadius = innerRadius;\n    }\n    return Object.keys(spec).length > 0 ? spec : undefined;\n  }\n}\n"]}