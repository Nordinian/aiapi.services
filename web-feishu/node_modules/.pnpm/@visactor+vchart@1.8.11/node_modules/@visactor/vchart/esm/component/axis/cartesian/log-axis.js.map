{"version":3,"sources":["../src/component/axis/cartesian/log-axis.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEzC,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAM5C,MAAM,OAAO,gBAA0E,SAAQ,mBAAsB;IAArH;;QAEE,SAAI,GAAG,iBAAiB,CAAC,gBAAgB,CAAC;QAIhC,UAAK,GAAY,KAAK,CAAC;QAEvB,WAAM,GAAa,IAAI,QAAQ,EAAE,CAAC;IAc9C,CAAC;IARW,UAAU;;QAClB,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAA,IAAI,CAAC,KAAK,CAAC,IAAI,mCAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,oBAAoB;IAEpB,CAAC;;AApBM,qBAAI,GAAG,iBAAiB,CAAC,gBAAgB,CAAC;AAG1C,wBAAO,GAAG,MAAM,CAAC;AAoB1B,KAAK,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;AAEzC,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAAG,EAAE;IAC3C,YAAY,EAAE,CAAC;IACf,OAAO,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACrE,CAAC,CAAC","file":"log-axis.js","sourcesContent":["import { CartesianLinearAxis } from './linear-axis';\nimport { ComponentTypeEnum } from '../../interface/type';\nimport { LinearAxisMixin } from '../mixin/linear-axis-mixin';\nimport { LogScale } from '@visactor/vscale';\nimport { mixin } from '@visactor/vutils';\nimport type { ICartesianLogAxisSpec } from './interface';\nimport { Factory } from '../../../core/factory';\nimport { registerAxis } from '../base-axis';\n\nexport interface CartesianLogAxis<T extends ICartesianLogAxisSpec = ICartesianLogAxisSpec>\n  extends Pick<LinearAxisMixin, 'valueToPosition'>,\n    CartesianLinearAxis<T> {}\n\nexport class CartesianLogAxis<T extends ICartesianLogAxisSpec = ICartesianLogAxisSpec> extends CartesianLinearAxis<T> {\n  static type = ComponentTypeEnum.cartesianLogAxis;\n  type = ComponentTypeEnum.cartesianLogAxis;\n\n  static specKey = 'axes';\n\n  protected _zero: boolean = false;\n\n  protected _scale: LogScale = new LogScale();\n  protected declare _scales: LogScale[];\n\n  /**\n   * @override\n   */\n  protected initScales() {\n    super.initScales();\n    this._scale.base(this._spec.base ?? 10);\n  }\n\n  transformScaleDomain() {\n    // do nothing\n  }\n}\n\nmixin(CartesianLogAxis, LinearAxisMixin);\n\nexport const registerCartesianLogAxis = () => {\n  registerAxis();\n  Factory.registerComponent(CartesianLogAxis.type, CartesianLogAxis);\n};\n"]}