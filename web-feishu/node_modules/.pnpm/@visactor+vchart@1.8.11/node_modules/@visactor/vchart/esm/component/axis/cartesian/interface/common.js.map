{"version":3,"sources":["../src/component/axis/cartesian/interface/common.ts"],"names":[],"mappings":"","file":"common.js","sourcesContent":["import type { SegmentAttributes, AxisLabelOverlap } from '@visactor/vrender-components';\nimport type { IBaseScale } from '@visactor/vscale';\nimport type { IAxis, IAxisLocationCfg, IDomainLine, ILabel, ITickCallbackOption, ITitle } from '../../interface';\nimport type { ITextMarkSpec, StringOrNumber } from '../../../../typings';\n\nexport type ICartesianDomainLineSpec = {\n  startSymbol?: SegmentAttributes['startSymbol'];\n  endSymbol?: SegmentAttributes['endSymbol'];\n  // /**\n  //  * TODO: 待支持\n  //  * 坐标轴截断范围，当需要对坐标轴轴线截断时，可配置该属性\n  //  */\n  // breakRange?: [number, number];\n  // /**\n  //  * TODO: 待支持\n  //  * 截断区域的形状\n  //  */\n  // breakShape?: SymbolType | [SymbolType, SymbolType];\n  // /**\n  //  * TODO: 待支持\n  //  * 截断图形样式\n  //  */\n  // breakShapeStyle?: Partial<IAttribute>;\n  /**\n   * X 轴或者 Y 轴的轴线是否在另一个轴的 0 刻度上，只有在另一个轴为数值轴且包含 0 刻度时有效。\n   * 默认为 false，交由用户按需打开\n   */\n  onZero?: boolean;\n  /**\n   * 当有多轴时，可以用这个属性手动指定，在哪个轴的 0 刻度上。\n   * Tips: 该索引对应所有轴的 index\n   */\n  onZeroAxisIndex?: number;\n  /**\n   * 当有多轴时，可以用这个属性手动指定，在哪个轴的 0 刻度上。\n   */\n  onZeroAxisId?: StringOrNumber;\n};\nexport type ICartesianDomainLine = IDomainLine & ICartesianDomainLineSpec;\n\nexport type ICartesianTitle = ITitle & {\n  /**\n   * 标题是否根据轴方向自动渲染，生效于左右纵轴。\n   * 默认为 true，表现为左轴标题整体旋转 -90 度，右轴标题整体旋转为 90 度。\n   * **如果需要单独在 `textStyle` 中配置文本的 angle 的话，建议将该属性设置为 false。**\n   * @default true\n   */\n  autoRotate?: boolean;\n  /**\n   * 标题朝向，默认朝外(坐标线包围盒外部)\n   * @default false\n   */\n  inside?: boolean;\n};\n\nexport type ICartesianLabel = ILabel & {\n  /**\n   * If labels at the beginning or end of the axis should be aligned flush with the scale range.\n   * 坐标轴首尾文字向内收缩\n   * @default false\n   */\n  flush?: boolean;\n  // /**\n  //  * 第一个坐标轴文字是否显示。默认根据标签重叠策略自动判定。\n  //  * @default null\n  //  */\n  // firstVisible?: boolean | null;\n  /**\n   * `sampling` 开启时生效。\n   * 最后一个坐标轴文字是否显示。默认根据标签重叠策略自动判定。\n   * @default null\n   */\n  lastVisible?: boolean | null;\n  /**\n   * label 相对于容器整体的对齐方式\n   * - `top`：整体向上对齐（垂直方向）\n   * - `middle`：整体居中对齐（垂直方向）\n   * - `bottom`：整体向下对齐（垂直方向）\n   * - `left`：整体向左对齐（水平方向）\n   * - `center`：整体居中对齐（水平方向）\n   * - `right`：整体向右对齐（水平方向）\n   * @since 1.3.0\n   */\n  containerAlign?: 'left' | 'right' | 'center' | 'top' | 'bottom' | 'middle';\n} & AxisLabelOverlap;\n\nexport interface ILinearAxis extends IAxis {\n  readonly zero: boolean;\n  readonly nice: boolean;\n\n  // 用户其他模块扩充轴scale的区间\n  setExtendDomain: (key: string, value: number | undefined) => void;\n}\n\nexport interface IAxisHelper {\n  isContinuous: boolean;\n\n  dataToPosition: (values: any[], cfg?: IAxisLocationCfg) => number;\n  valueToPosition?: (value: any, cfg?: IAxisLocationCfg) => number;\n  getScale?: (depth: number) => IBaseScale;\n  getBandwidth?: (depth: number) => number; // band轴特有\n\n  // 用户其他模块扩充轴scale的区间\n  setExtendDomain?: (key: string, value: number | undefined) => void;\n\n  getAxisType: () => string;\n\n  getAxisId: () => number;\n\n  isInverse: () => boolean;\n\n  // 在地理坐标系系列中，传递经纬度配置字段\n  getFields?: () => string[];\n}\n\nexport interface ITimeLayerType {\n  /**\n   * tick间隔\n   */\n  tickStep?: number;\n  /**\n   * 时间转换格式\n   * @default '%Y%m%d'\n   */\n  timeFormat?: string;\n  /**\n   * 时间转换模式\n   * @default 'local'\n   */\n  timeFormatMode?: 'utc' | 'local'; // todo: 'iso'\n  /**\n   * 期望的连续轴tick数量\n   * The desired number of ticks draw on linear axis.\n   * @default 5\n   * @description 建议的tick数量，并不保证结果一定是配置值\n   * @since 1.4.0 后支持函数回调方式配置\n   */\n  tickCount?: number | ((option: ITickCallbackOption) => number);\n  /**\n   * 强制设置tick数量\n   * The exact number of ticks draw on linear axis. Might lead to decimal step.\n   * @default 5\n   * @description 强制设置的tick数量，可能由于数据范围导致tick值为小数\n   */\n  forceTickCount?: number;\n}\n\nexport type ICartesianAxisUnit = {\n  /**\n   * 是否显示坐标轴单位\n   */\n  visible: boolean;\n\n  /**\n   * 轴单位名称\n   */\n  text?: string | number | number[] | string[];\n  /**\n   * 单位样式\n   */\n  style?: ITextMarkSpec;\n};\n"]}