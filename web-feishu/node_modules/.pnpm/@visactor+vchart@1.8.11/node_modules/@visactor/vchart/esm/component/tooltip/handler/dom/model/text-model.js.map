{"version":3,"sources":["../src/component/tooltip/handler/dom/model/text-model.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,MAAM,OAAO,SAAU,SAAQ,gBAAgB;IAC7C,IAAI,CAAC,SAAoB,EAAE,EAAW,EAAE,GAAiC;QACvE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;SAC5E;IACH,CAAC;IAED,UAAU,CAAC,OAAa,EAAE,SAAmB;QAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,SAAS,EAAE;YACb,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACtC;QACD,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACnC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;SAC/B;IACH,CAAC;CACF","file":"text-model.js","sourcesContent":["import { BaseTooltipModel } from './base-tooltip-model';\n\nexport class TextModel extends BaseTooltipModel {\n  init(classList?: string[], id?: string, tag?: keyof HTMLElementTagNameMap): void {\n    if (!this.product) {\n      this.product = this.createElement(tag ?? 'span', classList, undefined, id);\n    }\n  }\n\n  setContent(content?: any, multiLine?: boolean): void {\n    if (!this.product) {\n      return;\n    }\n    let html = this._option.valueToHtml(content);\n    if (multiLine) {\n      html = html.replaceAll('\\n', '<br>');\n    }\n    if (html !== this.product.innerHTML) {\n      this.product.innerHTML = html;\n    }\n  }\n}\n"]}