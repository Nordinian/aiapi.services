{"version":3,"sources":["../src/env/contributions/taro-contribution.ts"],"names":[],"mappings":"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","file":"taro-contribution.js","sourcesContent":["import { injectable, BaseEnvContribution } from '@visactor/vrender-core';\nimport type {\n  ICanvasLike,\n  EnvType,\n  ICreateCanvasParams,\n  IEnvContribution,\n  IGlobal,\n  IDomRef,\n  ITTCanvas\n} from '@visactor/vrender-core';\n\ninterface ITaro {\n  createCanvasContext: (id: string) => any;\n  canvasGetImageData: (data: {\n    canvasId: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    success: (res: any) => void;\n  }) => any;\n}\n\nfunction makeUpCanvas(\n  domref: IDomRef,\n  canvasIdLists: string[],\n  canvasMap: Map<string, ITTCanvas>,\n  freeCanvasIdx: number,\n  freeCanvasList: ITTCanvas[],\n  taro: ITaro,\n  dpr: number\n) {\n  canvasIdLists.forEach((id, i) => {\n    const ctx: any = taro.createCanvasContext(id);\n    // TODO: 这里是一个临时方案，向 ctx 内部构造一个 canvas，传递宽高\n    ctx.canvas = {\n      width: domref.width * dpr,\n      height: domref.height * dpr\n    };\n\n    // TODO: 这里是一个临时方案，兼容 createCircularGradient 方法\n    if (!ctx.createRadialGradient) {\n      ctx.createRadialGradient = (...cc: any) => ctx.createCircularGradient(...cc);\n    }\n\n    // HACK: 小程序端draw、getImage方法为异步回调, 在此统一封装 getImageData 为 promise\n    if (!ctx.getImageData && taro.canvasGetImageData) {\n      ctx.getImageData = (x: number, y: number, width: number, height: number) =>\n        new Promise((resolve, reject) => {\n          try {\n            taro.canvasGetImageData({\n              canvasId: id,\n              x,\n              y,\n              width,\n              height,\n              success(res) {\n                resolve(res);\n              }\n            });\n          } catch (err) {\n            reject(err);\n          }\n        });\n    }\n\n    const canvas = {\n      id: id,\n      width: domref.width * dpr,\n      height: domref.height * dpr,\n      offsetWidth: domref.width,\n      offsetHeight: domref.height,\n      getContext: () => ctx,\n      // 构造 getBoundingClientRect 方法\n      getBoundingClientRect: () => ({\n        height: domref.height,\n        width: domref.width\n      })\n    };\n\n    canvasMap.set(id, canvas);\n    if (i >= freeCanvasIdx) {\n      freeCanvasList.push(canvas);\n    }\n\n    return canvas;\n  });\n}\n\ninterface IConfigureParams {\n  domref: any;\n  canvasIdLists: string[];\n  freeCanvasIdx: number;\n  taro: ITaro;\n  pixelRatio: number; // taro需要小程序自己处理pixelRatio\n}\n\n@injectable()\nexport class TaroEnvContribution extends BaseEnvContribution implements IEnvContribution {\n  type: EnvType = 'taro';\n  supportEvent: boolean = true;\n  canvasMap: Map<string, ITTCanvas> = new Map();\n  freeCanvasList: ITTCanvas[] = [];\n  canvasIdx: number = 0;\n  taro: ITaro;\n  pixelRatio: number;\n\n  constructor() {\n    super();\n    this.supportsTouchEvents = true;\n    try {\n      this.supportsPointerEvents = !!globalThis.PointerEvent;\n      this.supportsMouseEvents = !!globalThis.MouseEvent;\n    } catch (err) {\n      this.supportsPointerEvents = false;\n      this.supportsMouseEvents = false;\n    }\n    this.applyStyles = true;\n  }\n\n  /**\n   * 获取动态canvas的数量，offscreenCanvas或者framebuffer\n   */\n  getDynamicCanvasCount(): number {\n    return this.freeCanvasList.length;\n  }\n\n  /**\n   * 获取静态canvas的数量，纯粹canvas\n   */\n  getStaticCanvasCount(): number {\n    return 9999;\n  }\n\n  mapToCanvasPoint(event: any) {\n    if (event?.type?.startsWith('mouse')) {\n      return event;\n    }\n    return event;\n  }\n\n  // TODO：VGrammar在小程序环境会重复调用setEnv传入canvas，所以每次configure并不会释放\n  // 这里等待后续和VGrammar沟通\n  configure(service: IGlobal, params: IConfigureParams) {\n    if (service.env === this.type) {\n      service.setActiveEnvContribution(this);\n      makeUpCanvas(\n        params.domref,\n        params.canvasIdLists,\n        this.canvasMap,\n        params.freeCanvasIdx,\n        this.freeCanvasList,\n        params.taro,\n        params.pixelRatio\n      );\n      this.taro = params.taro;\n      this.pixelRatio = params.pixelRatio;\n\n      // loadTaroContributions();\n    }\n  }\n\n  loadImage(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }> {\n    return Promise.resolve({\n      data: url as unknown as HTMLImageElement,\n      loadState: 'success'\n    });\n  }\n\n  loadSvg(svgStr: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }> {\n    const _window = window || globalThis;\n    if (_window.DOMParser) {\n      const parser = new _window.DOMParser();\n      const svg = parser.parseFromString(svgStr, 'image/svg+xml').children[0];\n      const data = new XMLSerializer().serializeToString(svg);\n      const url = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(data)}`; //svg转base64\n\n      return Promise.resolve({\n        data: url as unknown as HTMLImageElement,\n        loadState: 'success'\n      });\n    } else if (_window.Blob) {\n      const data = new _window.Blob([svgStr], { type: 'image/svg+xml' });\n      const url = _window.URL.createObjectURL(data);\n\n      return Promise.resolve({\n        data: url as unknown as HTMLImageElement,\n        loadState: 'success'\n      });\n    }\n    // 目前移动端上小程序不支持DOMParser和Blob，无法解析svg字符串，可以通过url使用svg资源\n    return Promise.reject();\n  }\n\n  createCanvas(params: ICreateCanvasParams): ITTCanvas {\n    // params不生效\n    const result = this.freeCanvasList[this.canvasIdx] || this.freeCanvasList[this.freeCanvasList.length - 1];\n    this.canvasIdx++;\n    return result;\n  }\n\n  createOffscreenCanvas(params: ICreateCanvasParams) {\n    return;\n  }\n\n  releaseCanvas(canvas: ICanvasLike | string) {\n    return;\n  }\n\n  getDevicePixelRatio(): number {\n    return this.pixelRatio;\n  }\n\n  getRequestAnimationFrame(): (callback: FrameRequestCallback) => number {\n    return requestAnimationFrame;\n  }\n\n  getCancelAnimationFrame(): (h: number) => void {\n    return cancelAnimationFrame;\n  }\n\n  addEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return null;\n  }\n\n  removeEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return null;\n  }\n\n  dispatchEvent(event: any): boolean {\n    return null;\n  }\n\n  // 只能索引canvas\n  getElementById(str: string): any | null {\n    return this.canvasMap.get(str);\n  }\n\n  getRootElement(): HTMLElement | null {\n    return null;\n  }\n\n  getDocument(): Document | null {\n    return null;\n  }\n\n  release(...params: any): void {\n    return;\n  }\n}\n"]}