{"version":3,"sources":["../src/picker/contributions/math-picker/arc-picker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,yDAAkG;AAc3F,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAI/B,YAA+C,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAH7E,SAAI,GAAW,KAAK,CAAC;QACrB,eAAU,GAAW,8BAAe,CAAC;IAE2C,CAAC;IAEjF,QAAQ,CAAC,GAAS,EAAE,KAAa,EAAE,MAAoB;QACrD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YACxC,OAAO,KAAK,CAAC;SACd;QACD,IAAI,GAAG,CAAC,SAAS,CAAC,QAAQ,KAAK,WAAW,EAAE;YAC1C,OAAO,IAAI,CAAC;SACb;QAED,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,EAAE,CAAC;QACrC,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,KAAK,CAAC;SACd;QAGD,MAAM,YAAY,GAAG,IAAA,uBAAQ,EAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACvC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAClC,IAAI,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,SAAS,CAAC;QAC/D,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE;YAEpC,CAAC,GAAG,CAAC,CAAC;YACN,CAAC,GAAG,CAAC,CAAC;YACN,WAAW,CAAC,mBAAmB,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACxD;aAAM;YACL,MAAM,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAC5C,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YACb,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAEb,WAAW,CAAC,sBAAsB,EAAE,CAAC;SACtC;QAGD,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,cAAc,CAAC,SAAS,CAC3B,GAAG,EACH,WAAW,EACX,CAAC,EACD,CAAC,EACD,EAAS,EACT,IAAI,EACJ,CACE,OAAmB,EACnB,YAAyD,EACzD,cAA+B,EAC/B,EAAE;YAEF,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;YACD,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACjD,OAAO,MAAM,CAAC;QAChB,CAAC,EACD,CACE,OAAmB,EACnB,YAAyD,EACzD,cAA+B,EAC/B,EAAE;YAEF,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;YACD,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,IAAI,cAAc,CAAC,SAAS,CAAC;YACrE,MAAM,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,IAAI,cAAc,CAAC,gBAAgB,CAAC;YAC1F,WAAW,CAAC,SAAS,GAAG,SAAS,GAAG,gBAAgB,CAAC;YACrD,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,MAAM,CAAC;QAChB,CAAC,CACF,CAAC;QAEF,WAAW,CAAC,sBAAsB,EAAE,CAAC;QACrC,OAAO,MAAM,CAAC;IAChB,CAAC;CACF,CAAA;AA7EY,oBAAoB;IADhC,IAAA,yBAAU,GAAE;IAKE,WAAA,IAAA,qBAAM,EAAC,wBAAS,CAAC,CAAA;;GAJnB,oBAAoB,CA6EhC;AA7EY,oDAAoB","file":"arc-picker.js","sourcesContent":["import { inject, injectable, getTheme, ArcRender, ARC_NUMBER_TYPE } from '@visactor/vrender-core';\nimport type { IPoint } from '@visactor/vutils';\nimport type {\n  IArc,\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  IThemeAttribute,\n  IGraphicPicker,\n  IGraphicRender,\n  IPickParams\n} from '@visactor/vrender-core';\n\n@injectable()\nexport class DefaultMathArcPicker implements IGraphicPicker {\n  type: string = 'arc';\n  numberType: number = ARC_NUMBER_TYPE;\n\n  constructor(@inject(ArcRender) public readonly canvasRenderer: IGraphicRender) {}\n\n  contains(arc: IArc, point: IPoint, params?: IPickParams): boolean {\n    if (!arc.AABBBounds.containsPoint(point)) {\n      return false;\n    }\n    if (arc.attribute.pickMode === 'imprecise') {\n      return true;\n    }\n\n    const { pickContext } = params ?? {};\n    if (!pickContext) {\n      return false;\n    }\n\n    // const arcAttribute = graphicService.themeService.getCurrentTheme().arcAttribute;\n    const arcAttribute = getTheme(arc).arc;\n    pickContext.highPerformanceSave();\n    let { x = arcAttribute.x, y = arcAttribute.y } = arc.attribute;\n    if (!arc.transMatrix.onlyTranslate()) {\n      // 性能较差\n      x = 0;\n      y = 0;\n      pickContext.transformFromMatrix(arc.transMatrix, true);\n    } else {\n      const point = arc.getOffsetXY(arcAttribute);\n      x += point.x;\n      y += point.y;\n      // 当前context有rotate/scale，重置matrix\n      pickContext.setTransformForCurrent();\n    }\n\n    // 详细形状判断\n    let picked = false;\n    this.canvasRenderer.drawShape(\n      arc,\n      pickContext,\n      x,\n      y,\n      {} as any,\n      null,\n      (\n        context: IContext2d,\n        arcAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        picked = context.isPointInPath(point.x, point.y);\n        return picked;\n      },\n      (\n        context: IContext2d,\n        arcAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        const lineWidth = arcAttribute.lineWidth || themeAttribute.lineWidth;\n        const pickStrokeBuffer = arcAttribute.pickStrokeBuffer || themeAttribute.pickStrokeBuffer;\n        pickContext.lineWidth = lineWidth + pickStrokeBuffer;\n        picked = context.isPointInStroke(point.x, point.y);\n        return picked;\n      }\n    );\n\n    pickContext.highPerformanceRestore();\n    return picked;\n  }\n}\n"]}