{"version":3,"sources":["../src/series/BaseSeries.tsx"],"names":[],"mappings":"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","file":"BaseSeries.js","sourcesContent":["import React from 'react';\nimport { isNil, isEqual, pickWithout } from '@visactor/vutils';\nimport RootChartContext from '../context/chart';\nimport {\n  REACT_TO_VCHART_EVENTS,\n  EventsProps,\n  findEventProps,\n  COMMON_EVENTK_KEYS,\n  VCHART_TO_REACT_EVENTS\n} from '../eventsUtils';\nimport { uid } from '../util';\n\nexport interface BaseSeriesProps extends EventsProps {\n  id?: string | number;\n}\n\nexport const createSeries = <T extends BaseSeriesProps>(componentName: string, markNames: string[], type?: string) => {\n  const ignoreKeys = ['id', 'updateId'];\n  const notSpecKeys = COMMON_EVENTK_KEYS.concat(ignoreKeys);\n\n  const Comp: React.FC<T & { updateId?: number }> = props => {\n    const context = React.useContext(RootChartContext);\n\n    const id = React.useRef<string | number>(isNil(props.id) ? uid(type ?? 'series') : props.id);\n\n    const seriesSpec = React.useRef<Partial<T>>();\n    const bindedEvents = React.useRef<Record<string, boolean>>({});\n    const updateId = React.useRef<number>(props.updateId);\n\n    const handleEvent = (e: any) => {\n      const markIds = markNames.map(markName => `${id.current}-${markName}`);\n      if (e?.mark && markIds.includes(e.mark.getUserId())) {\n        props[VCHART_TO_REACT_EVENTS[e.event.type]](e);\n      }\n    };\n\n    const addMarkEvent = (events: EventsProps) => {\n      if (!events || !context.chart) {\n        return;\n      }\n\n      if (bindedEvents) {\n        Object.keys(bindedEvents).forEach(eventKey => {\n          if (!events[eventKey]) {\n            context.chart.off(REACT_TO_VCHART_EVENTS[eventKey], handleEvent);\n          }\n          bindedEvents.current[eventKey] = false;\n        });\n      }\n\n      Object.keys(events).forEach(eventKey => {\n        if (!bindedEvents?.[eventKey]) {\n          context.chart.on(REACT_TO_VCHART_EVENTS[eventKey], handleEvent);\n\n          if (!bindedEvents) {\n            bindedEvents.current = {};\n          }\n          bindedEvents.current[eventKey] = true;\n        }\n      });\n    };\n\n    const removeMarkEvent = () => {\n      addMarkEvent({});\n    };\n\n    const addMarkId = (spec: any) => {\n      markNames.forEach(markName => {\n        const defaultMarkId = `${id.current}-${markName}`;\n\n        if (isNil(spec[markName])) {\n          spec[markName] = { id: defaultMarkId };\n        } else if (isNil(spec[markName].id)) {\n          spec[markName].id = defaultMarkId;\n        }\n      });\n    };\n\n    const insertToContext = (props: Partial<T>) => {\n      if (context.specFromChildren) {\n        if (!context.specFromChildren.series) {\n          context.specFromChildren.series = [];\n        }\n\n        const spec = isNil(type) ? { ...props, id: id.current } : { ...props, id: id.current, type };\n\n        addMarkId(spec);\n        context.specFromChildren.series.push(spec);\n        context.isChildrenUpdated = true;\n      }\n    };\n\n    const updateToContext = (props: Partial<T>) => {\n      if (!context.specFromChildren) {\n        return;\n      }\n\n      if (!context.specFromChildren.series) {\n        insertToContext(props);\n        return;\n      }\n\n      const series = context.specFromChildren.series;\n      const index = series.findIndex((entry: any) => entry.id === id.current);\n\n      if (index >= 0) {\n        series[index] = isNil(type) ? { ...props, id: id.current } : { ...props, id: id.current, type };\n        addMarkId(series[index]);\n      } else {\n        insertToContext(props);\n      }\n      context.isChildrenUpdated = true;\n    };\n\n    const deleteToContext = () => {\n      if (!context.specFromChildren) {\n        return;\n      }\n      const series = context.specFromChildren.series ?? [];\n      const index = series.findIndex((entry: any) => entry.id === id.current);\n\n      if (index >= 0) {\n        const newSeries = series.slice(0, index - 1).concat(series.slice(index + 1));\n        context.specFromChildren.series = newSeries;\n        context.isChildrenUpdated = true;\n      }\n    };\n\n    addMarkEvent(findEventProps(props));\n    if (props.updateId !== updateId.current) {\n      // chart render\n      updateId.current = props.updateId;\n    } else {\n      const newSeriesSpec = pickWithout<T>(props, notSpecKeys);\n\n      addMarkId(newSeriesSpec);\n      if (!isEqual(newSeriesSpec, seriesSpec.current)) {\n        seriesSpec.current = newSeriesSpec;\n        updateToContext(newSeriesSpec);\n      }\n    }\n\n    React.useEffect(() => {\n      return () => {\n        deleteToContext();\n        removeMarkEvent();\n      };\n    }, []);\n\n    return null;\n  };\n\n  Comp.displayName = componentName;\n  return Comp;\n};\n"]}