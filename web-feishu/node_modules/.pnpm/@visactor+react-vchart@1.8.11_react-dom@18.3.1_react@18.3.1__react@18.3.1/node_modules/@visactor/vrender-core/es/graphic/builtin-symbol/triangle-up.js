import { BaseSymbol } from "./base";

export function trianglUp(ctx, r, x, y) {
    return ctx.moveTo(x + r, r + y), ctx.lineTo(x - r, r + y), ctx.lineTo(x, y - r), 
    ctx.closePath(), !0;
}

export function trianglUpOffset(ctx, r, x, y, offset) {
    return ctx.moveTo(x + r + 2 * offset, r + y + offset), ctx.lineTo(x - r - 2 * offset, r + y + offset), 
    ctx.lineTo(x, y - r - 2 * offset), ctx.closePath(), !0;
}

export class TriangleUpSymbol extends BaseSymbol {
    constructor() {
        super(...arguments), this.type = "triangleUp", this.pathStr = "M0.5,0.5 L-0.5,0.5 L0,-0.5 Z";
    }
    draw(ctx, size, x, y) {
        return trianglUp(ctx, size / 2, x, y);
    }
    drawOffset(ctx, size, x, y, offset) {
        return trianglUpOffset(ctx, size / 2, x, y, offset);
    }
}

export default new TriangleUpSymbol;
//# sourceMappingURL=triangle-up.js.map
