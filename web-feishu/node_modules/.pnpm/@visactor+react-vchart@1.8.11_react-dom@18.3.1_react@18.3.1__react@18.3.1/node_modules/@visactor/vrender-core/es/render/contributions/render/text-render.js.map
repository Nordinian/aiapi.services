{"version":3,"sources":["../src/render/contributions/render/text-render.ts"],"names":[],"mappings":"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","file":"text-render.js","sourcesContent":["import { inject, injectable, named } from '../../../common/inversify-lite';\nimport { getTheme } from '../../../graphic/theme';\nimport { TEXT_NUMBER_TYPE } from '../../../graphic/constants';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  IThemeAttribute,\n  IDrawContext,\n  IRenderService,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  ITextRenderContribution,\n  IContributionProvider\n} from '../../../interface';\nimport { textDrawOffsetX, textLayoutOffsetY } from '../../../common/text';\nimport type { IText, ITextGraphicAttribute } from '../../../interface/graphic/text';\nimport { BaseRender } from './base-render';\nimport { ContributionProvider } from '../../../common/contribution-provider';\nimport { TextRenderContribution } from './contributions/constants';\nimport { matrixAllocate } from '../../../allocator/matrix-allocate';\nimport { max } from '@visactor/vutils';\nimport { calculateLineHeight } from '../../../common/utils';\nimport { defaultTextBackgroundRenderContribution } from './contributions/text-contribution-render';\n\n@injectable()\nexport class DefaultCanvasTextRender extends BaseRender<IText> implements IGraphicRender {\n  type: 'text';\n  numberType: number = TEXT_NUMBER_TYPE;\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(TextRenderContribution)\n    protected readonly textRenderContribitions: IContributionProvider<ITextRenderContribution>\n  ) {\n    super();\n    this.builtinContributions = [defaultTextBackgroundRenderContribution as any];\n    this.init(textRenderContribitions);\n  }\n\n  drawShape(\n    text: IText,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    const textAttribute = getTheme(text, params?.theme).text;\n    const {\n      text: str,\n      underline = textAttribute.underline,\n      lineThrough = textAttribute.lineThrough,\n      keepDirIn3d = textAttribute.keepDirIn3d,\n      direction = textAttribute.direction,\n      // lineHeight = textAttribute.lineHeight,\n      whiteSpace = textAttribute.whiteSpace,\n      fontSize = textAttribute.fontSize,\n      verticalMode = textAttribute.verticalMode,\n      x: originX = textAttribute.x,\n      y: originY = textAttribute.y\n    } = text.attribute;\n\n    let { textAlign = textAttribute.textAlign, textBaseline = textAttribute.textBaseline } = text.attribute;\n    if (!verticalMode && direction === 'vertical') {\n      const t = textAlign;\n      textAlign = text.getBaselineMapAlign()[textBaseline] ?? ('left' as any);\n      textBaseline = text.getAlignMapBaseline()[t] ?? ('top' as any);\n    }\n    const lineHeight = calculateLineHeight(text.attribute.lineHeight, fontSize) ?? fontSize;\n\n    const data = this.valid(text, textAttribute, fillCb, strokeCb);\n    if (!data) {\n      return;\n    }\n    const { fVisible, sVisible, doFill, doStroke } = data;\n\n    // 文字如果需要变换，那就需要将3dmatrix转成context的2dmatrix\n    const transform3dMatrixToContextMatrix = !keepDirIn3d;\n\n    const z = this.z || 0;\n\n    context.beginPath();\n\n    // shadow\n    context.setShadowBlendStyle && context.setShadowBlendStyle(text, text.attribute, textAttribute);\n\n    this.beforeRenderStep(\n      text,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      textAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n\n    transform3dMatrixToContextMatrix && this.transformUseContext2d(text, textAttribute, z, context);\n\n    const drawText = (t: string, offsetX: number, offsetY: number, direction: number) => {\n      let _x = x + offsetX;\n      const _y = y + offsetY;\n      if (direction) {\n        context.highPerformanceSave();\n        _x += fontSize;\n        const matrix = matrixAllocate.allocate(1, 0, 0, 1, 0, 0);\n        // matrix.translate(fontSize, 0);\n        matrix.rotateByCenter(Math.PI / 2, _x, _y);\n        context.transformFromMatrix(matrix, true);\n        matrixAllocate.free(matrix);\n      }\n\n      if (doStroke) {\n        if (strokeCb) {\n          strokeCb(context, text.attribute, textAttribute);\n        } else if (sVisible) {\n          context.setStrokeStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n          context.strokeText(t, _x, _y, z);\n        }\n      }\n      if (doFill) {\n        if (fillCb) {\n          fillCb(context, text.attribute, textAttribute);\n        } else if (fVisible) {\n          context.setCommonStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n          context.fillText(t, _x, _y, z);\n          this.drawUnderLine(underline, lineThrough, text, _x, _y, z, textAttribute, context);\n        }\n      }\n\n      if (direction) {\n        context.highPerformanceRestore();\n        context.setTransformForCurrent();\n      }\n    };\n    if (text.isMultiLine) {\n      context.setTextStyleWithoutAlignBaseline(text.attribute, textAttribute, z);\n      if (direction === 'horizontal') {\n        const { multilineLayout } = text;\n        if (!multilineLayout) {\n          context.highPerformanceRestore();\n          return;\n        } // 如果不存在的话，需要render层自行布局\n        const { xOffset, yOffset } = multilineLayout.bbox;\n        if (doStroke) {\n          if (strokeCb) {\n            strokeCb(context, text.attribute, textAttribute);\n          } else if (sVisible) {\n            context.setStrokeStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n            multilineLayout.lines.forEach(line => {\n              context.strokeText(\n                line.str,\n                (line.leftOffset || 0) + xOffset + x,\n                (line.topOffset || 0) + yOffset + y,\n                z\n              );\n            });\n          }\n        }\n        if (doFill) {\n          if (fillCb) {\n            fillCb(context, text.attribute, textAttribute);\n          } else if (fVisible) {\n            context.setCommonStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n            multilineLayout.lines.forEach(line => {\n              context.fillText(line.str, (line.leftOffset || 0) + xOffset + x, (line.topOffset || 0) + yOffset + y, z);\n              this.drawMultiUnderLine(\n                underline,\n                lineThrough,\n                text,\n                (line.leftOffset || 0) + x, // 中下划线都是从文字左侧开始，因此不需要+xOffset\n                (line.topOffset || 0) + yOffset + y,\n                z,\n                line.width,\n                textAttribute,\n                context\n              );\n            });\n          }\n        }\n      } else {\n        text.tryUpdateAABBBounds(); // 更新cache\n        const cache = text.cache;\n        const { verticalList } = cache;\n        context.textAlign = 'left';\n        context.textBaseline = 'top';\n        const totalHeight = lineHeight * verticalList.length;\n        let totalW = 0;\n        verticalList.forEach(verticalData => {\n          const _w = verticalData.reduce((a, b) => a + (b.width || 0), 0);\n          totalW = max(_w, totalW);\n        });\n        let offsetY = 0;\n        let offsetX = 0;\n        if (textBaseline === 'bottom') {\n          offsetX = -totalHeight;\n        } else if (textBaseline === 'middle') {\n          offsetX = -totalHeight / 2;\n        }\n        if (textAlign === 'center') {\n          offsetY -= totalW / 2;\n        } else if (textAlign === 'right') {\n          offsetY -= totalW;\n        }\n        verticalList.forEach((verticalData, i) => {\n          const currentW = verticalData.reduce((a, b) => a + (b.width || 0), 0);\n          const dw = totalW - currentW;\n          let currentOffsetY = offsetY;\n          if (textAlign === 'center') {\n            currentOffsetY += dw / 2;\n          } else if (textAlign === 'right') {\n            currentOffsetY += dw;\n          }\n          verticalData.forEach(item => {\n            const { text, width, direction } = item;\n            drawText(text, totalHeight - (i + 1) * lineHeight + offsetX, currentOffsetY, direction);\n            currentOffsetY += width;\n          });\n        });\n      }\n    } else {\n      if (direction === 'horizontal') {\n        context.setTextStyle(text.attribute, textAttribute, z);\n        const t = text.clipedText as string;\n        let dy = 0;\n        if (lineHeight !== fontSize) {\n          if (textBaseline === 'top') {\n            dy = (lineHeight - fontSize) / 2;\n          } else if (textBaseline === 'middle') {\n            // middle do nothing\n          } else if (textBaseline === 'bottom') {\n            dy = -(lineHeight - fontSize) / 2;\n          } else {\n            // alphabetic do nothing\n            // dy = (lineHeight - fontSize) / 2 - fontSize * 0.79;\n          }\n        }\n        drawText(t, 0, dy, 0);\n      } else {\n        text.tryUpdateAABBBounds(); // 更新cache\n        const cache = text.cache;\n        if (cache) {\n          context.setTextStyleWithoutAlignBaseline(text.attribute, textAttribute, z);\n          const { verticalList } = cache;\n          let offsetY = 0;\n          const totalW = verticalList[0].reduce((a, b) => a + (b.width || 0), 0);\n          let offsetX = 0;\n          if (textBaseline === 'bottom') {\n            offsetX = -lineHeight;\n          } else if (textBaseline === 'middle') {\n            offsetX = -lineHeight / 2;\n          }\n          if (textAlign === 'center') {\n            offsetY -= totalW / 2;\n          } else if (textAlign === 'right') {\n            offsetY -= totalW;\n          }\n          context.textAlign = 'left';\n          context.textBaseline = 'top';\n          verticalList[0].forEach(item => {\n            const { text, width, direction } = item;\n            drawText(text, offsetX, offsetY, direction);\n            offsetY += width;\n          });\n        }\n      }\n    }\n    transform3dMatrixToContextMatrix && this.restoreTransformUseContext2d(text, textAttribute, z, context);\n\n    this.afterRenderStep(\n      text,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      textAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n  }\n\n  draw(text: IText, renderService: IRenderService, drawContext: IDrawContext, params?: IGraphicRenderDrawParams) {\n    const textAttribute = getTheme(text, params?.theme).text;\n    const { keepDirIn3d = textAttribute.keepDirIn3d } = text.attribute;\n    // 文字如果需要变换，那就一定要计算3d矩阵\n    const computed3dMatrix = !keepDirIn3d;\n    this._draw(text, textAttribute, computed3dMatrix, drawContext, params);\n  }\n\n  drawUnderLine(\n    underline: number,\n    lineThrough: number,\n    text: IText,\n    x: number,\n    y: number,\n    z: number,\n    textAttribute: Required<ITextGraphicAttribute>,\n    context: IContext2d\n  ) {\n    if (lineThrough + underline <= 0) {\n      return;\n    }\n\n    const {\n      textAlign = textAttribute.textAlign,\n      textBaseline = textAttribute.textBaseline,\n      fontSize = textAttribute.fontSize,\n      fill = textAttribute.fill,\n      opacity = textAttribute.opacity,\n      fillOpacity = textAttribute.fillOpacity\n    } = text.attribute;\n    const w = text.clipedWidth;\n    const offsetX = textDrawOffsetX(textAlign, w);\n    const offsetY = textLayoutOffsetY(textBaseline, fontSize, fontSize);\n    const attribute = { lineWidth: 0, stroke: fill, opacity, strokeOpacity: fillOpacity };\n    if (underline) {\n      attribute.lineWidth = underline;\n      context.setStrokeStyle(text, attribute, x, y, textAttribute);\n      context.beginPath();\n      const dy = y + offsetY + fontSize;\n      context.moveTo(x + offsetX, dy, z);\n      context.lineTo(x + offsetX + w, dy, z);\n      context.stroke();\n    }\n    if (lineThrough) {\n      attribute.lineWidth = lineThrough;\n      context.setStrokeStyle(text, attribute, x, y, textAttribute);\n      context.beginPath();\n      const dy = y + offsetY + fontSize / 2;\n      context.moveTo(x + offsetX, dy, z);\n      context.lineTo(x + offsetX + w, dy, z);\n      context.stroke();\n    }\n  }\n\n  drawMultiUnderLine(\n    underline: number,\n    lineThrough: number,\n    text: IText,\n    x: number,\n    y: number,\n    z: number,\n    w: number,\n    textAttribute: Required<ITextGraphicAttribute>,\n    context: IContext2d\n  ) {\n    if (lineThrough + underline <= 0) {\n      return;\n    }\n\n    const {\n      textAlign = textAttribute.textAlign,\n      fontSize = textAttribute.fontSize,\n      fill = textAttribute.fill,\n      opacity = textAttribute.opacity,\n      fillOpacity = textAttribute.fillOpacity\n    } = text.attribute;\n\n    const offsetX = textDrawOffsetX(textAlign, w);\n    const offsetY = textLayoutOffsetY('alphabetic', fontSize, fontSize);\n    const attribute = { lineWidth: 0, stroke: fill, opacity, strokeOpacity: fillOpacity };\n    let deltaY = -3;\n    if (underline) {\n      attribute.lineWidth = underline;\n      context.setStrokeStyle(text, attribute, x, y, textAttribute);\n      context.beginPath();\n      const dy = y + offsetY + fontSize + deltaY;\n      context.moveTo(x + offsetX, dy, z);\n      context.lineTo(x + offsetX + w, dy, z);\n      context.stroke();\n    }\n    deltaY = -1;\n    if (lineThrough) {\n      attribute.lineWidth = lineThrough;\n      context.setStrokeStyle(text, attribute, x, y, textAttribute);\n      context.beginPath();\n      const dy = y + offsetY + fontSize / 2 + deltaY;\n      context.moveTo(x + offsetX, dy, z);\n      context.lineTo(x + offsetX + w, dy, z);\n      context.stroke();\n    }\n  }\n}\n"]}