{"version":3,"sources":["../src/series/base/tooltip-helper.ts"],"names":[],"mappings":"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","file":"tooltip-helper.js","sourcesContent":["import type { ITooltipActiveTypeAsKeys, ITooltipSpec, TooltipHandlerParams } from '../../component/tooltip/interface';\nimport type { IToolTipLinePattern, ITooltipPattern, ShapeType, TooltipActiveType } from '../../typings';\nimport { array, isFunction, isValid } from '@visactor/vutils';\nimport type { ISeries, ISeriesTooltipHelper } from '../interface';\nimport { BaseTooltipHelper } from '../../model/tooltip-helper';\nimport type { IDimensionInfo } from '../../event/events/dimension/interface';\nimport type { Datum } from '@visactor/vgrammar-core';\nimport { getTooltipActualActiveType } from '../../component/tooltip/utils/common';\n\ninterface ISeriesCacheInfo {\n  seriesFields: string[];\n  dimensionFields: string[];\n  measureFields: string[];\n  type: string;\n}\n\nexport class BaseSeriesTooltipHelper extends BaseTooltipHelper implements ISeriesTooltipHelper {\n  series: ISeries;\n\n  protected _seriesCacheInfo: ISeriesCacheInfo;\n\n  constructor(series: ISeries) {\n    super();\n    this.series = series;\n    this.updateTooltipSpec();\n  }\n\n  updateTooltipSpec() {\n    const seriesTooltipSpec = this.series.getSpec()?.tooltip ?? {};\n    const chartTooltipSpec = this.series.getChart().getSpec()?.tooltip ?? {};\n\n    const spec = {\n      ...chartTooltipSpec,\n      ...seriesTooltipSpec\n    } as ITooltipSpec;\n\n    // 将 series id 放入 pattern\n    (['mark', 'dimension'] as Array<keyof ITooltipActiveTypeAsKeys<any, any>>).forEach(activeType => {\n      const pattern = spec[activeType];\n      if (isValid(pattern)) {\n        spec[activeType] = {\n          ...pattern,\n          title: isValid(pattern.title)\n            ? isFunction(pattern.title)\n              ? pattern.title\n              : ({\n                  ...pattern.title,\n                  seriesId: this.series.id\n                } as IToolTipLinePattern)\n            : undefined,\n          content: isValid(pattern.content)\n            ? isFunction(pattern.content)\n              ? pattern.content\n              : array(pattern.content).map(line =>\n                  isFunction(line)\n                    ? line\n                    : ({\n                        ...line,\n                        seriesId: this.series.id\n                      } as IToolTipLinePattern)\n                )\n            : undefined\n        };\n      }\n    });\n\n    this.spec = spec;\n    this.activeType = getTooltipActualActiveType(spec);\n\n    this._seriesCacheInfo = this._getSeriesCacheInfo();\n  }\n\n  protected _getSeriesCacheInfo = (): ISeriesCacheInfo => {\n    const { series } = this;\n    const _seriesField = series.getSeriesField();\n    const seriesFields = isValid(_seriesField) ? array(_seriesField) : series.getSeriesKeys() ?? [];\n    return {\n      seriesFields,\n      dimensionFields: series.getDimensionField() ?? [],\n      measureFields: series.getMeasureField() ?? [],\n      type: series.type\n    };\n  };\n\n  protected _getDimensionData = (datum: any) => {\n    const { dimensionFields } = this._seriesCacheInfo;\n    return dimensionFields[0] && datum?.[dimensionFields[0]];\n  };\n\n  protected _getMeasureData = (datum: any) => {\n    const { measureFields } = this._seriesCacheInfo;\n    return measureFields[0] && datum?.[measureFields[0]];\n  };\n\n  protected _getSeriesStyle = (datum: any, styleKey: string | string[], defaultValue?: any) => {\n    for (const key of array(styleKey)) {\n      const value = this.series.getSeriesStyle(datum)?.(key);\n      if (isValid(value)) {\n        return value;\n      }\n    }\n    return defaultValue;\n  };\n\n  contentKeyCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    const { dimensionFields, seriesFields } = this._seriesCacheInfo;\n    const subDimensionField = dimensionFields[dimensionFields.length - 1];\n\n    if (isValid(seriesFields[0]) && datum?.[seriesFields[0]]) {\n      return datum?.[seriesFields[0]];\n    }\n\n    if (dimensionFields.length > 1 && (seriesFields.length === 0 || this.series.getSeriesKeys().length <= 1)) {\n      return datum?.[subDimensionField];\n    }\n\n    return datum?.[subDimensionField];\n  };\n\n  contentValueCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getMeasureData(datum);\n  };\n\n  contentShapeTypeCallback = (datum: Datum, params?: TooltipHandlerParams): ShapeType | undefined => {\n    return (\n      this._getSeriesStyle(datum, 'shape', null) ??\n      this._getSeriesStyle(datum, 'symbolType', this.series.getDefaultShapeType())\n    );\n  };\n\n  contentShapeColorCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getSeriesStyle(datum, ['fill', 'stroke']);\n  };\n\n  titleValueCallback = (datum: Datum, params?: TooltipHandlerParams): string | undefined => {\n    return this._getDimensionData(datum);\n  };\n\n  /** 获取默认的tooltip pattern */\n  getDefaultTooltipPattern(activeType: TooltipActiveType, dimensionInfo?: IDimensionInfo[]): ITooltipPattern | null {\n    if (activeType === 'mark') {\n      return {\n        visible: true,\n        activeType,\n        title: {\n          key: undefined,\n          value: this.titleValueCallback,\n          hasShape: false\n        },\n        content: [\n          {\n            seriesId: this.series.id,\n            key: this.contentKeyCallback,\n            value: this.contentValueCallback,\n            hasShape: true,\n            shapeType: this.contentShapeTypeCallback,\n            shapeColor: this.contentShapeColorCallback,\n            shapeStroke: this.contentShapeColorCallback,\n            shapeHollow: false\n          }\n        ]\n      };\n    } else if (activeType === 'dimension' && dimensionInfo) {\n      const title: IToolTipLinePattern = {\n        key: undefined,\n        value: this._getDimensionData,\n        hasShape: false\n      };\n      const content: IToolTipLinePattern[] = [];\n      dimensionInfo.forEach(({ data }) =>\n        data.forEach(({ series }) => {\n          content.push({\n            seriesId: series.id,\n            key: this.contentKeyCallback,\n            value: this.contentValueCallback,\n            hasShape: true,\n            shapeType: this.contentShapeTypeCallback,\n            shapeColor: this.contentShapeColorCallback,\n            shapeStroke: this.contentShapeColorCallback,\n            shapeHollow: false\n          });\n        })\n      );\n      return {\n        visible: true,\n        activeType,\n        title,\n        content\n      };\n    }\n\n    return null;\n  }\n}\n"]}