import { defaultContentContainerStyle } from "./style-constants";

import { BaseTooltipModel } from "./base-tooltip-model";

import { ContentColumnModel } from "./content-column-model";

import { mergeSpec } from "../../../../../util/spec/merge-spec";

export class ContentModel extends BaseTooltipModel {
    init() {
        this.product || (this.product = this.createElement("div", [ "container-box" ])), 
        this.shapeBox || this._initShapeBox(), this.keyBox || this._initKeyBox(), this.valueBox || this._initValueBox();
    }
    _initShapeBox() {
        const shapeBox = new ContentColumnModel(this.product, this._option, "shape-box", 0);
        shapeBox.init(), this.shapeBox = shapeBox, this.children[shapeBox.childIndex] = shapeBox;
    }
    _initKeyBox() {
        const keyBox = new ContentColumnModel(this.product, this._option, "key-box", 1);
        keyBox.init(), this.keyBox = keyBox, this.children[keyBox.childIndex] = keyBox;
    }
    _initValueBox() {
        const valueBox = new ContentColumnModel(this.product, this._option, "value-box", 2);
        valueBox.init(), this.valueBox = valueBox, this.children[valueBox.childIndex] = valueBox;
    }
    setStyle(style) {
        super.setStyle(mergeSpec({}, defaultContentContainerStyle, style)), Object.values(this.children).forEach((c => {
            c.setStyle();
        }));
    }
    setContent() {
        Object.values(this.children).forEach((c => {
            c.setContent();
        }));
    }
    release() {
        super.release(), this.shapeBox = null, this.keyBox = null, this.valueBox = null;
    }
}
//# sourceMappingURL=content-model.js.map
