import { SeriesTypeEnum } from "../../../series/interface/type";

import { registerCircularProgressSeries } from "../../../series/progress/circular";

import { Factory } from "../../../core/factory";

import { CircularProgressChartSpecTransformer } from "./circular-progress-transformer";

import { BaseChart } from "../../base";

export class CircularProgressChart extends BaseChart {
    constructor() {
        super(...arguments), this.transformerConstructor = CircularProgressChartSpecTransformer, 
        this.type = "circularProgress", this.seriesType = SeriesTypeEnum.circularProgress, 
        this._canStack = !0;
    }
}

CircularProgressChart.type = "circularProgress", CircularProgressChart.seriesType = SeriesTypeEnum.circularProgress, 
CircularProgressChart.view = "singleDefault", CircularProgressChart.transformerConstructor = CircularProgressChartSpecTransformer;

export const registerCircularProgressChart = () => {
    registerCircularProgressSeries(), Factory.registerChart(CircularProgressChart.type, CircularProgressChart);
};
//# sourceMappingURL=circular.js.map
