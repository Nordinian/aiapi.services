{"version":3,"sources":["../src/series/sunburst/sunburst.ts"],"names":[],"mappings":"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","file":"sunburst.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport type { SunburstLabelConfig, SunburstNodeElement } from '@visactor/vgrammar-hierarchy';\nimport { array, isArray, isNil, isValid, isObject, degreeToRadian, mixin } from '@visactor/vutils';\n\nimport type { IMarkSpec } from '../../typings/spec';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport type { ITextMark } from '../../mark/text';\nimport type { IArcMark } from '../../mark/arc';\nimport type { Datum, IArcMarkSpec, ITextMarkSpec } from '../../typings';\n\nimport { registerSunburstAnimation, type ISunburstAnimationParams, type SunburstAppearPreset } from './animation';\nimport type { ISunburstSeriesSpec, LabelAutoVisibleType } from './interface';\nimport type { ISunburstOpt } from '../../data/transforms/sunburst';\n\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { flatten } from '../../data/transforms/flatten';\nimport { sunburstLayout } from '../../data/transforms/sunburst';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesTypeEnum } from '../interface/type';\n\nimport type { IMark } from '../../mark/interface';\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport { AttributeLevel, DEFAULT_DATA_KEY } from '../../constant';\nimport { STATE_VALUE_ENUM } from '../../compile/mark/interface';\nimport { DEFAULT_HIERARCHY_DEPTH, DEFAULT_HIERARCHY_ROOT } from '../../constant/hierarchy';\nimport { registerFadeInOutAnimation } from '../../animation/config';\nimport { addHierarchyDataKey, initHierarchyKeyMap } from '../../data/transforms/data-key';\nimport { addVChartProperty } from '../../data/transforms/add-property';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { PolarSeries } from '../polar/polar';\nimport { SUNBURST_AUTO_VISIBLE_DEFAULT_THRESHOLD } from '../../constant/sunburst';\nimport { SunburstTooltipHelper } from './tooltip-helper';\nimport type { animationInfo } from './animation/interface';\nimport type { IDrillable } from '../../interaction/drill/drillable';\nimport { Drillable } from '../../interaction/drill/drillable';\nimport { ArcMark, registerArcMark } from '../../mark/arc';\nimport { TextMark, registerTextMark } from '../../mark/text';\nimport { sunburstSeriesMark } from './constant';\nimport { Factory } from '../../core/factory';\n\nexport class SunburstSeries extends PolarSeries<any> {\n  protected declare _spec: ISunburstSeriesSpec;\n\n  static readonly type: string = SeriesTypeEnum.sunburst;\n  type = SeriesTypeEnum.sunburst;\n\n  static readonly mark: SeriesMarkMap = sunburstSeriesMark;\n\n  private _sunburstMark: IArcMark;\n  private _labelMark: ITextMark;\n\n  protected _categoryField!: string;\n  protected _valueField!: string;\n\n  private _centerX: number;\n  private _centerY: number;\n  private _offsetX: number;\n  private _offsetY: number;\n  private _startAngle: number;\n  private _endAngle: number;\n\n  private __innerRadius: number | number[];\n  private __outerRadius: number | number[];\n  private _gap: number | number[];\n  private _labelLayout: SunburstLabelConfig | SunburstLabelConfig[];\n\n  private _labelAutoVisible?: LabelAutoVisibleType;\n\n  private _label: IMarkSpec<ITextMarkSpec>;\n  private _sunburst: IMarkSpec<IArcMarkSpec>;\n\n  setCategoryField(f: string): string {\n    this._categoryField = f;\n    return this._categoryField;\n  }\n\n  getCategoryField() {\n    return this._categoryField;\n  }\n\n  setValueField(f: string): string {\n    this._valueField = f;\n    return this._valueField;\n  }\n\n  getValueField() {\n    return this._valueField;\n  }\n\n  getDimensionField() {\n    return [this._categoryField];\n  }\n\n  getMeasureField(): string[] {\n    return [this._valueField];\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n\n    this.setCategoryField(this._spec.categoryField);\n    this.setValueField(this._spec.valueField);\n    this.setSeriesField(this._spec.seriesField ?? DEFAULT_HIERARCHY_ROOT);\n\n    if (this._spec.drill) {\n      (this as unknown as IDrillable).initDrillable({\n        event: this.event,\n        mode: this._option.mode,\n        drillField: () => this._spec.drillField ?? DEFAULT_DATA_KEY,\n        getRawData: () => this.getRawData()\n      });\n    }\n\n    /**\n     * 角度区间\n     */\n    this._startAngle = degreeToRadian(this._spec.startAngle);\n    this._endAngle = degreeToRadian(this._spec.endAngle);\n\n    /**\n     * 中心点\n     */\n    this._centerX = this._spec.centerX;\n    this._centerY = this._spec.centerY;\n    this._offsetX = this._spec.offsetX;\n    this._offsetY = this._spec.offsetY;\n\n    /**\n     * 对所有层生效的布局配置\n     */\n    this.__innerRadius = this._spec.innerRadius;\n    this.__outerRadius = this._spec.outerRadius;\n    this._gap = this._spec.gap;\n    this._labelLayout = this._spec.labelLayout;\n\n    /**\n     * 图元配置\n     */\n    this._sunburst = this._spec.sunburst;\n    this._label = this._spec.label;\n\n    /**\n     * 功能配置\n     */\n    this._labelAutoVisible = this._spec.labelAutoVisible;\n  }\n\n  protected initData() {\n    super.initData();\n    const rawData = this.getRawData();\n    if (!rawData) {\n      return;\n    }\n\n    // 对原始数据进行上卷下钻筛选\n    if (this._spec.drill) {\n      (this as unknown as IDrillable).initDrillableData(this._dataSet);\n    }\n    // 注册布局算法\n    registerDataSetInstanceTransform(this._dataSet, 'sunburstLayout', sunburstLayout);\n    // 注册扁平化算法\n    registerDataSetInstanceTransform(this._dataSet, 'flatten', flatten);\n\n    // 对筛选后的数据, 调用sunburst布局算法\n    rawData.transform({\n      type: 'sunburstLayout',\n      options: (): ISunburstOpt => {\n        const { innerRadius, outerRadius, gap, label } = this._computeLevel();\n        return {\n          nodeKey: this._categoryField,\n          width: this.getLayoutRect().width,\n          height: this.getLayoutRect().height,\n          center: [\n            isValid(this._centerX) ? this._centerX : this.getLayoutRect().width / 2,\n            isValid(this._centerY) ? this._centerY : this.getLayoutRect().height / 2\n          ],\n          startAngle: this._startAngle,\n          endAngle: this._endAngle,\n\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          gapRadius: gap,\n          label: label\n        };\n      }\n    });\n\n    // 布局结果进行扁平化处理\n    rawData.transform({\n      type: 'flatten',\n      options: {\n        callback: (node: SunburstNodeElement) => {\n          if (node.datum) {\n            const nodeData = node.datum[node.depth];\n            return { ...node, ...nodeData };\n          }\n          return node;\n        }\n      }\n    });\n  }\n\n  getStatisticFields() {\n    const fields = super.getStatisticFields();\n    return fields.concat([\n      {\n        key: this._categoryField,\n        operations: ['values']\n      },\n      {\n        key: this._valueField,\n        operations: ['max', 'min']\n      },\n      {\n        key: DEFAULT_HIERARCHY_DEPTH,\n        operations: ['max', 'min', 'values']\n      },\n      {\n        key: DEFAULT_HIERARCHY_ROOT,\n        operations: ['values']\n      }\n    ]);\n  }\n\n  protected _addDataIndexAndKey() {\n    const rawData = this.getRawData();\n    if (isNil(rawData?.dataSet)) {\n      return;\n    }\n    // 为原始数据, 添加层级属性\n    registerDataSetInstanceTransform(rawData.dataSet, 'addVChartProperty', addVChartProperty);\n    rawData.transform({\n      type: 'addVChartProperty',\n      options: {\n        beforeCall: initHierarchyKeyMap.bind(this),\n        call: addHierarchyDataKey\n      }\n    });\n  }\n\n  initMark(): void {\n    this._initArcMark();\n    this._initLabelMark();\n  }\n\n  initMarkStyle(): void {\n    this._initArcMarkStyle();\n    this._initLabelMarkStyle();\n  }\n\n  private _initArcMark() {\n    if (this._sunburst.visible === false) {\n      return;\n    }\n    // SunburstMark\n    const sunburstMark = this._createMark(SunburstSeries.mark.sunburst, {\n      isSeriesMark: true,\n      customShape: this._spec.sunburst?.customShape\n    }) as IArcMark;\n    this._sunburstMark = sunburstMark;\n    this._trigger.registerMark(this._sunburstMark);\n  }\n\n  private _initArcMarkStyle() {\n    if (isNil(this._sunburstMark)) {\n      return;\n    }\n    this.setMarkStyle(\n      this._sunburstMark,\n      {\n        x: d => d.x + (isValid(this._offsetX) ? this._offsetX : 0),\n        y: d => d.y + (isValid(this._offsetY) ? this._offsetY : 0),\n        outerRadius: d => d.outerRadius,\n        innerRadius: d => d.innerRadius,\n        startAngle: d => d.startAngle,\n        endAngle: d => d.endAngle,\n        fill: this.getColorAttribute()\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  private _initLabelMark() {\n    if (this._label.visible !== true) {\n      return;\n    }\n    // Label\n    const labelMark = this._createMark(SunburstSeries.mark.label, {\n      isSeriesMark: false\n    }) as ITextMark;\n    this._labelMark = labelMark;\n\n    this._trigger.registerMark(labelMark);\n  }\n\n  private _initLabelMarkStyle() {\n    if (isNil(this._labelMark)) {\n      return;\n    }\n    this.setMarkStyle(\n      this._labelMark,\n      {\n        visible: d => {\n          // 自动隐藏密集标签逻辑.\n          const labelAutoVisible = this._labelAutoVisible;\n\n          if (isObject(labelAutoVisible) && labelAutoVisible.enable === true) {\n            return (\n              (d.endAngle - d.startAngle) * (d.outerRadius - d.innerRadius) >\n              (labelAutoVisible?.circumference ?? SUNBURST_AUTO_VISIBLE_DEFAULT_THRESHOLD)\n            );\n          }\n          return this._spec.label.visible;\n        },\n        x: d => d.label?.x + (isValid(this._offsetX) ? this._offsetX : 0),\n        y: d => d.label?.y + (isValid(this._offsetY) ? this._offsetY : 0),\n        textBaseline: d => d.label?.textBaseline,\n        textAlign: d => d.label?.textAlign,\n        angle: d => d.label?.angle ?? 0,\n        fontSize: 10,\n        text: d => d.name\n      },\n      STATE_VALUE_ENUM.STATE_NORMAL,\n      AttributeLevel.Series\n    );\n  }\n\n  protected initTooltip() {\n    this._tooltipHelper = new SunburstTooltipHelper(this);\n    this._sunburstMark && this._tooltipHelper.activeTriggerSet.mark.add(this._sunburstMark);\n    this._labelMark && this._tooltipHelper.activeTriggerSet.mark.add(this._labelMark);\n  }\n\n  initAnimation() {\n    const animationParams: ISunburstAnimationParams = {\n      animationInfo: (): animationInfo => {\n        // 返回用户的交互元素信息\n        return {\n          innerRadius: this._computeRadius(array(this.__innerRadius))[0],\n          outerRadius: this._computeRadius(array(this.__outerRadius))[0],\n          startAngle: array(this._startAngle)[0],\n          endAngle: array(this._endAngle)[0]\n        };\n      }\n    };\n\n    const appearPreset = (this._spec?.animationAppear as IStateAnimateSpec<SunburstAppearPreset>)?.preset;\n\n    this.getMarksInType(MarkTypeEnum.arc).forEach(mark => {\n      mark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('sunburst')?.(animationParams, appearPreset),\n          userAnimationConfig(mark.name, this._spec, this._markAttributeContext)\n        )\n      );\n    });\n\n    this.getMarksInType(MarkTypeEnum.text).forEach(mark => {\n      mark.setAnimationConfig(\n        animationConfig(\n          Factory.getAnimationInKey('fadeInOut')?.(),\n          userAnimationConfig(mark.name, this._spec, this._markAttributeContext)\n        )\n      );\n    });\n  }\n\n  initEvent() {\n    super.initEvent();\n    if (this._spec.drill) {\n      (this as unknown as IDrillable).bindDrillEvent();\n    }\n  }\n\n  onLayoutEnd(ctx: any): void {\n    super.onLayoutEnd(ctx);\n    this._rawData.reRunAllTransform();\n  }\n\n  /**\n   * 计算radius, 转换为布局属性\n   * @radius radius是一个比例值, 取值范围为[0,1]\n   */\n  private _computeRadius(radius: number | number[]) {\n    if (isArray(radius)) {\n      return radius.map(r => {\n        const { width, height } = this.getRegion().getLayoutRect();\n        return Math.min(width / 2, height / 2) * r;\n      });\n    }\n    const { width, height } = this.getRegion().getLayoutRect();\n    return Math.min(width / 2, height / 2) * radius;\n  }\n\n  private _computeLevel(): {\n    innerRadius: number | number[];\n    outerRadius: number | number[];\n    gap: number | number[];\n    label: SunburstLabelConfig | SunburstLabelConfig[];\n  } {\n    return {\n      innerRadius: this._computeRadius(this.__innerRadius),\n      outerRadius: this._computeRadius(this.__outerRadius),\n      gap: this._gap,\n      label: this._labelLayout\n    };\n  }\n\n  getGroupFields(): string[] {\n    return [];\n  }\n  getStackGroupFields(): string[] {\n    return [];\n  }\n  getStackValueField(): string {\n    return '';\n  }\n\n  // make sure this function fast\n  protected _noAnimationDataKey(datum: Datum, index: number): unknown | undefined {\n    return undefined;\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._sunburstMark];\n  }\n}\n\nmixin(SunburstSeries, Drillable);\n\nexport const registerSunBurstSeries = () => {\n  Factory.registerSeries(SunburstSeries.type, SunburstSeries);\n  registerArcMark();\n  registerTextMark();\n  registerFadeInOutAnimation();\n  registerSunburstAnimation();\n};\n"]}