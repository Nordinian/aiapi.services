{"version":3,"sources":["../src/chart/pie/3d/pie-3d.ts"],"names":[],"mappings":";;;AAAA,0DAAoE;AAEpE,yDAAgE;AAEhE,uCAA4C;AAC5C,mDAAgD;AAGhD,kCAAsD;AAEtD,MAAa,yBAAuE,SAAQ,kCAE3F;IACC,aAAa,CAAC,IAAS;QACrB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAc,EAAE,EAAE;YACrC,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;gBACrB,CAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAXD,8DAWC;AAED,MAAa,UAAwD,SAAQ,mBAAqC;IAAlH;;QAMW,2BAAsB,GAAG,yBAAyB,CAAC;QACnD,SAAI,WAA+B;QACnC,eAAU,GAAW,qBAAc,CAAC,KAAK,CAAC;IACrD,CAAC;;AATD,gCASC;AARiB,eAAI,WAA+B;AACnC,qBAAU,GAAW,qBAAc,CAAC,KAAK,CAAC;AAC1C,eAAI,GAAW,eAAe,CAAC;AAC/B,iCAAsB,GAAG,yBAAyB,CAAC;AAO9D,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,IAAA,4BAAmB,GAAE,CAAC;IACtB,iBAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACrD,CAAC,CAAC;AAHW,QAAA,kBAAkB,sBAG7B","file":"pie-3d.js","sourcesContent":["import { registerPie3dSeries } from '../../../series/pie/3d/pie-3d';\n// eslint-disable-next-line no-duplicate-imports\nimport { SeriesTypeEnum } from '../../../series/interface/type';\nimport { ChartTypeEnum } from '../../interface/type';\nimport { BasePieChart } from '../base/base';\nimport { Factory } from '../../../core/factory';\nimport type { IPie3dChartSpec } from '../interface';\nimport type { AdaptiveSpec, ISeriesSpec } from '../../../typings';\nimport { BasePieChartSpecTransformer } from '../base';\n\nexport class Pie3dChartSpecTransformer<T extends IPie3dChartSpec = IPie3dChartSpec> extends BasePieChartSpecTransformer<\n  AdaptiveSpec<T, 'type'>\n> {\n  transformSpec(spec: any): void {\n    super.transformSpec(spec);\n    spec.series.forEach((s: ISeriesSpec) => {\n      if (s.type === 'pie3d') {\n        (s as any).angle3d = spec.angle3d;\n      }\n    });\n  }\n}\n\nexport class Pie3dChart<T extends IPie3dChartSpec = IPie3dChartSpec> extends BasePieChart<AdaptiveSpec<T, 'type'>> {\n  static readonly type: string = ChartTypeEnum.pie3d;\n  static readonly seriesType: string = SeriesTypeEnum.pie3d;\n  static readonly view: string = 'singleDefault';\n  static readonly transformerConstructor = Pie3dChartSpecTransformer;\n  // @ts-ignore\n  readonly transformerConstructor = Pie3dChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.pie3d;\n  readonly seriesType: string = SeriesTypeEnum.pie3d;\n}\n\nexport const registerPie3dChart = () => {\n  registerPie3dSeries();\n  Factory.registerChart(Pie3dChart.type, Pie3dChart);\n};\n"]}