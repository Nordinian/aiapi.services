{"version":3,"sources":["../src/graphic/polygon.ts"],"names":[],"mappings":"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","file":"polygon.js","sourcesContent":["import type { AABBBounds, OBBBounds } from '@visactor/vutils';\nimport { Graphic, GRAPHIC_UPDATE_TAG_KEY, NOWORK_ANIMATE_ATTR } from './graphic';\nimport type { IPolygon, IPolygonGraphicAttribute } from '../interface/graphic/polygon';\nimport { getTheme } from './theme';\nimport { parsePadding, pointsInterpolation } from '../common/utils';\nimport { CustomPath2D } from '../common/custom-path2d';\nimport { application } from '../application';\nimport type { GraphicType } from '../interface';\nimport { POLYGON_NUMBER_TYPE } from './constants';\n\nconst POLYGON_UPDATE_TAG_KEY = ['points', 'cornerRadius', ...GRAPHIC_UPDATE_TAG_KEY];\n\nexport class Polygon extends Graphic<IPolygonGraphicAttribute> implements IPolygon {\n  type: GraphicType = 'polygon';\n\n  static NOWORK_ANIMATE_ATTR = NOWORK_ANIMATE_ATTR;\n\n  constructor(params: IPolygonGraphicAttribute) {\n    super(params);\n    this.numberType = POLYGON_NUMBER_TYPE;\n  }\n\n  isValid(): boolean {\n    return super.isValid() && this._isValid();\n  }\n  protected _isValid(): boolean {\n    const { points } = this.attribute;\n    return points && points.length >= 2;\n  }\n\n  protected doUpdateAABBBounds(): AABBBounds {\n    const polygonTheme = getTheme(this).polygon;\n    this._AABBBounds.setValue(Infinity, Infinity, -Infinity, -Infinity);\n\n    const attribute = this.attribute;\n    const bounds = application.graphicService.updatePolygonAABBBounds(\n      attribute,\n      getTheme(this).polygon,\n      this._AABBBounds,\n      this\n    ) as AABBBounds;\n\n    const { boundsPadding = polygonTheme.boundsPadding } = attribute;\n    const paddingArray = parsePadding(boundsPadding);\n    if (paddingArray) {\n      bounds.expand(paddingArray);\n    }\n\n    this.clearUpdateBoundTag();\n\n    return this._AABBBounds;\n  }\n\n  protected tryUpdateOBBBounds(): OBBBounds {\n    throw new Error('暂不支持');\n  }\n\n  protected _interpolate(key: string, ratio: number, lastStepVal: any, nextStepVal: any, nextAttributes: any): void {\n    if (key === 'points') {\n      (nextAttributes as any).points = pointsInterpolation(lastStepVal, nextStepVal, ratio);\n    }\n  }\n\n  getDefaultAttribute(name: string) {\n    const polygonTheme = getTheme(this).polygon;\n    return polygonTheme[name];\n  }\n\n  protected needUpdateTags(keys: string[]): boolean {\n    return super.needUpdateTags(keys, POLYGON_UPDATE_TAG_KEY);\n  }\n  protected needUpdateTag(key: string): boolean {\n    return super.needUpdateTag(key, POLYGON_UPDATE_TAG_KEY);\n  }\n\n  toCustomPath() {\n    const points = this.attribute.points;\n    const path = new CustomPath2D();\n\n    points.forEach((point, index) => {\n      if (index === 0) {\n        path.moveTo(point.x, point.y);\n      } else {\n        path.lineTo(point.x, point.y);\n      }\n    });\n    path.closePath();\n\n    return path;\n  }\n\n  clone() {\n    return new Polygon({ ...this.attribute });\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Polygon.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createPolygon(attributes: IPolygonGraphicAttribute): IPolygon {\n  return new Polygon(attributes);\n}\n"]}