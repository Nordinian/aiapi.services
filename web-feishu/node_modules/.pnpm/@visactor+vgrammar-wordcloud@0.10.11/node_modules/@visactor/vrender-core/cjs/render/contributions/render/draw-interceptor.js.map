{"version":3,"sources":["../src/render/contributions/render/draw-interceptor.ts"],"names":[],"mappings":"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","file":"draw-interceptor.js","sourcesContent":["import { injectable } from '../../../common/inversify-lite';\nimport { AABBBounds, pi2 } from '@visactor/vutils';\nimport { graphicCreator, mat3Tomat4, multiplyMat4Mat4 } from '../../../graphic';\nimport type {\n  IArc,\n  IContext2d,\n  IDrawContext,\n  IDrawContribution,\n  IDrawItemInterceptorContribution,\n  IGraphic,\n  IGraphicAttribute,\n  IGraphicRenderDrawParams,\n  IGroup,\n  ILayer,\n  IRenderService\n} from '../../../interface';\nimport { mat4Allocate } from '../../../allocator/matrix-allocate';\nimport { ARC3D_NUMBER_TYPE } from '../../../graphic/constants';\n\n// 拦截器\nexport const DrawItemInterceptor = Symbol.for('DrawItemInterceptor');\n\n// @injectable()\n// export class DefaultDrawItemInterceptor implements IDrawItemInterceptor {\n//   drawItem(graphic: IGraphic, renderService: IRenderService, params?: IGraphicRenderDrawParams): boolean {\n//     return false;\n//   }\n// }\n\nconst tempDirtyBounds = new AABBBounds();\n/**\n * 影子节点拦截器，用于渲染影子节点\n */\n// @injectable()\nexport class ShadowRootDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {\n  order: number = 1;\n  afterDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    if (graphic.attribute.shadowRootIdx > 0 || !graphic.attribute.shadowRootIdx) {\n      this.drawItem(graphic, renderService, drawContext, drawContribution, params);\n    }\n    return false;\n  }\n\n  beforeDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    if (graphic.attribute.shadowRootIdx < 0) {\n      this.drawItem(graphic, renderService, drawContext, drawContribution, params);\n    }\n    return false;\n  }\n\n  protected drawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    if (!graphic.shadowRoot) {\n      return false;\n    }\n\n    const { context } = drawContext;\n    context.highPerformanceSave();\n    // 直接transform\n    context.transformFromMatrix(graphic.transMatrix, true);\n\n    // 变换dirtyBounds\n    if (drawContribution.dirtyBounds && drawContribution.backupDirtyBounds) {\n      tempDirtyBounds.copy(drawContribution.dirtyBounds);\n      const m = graphic.globalTransMatrix.getInverse();\n      drawContribution.dirtyBounds.copy(drawContribution.backupDirtyBounds).transformWithMatrix(m);\n    }\n\n    // 设置context的transform到上一个节点\n    drawContribution.renderGroup(graphic.shadowRoot, drawContext, graphic.parent.globalTransMatrix);\n\n    context.highPerformanceRestore();\n\n    if (drawContribution.dirtyBounds && drawContribution.backupDirtyBounds) {\n      drawContribution.dirtyBounds.copy(tempDirtyBounds);\n    }\n\n    return true;\n  }\n}\n\n// @injectable()\nexport class DebugDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {\n  order: number = 1;\n\n  afterDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    if (graphic.attribute._debug_bounds) {\n      this.drawItem(graphic, renderService, drawContext, drawContribution, params);\n    }\n    return false;\n  }\n\n  protected drawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    if (!graphic.attribute._debug_bounds) {\n      return false;\n    }\n\n    const { context } = drawContext;\n    context.highPerformanceSave();\n    // 直接transform\n    graphic.parent && context.setTransformFromMatrix(graphic.parent.globalTransMatrix, true);\n    graphic.glyphHost &&\n      graphic.glyphHost.parent &&\n      context.setTransformFromMatrix(graphic.glyphHost.parent.globalTransMatrix, true);\n\n    const b = graphic.AABBBounds;\n\n    if (graphic.attribute._debug_bounds !== true) {\n      graphic.attribute._debug_bounds(context, graphic);\n    }\n    context.strokeRect(b.x1, b.y1, b.width(), b.height());\n\n    context.highPerformanceRestore();\n\n    return true;\n  }\n}\n\n@injectable()\nexport class CommonDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {\n  order: number = 1;\n  interceptors: IDrawItemInterceptorContribution[];\n  constructor() {\n    this.interceptors = [\n      new ShadowRootDrawItemInterceptorContribution(),\n      new Canvas3DDrawItemInterceptor(),\n      new InteractiveDrawItemInterceptorContribution(),\n      new DebugDrawItemInterceptorContribution()\n    ];\n  }\n  afterDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    for (let i = 0; i < this.interceptors.length; i++) {\n      if (\n        this.interceptors[i].afterDrawItem &&\n        this.interceptors[i].afterDrawItem(graphic, renderService, drawContext, drawContribution, params)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  beforeDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    // 【性能方案】判定写在外层,减少遍历判断耗时，10000条数据减少1ms\n    if (\n      (!graphic.in3dMode || drawContext.in3dInterceptor) &&\n      !graphic.shadowRoot &&\n      !(graphic.baseGraphic || graphic.attribute.globalZIndex || graphic.interactiveGraphic)\n    ) {\n      return false;\n    }\n\n    for (let i = 0; i < this.interceptors.length; i++) {\n      if (\n        this.interceptors[i].beforeDrawItem &&\n        this.interceptors[i].beforeDrawItem(graphic, renderService, drawContext, drawContribution, params)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * 交互层节点拦截器，用于支持交互层图元\n */\n// @injectable()\nexport class InteractiveDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {\n  order: number = 1;\n  processing: boolean;\n  // afterDrawItem(\n  //   graphic: IGraphic,\n  //   renderService: IRenderService,\n  //   drawContext: IDrawContext,\n  //   drawContribution: IDrawContribution,\n  //   params?: IGraphicRenderDrawParams\n  // ): boolean {\n\n  //   if (graphic.attribute.shadowRootIdx > 0 || !graphic.attribute.shadowRootIdx) {\n  //     this.drawItem(graphic, renderService, drawContext, drawContribution, params);\n  //   }\n  //   return false;\n  // }\n\n  beforeDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    if (this.processing) {\n      return false;\n    }\n    // 判断是否在交互层\n    if (graphic.baseGraphic) {\n      return this.beforeDrawInteractive(graphic, renderService, drawContext, drawContribution, params);\n    }\n    return this.beforeSetInteractive(graphic, renderService, drawContext, drawContribution, params);\n  }\n\n  /**\n   * 用于提升interactive\n   * @param graphic\n   * @param renderService\n   * @param drawContext\n   * @param drawContribution\n   * @param params\n   */\n  beforeSetInteractive(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    let interactiveGraphic: IGraphic = graphic.interactiveGraphic;\n    if (graphic.attribute.globalZIndex) {\n      if (!interactiveGraphic) {\n        interactiveGraphic = graphic.clone();\n        graphic.interactiveGraphic = interactiveGraphic;\n        interactiveGraphic.baseGraphic = graphic;\n      }\n      // 设置位置\n      // const m = graphic.globalTransMatrix;\n      interactiveGraphic.setAttributes(\n        {\n          globalZIndex: 0,\n          zIndex: graphic.attribute.globalZIndex\n        },\n        false,\n        { skipUpdateCallback: true }\n      );\n      // 添加到交互层中\n      drawContext.stage.tryInitInteractiveLayer();\n      const interactiveLayer = drawContext.stage.getLayer('_builtin_interactive');\n      if (interactiveLayer) {\n        const shadowRoot = this.getShadowRoot(interactiveLayer);\n        shadowRoot.add(interactiveGraphic);\n      }\n      return true;\n    } else if (interactiveGraphic) {\n      // 从交互层中删除\n      drawContext.stage.tryInitInteractiveLayer();\n      const interactiveLayer = drawContext.stage.getLayer('_builtin_interactive');\n      if (interactiveLayer) {\n        const shadowRoot = this.getShadowRoot(interactiveLayer);\n        shadowRoot.removeChild(interactiveGraphic);\n      }\n      graphic.interactiveGraphic = null;\n      interactiveGraphic.baseGraphic = null;\n    }\n    return false;\n  }\n\n  /**\n   * 用于绘制interactive\n   * @param graphic\n   * @param renderService\n   * @param drawContext\n   * @param drawContribution\n   * @param params\n   */\n  beforeDrawInteractive(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    // 默认使用原始的图元\n    const baseGraphic = graphic.baseGraphic as IGraphic;\n    if (baseGraphic) {\n      this.processing = true;\n      const { context } = drawContext;\n      context.highPerformanceSave();\n      // 直接transform\n      context.setTransformFromMatrix(baseGraphic.parent.globalTransMatrix, true);\n      // context.fillRect(0, 0, 100, 100);\n      // 设置context的transform到上一个节点\n      baseGraphic.isContainer\n        ? drawContribution.renderGroup(baseGraphic as IGroup, drawContext, baseGraphic.parent.globalTransMatrix)\n        : drawContribution.renderItem(baseGraphic, drawContext);\n\n      context.highPerformanceRestore();\n      this.processing = false;\n\n      return true;\n    }\n    return false;\n  }\n  getShadowRoot(interactiveLayer: ILayer) {\n    // 获取绑定影子节点的group\n    let group = interactiveLayer.getElementById('_interactive_group') as IGroup;\n    if (!group) {\n      group = graphicCreator.CreateGraphic('group', {});\n      group.id = '_interactive_group';\n      interactiveLayer.add(group);\n    }\n    return group.shadowRoot ?? group.attachShadow();\n  }\n}\n\n/**\n * 3d拦截器，用于渲染3d视角\n */\n// @injectable()\nexport class Canvas3DDrawItemInterceptor implements IDrawItemInterceptorContribution {\n  // canvas?: ICanvas;\n  order: number = 1;\n\n  beforeDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ) {\n    if (!graphic.in3dMode || drawContext.in3dInterceptor) {\n      return false;\n    }\n\n    drawContext.in3dInterceptor = true;\n    const { context, stage } = renderService.drawParams;\n    const canvas = context.canvas;\n\n    // 使用3d模式渲染\n    context.save();\n    this.initCanvasCtx(context);\n    context.camera = stage.camera;\n\n    // 将三维矩阵换成四维矩阵\n    const m = context.currentMatrix;\n    m.a /= context.dpr;\n    m.b /= context.dpr;\n    m.c /= context.dpr;\n    m.d /= context.dpr;\n    m.e /= context.dpr;\n    m.f /= context.dpr;\n    const matrix = mat4Allocate.allocate();\n    mat3Tomat4(matrix, m);\n    const lastModelMatrix = context.modelMatrix;\n    if (lastModelMatrix) {\n      if (matrix) {\n        const m = mat4Allocate.allocate();\n        context.modelMatrix = multiplyMat4Mat4(m, lastModelMatrix, matrix);\n      }\n    } else {\n      context.modelMatrix = matrix;\n    }\n    context.setTransform(1, 0, 0, 1, 0, 0, true);\n\n    // 设置context的transform到上一个节点\n    if (graphic.isContainer) {\n      // hack逻辑，如果是饼图的话，需要依次绘制不同的边\n      let isPie: boolean = false;\n      let is3d: boolean = false;\n      graphic.forEachChildren((c: IGraphic) => {\n        isPie = c.numberType === ARC3D_NUMBER_TYPE;\n        return !isPie;\n      });\n      graphic.forEachChildren((c: IGraphic) => {\n        is3d = !!c.findFace;\n        return !is3d;\n      });\n      if (isPie) {\n        const children = graphic.getChildren() as IArc[];\n        // 绘制内层\n        // drawContext.hack_pieFace = 'inside';\n        // drawContribution.renderGroup(graphic as IGroup, drawContext);\n        // 绘制底部\n        // drawContext.hack_pieFace = 'bottom';\n        // drawContribution.renderGroup(graphic as IGroup, drawContext);\n        // 绘制外部\n        // 排序一下\n        const sortedChildren = [...children];\n        sortedChildren.sort((a, b) => {\n          let angle1 = ((a.attribute.startAngle ?? 0) + (a.attribute.endAngle ?? 0)) / 2;\n          let angle2 = ((b.attribute.startAngle ?? 0) + (b.attribute.endAngle ?? 0)) / 2;\n          while (angle1 < 0) {\n            angle1 += pi2;\n          }\n          while (angle2 < 0) {\n            angle2 += pi2;\n          }\n          return angle2 - angle1;\n        });\n        sortedChildren.forEach(c => {\n          c._next = null;\n          c._prev = null;\n        });\n        graphic.removeAllChild();\n        graphic.update();\n        sortedChildren.forEach(c => {\n          graphic.appendChild(c);\n        });\n        const m = graphic.parent.globalTransMatrix;\n        drawContext.hack_pieFace = 'outside';\n        drawContribution.renderGroup(graphic as IGroup, drawContext, m);\n        // 绘制内部\n        drawContext.hack_pieFace = 'inside';\n        drawContribution.renderGroup(graphic as IGroup, drawContext, m);\n        // 绘制顶部\n        drawContext.hack_pieFace = 'top';\n        drawContribution.renderGroup(graphic as IGroup, drawContext, m);\n        graphic.removeAllChild();\n        children.forEach(c => {\n          c._next = null;\n          c._prev = null;\n        });\n        children.forEach(c => {\n          graphic.appendChild(c);\n        });\n      } else if (is3d) {\n        // 排序这些图元\n        const children = graphic.getChildren() as IGraphic[];\n        const zChildren = children.map(g => {\n          const face3d = g.findFace();\n          const vertices = face3d.vertices;\n          // 计算每个顶点的view\n          const viewdVerticesZ = vertices.map(v => {\n            return context.view(v[0], v[1], v[2] + g.attribute.z ?? 0)[2];\n          });\n          const ave_z = viewdVerticesZ.reduce((a, b) => a + b, 0);\n          return {\n            ave_z,\n            g\n          };\n        });\n        zChildren.sort((a, b) => b.ave_z - a.ave_z);\n        graphic.removeAllChild();\n        zChildren.forEach(i => {\n          i.g._next = null;\n          i.g._prev = null;\n        });\n        graphic.update();\n        zChildren.forEach(i => {\n          graphic.add(i.g);\n        });\n\n        drawContribution.renderGroup(graphic as IGroup, drawContext, graphic.parent.globalTransMatrix, true);\n\n        graphic.removeAllChild();\n        children.forEach(g => {\n          g._next = null;\n          g._prev = null;\n        });\n        graphic.update();\n        children.forEach(g => {\n          graphic.add(g);\n        });\n      } else {\n        drawContribution.renderGroup(graphic as IGroup, drawContext, graphic.parent.globalTransMatrix);\n      }\n    } else {\n      drawContribution.renderItem(graphic, drawContext);\n    }\n    context.camera = null;\n    context.restore();\n\n    if (context.modelMatrix !== lastModelMatrix) {\n      mat4Allocate.free(context.modelMatrix);\n    }\n    context.modelMatrix = lastModelMatrix;\n\n    drawContext.in3dInterceptor = false;\n    return true;\n  }\n\n  initCanvasCtx(context: IContext2d) {\n    context.setTransformForCurrent();\n  }\n}\n"]}