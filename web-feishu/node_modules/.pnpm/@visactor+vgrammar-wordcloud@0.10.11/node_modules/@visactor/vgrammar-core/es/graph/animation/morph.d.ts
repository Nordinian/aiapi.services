import type { IGrammarBase, IMark, IRunningConfig } from '../../types';
import type { DiffResult } from '../../types/base';
import type { IMorph } from '../../types/morph';
export declare class Morph implements IMorph {
    diffGrammar<U extends IGrammarBase>(prevGrammars: U[], nextGrammars: U[]): DiffResult<U, U>;
    diffMark(prevMarks: IMark[], nextMarks: IMark[], runningConfig: IRunningConfig): DiffResult<IMark[], IMark[]>;
    private _appendMorphKeyToElements;
    morph(prevMarks: IMark[], nextMarks: IMark[], runningConfig: IRunningConfig): void;
    private diffUpdateByGroup;
    private doMorph;
    private divideElements;
}
