{"version":3,"sources":["../src/graph/animation/attribute.ts"],"names":[],"mappings":"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","file":"attribute.js","sourcesContent":["import type { EasingType, IGraphic } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { ACustomAnimate, AttributeUpdateType, NOWORK_ANIMATE_ATTR } from '@visactor/vrender-core';\nimport { isArray, isFunction, isNil, isObject, isValid } from '@visactor/vutils';\nimport type {\n  IAnimationChannelInterpolator,\n  IAnimationEffect,\n  IAnimationParameters,\n  IElement,\n  IGlyphElement,\n  IParsedAnimationAttrs\n} from '../../types';\nimport { isValidPointsChannel } from '../attributes/helpers';\nimport { Factory } from '../../core/factory';\n\nconst transformAnimationAttributes = (attributes: IParsedAnimationAttrs, element: IElement): IParsedAnimationAttrs => {\n  if (!attributes) {\n    return null;\n  }\n\n  if (attributes.from) {\n    const from = attributes.from;\n    const fromKeys = Object.keys(from);\n    fromKeys.forEach(channel => {\n      if (isNil(from[channel])) {\n        delete from[channel];\n      }\n    });\n    const computePoints = isValidPointsChannel(fromKeys, element.mark.markType) && !isValid(from.segments);\n    if (computePoints) {\n      const items = element.items.map(item => Object.assign({}, item, { nextAttrs: Object.assign({}, from) }));\n      attributes.from = element.transformElementItems(items, element.mark.markType, computePoints);\n    }\n  }\n  if (attributes.to) {\n    const to = attributes.to;\n    const toKeys = Object.keys(to);\n    toKeys.forEach(channel => {\n      if (isNil(to[channel])) {\n        delete to[channel];\n      }\n    });\n    const computePoints = isValidPointsChannel(toKeys, element.mark.markType) && !isValid(to.segments);\n    if (computePoints) {\n      const items = element.items.map(item => Object.assign({}, item, { nextAttrs: Object.assign({}, to) }));\n      attributes.to = element.transformElementItems(items, element.mark.markType, computePoints);\n    }\n  }\n\n  return attributes;\n};\n\nexport function typeAnimationAttributes(\n  element: IElement,\n  effect: IAnimationEffect,\n  animationParameters: IAnimationParameters,\n  parameters: any\n): IParsedAnimationAttrs {\n  // const parameters =\n  const options = isFunction(effect.options)\n    ? effect.options.call(null, element.getDatum(), element, parameters)\n    : effect.options;\n  if (!effect.type || !Factory.getAnimationType(effect.type)) {\n    return null;\n  }\n  const attributes = Factory.getAnimationType(effect.type)(element as IGlyphElement, options, animationParameters);\n\n  return transformAnimationAttributes(attributes, element);\n}\n\nconst parseChannelValue = (\n  element: IElement,\n  channel: string,\n  channelValue: any,\n  animationParameters: IAnimationParameters,\n  parameters: any\n) => {\n  return isFunction(channelValue) ? channelValue(element.getDatum(), element, parameters) : channelValue;\n};\n\nexport function channelAnimationAttributes(\n  element: IElement,\n  effect: IAnimationEffect,\n  animationParameters: IAnimationParameters,\n  parameters: any\n): IParsedAnimationAttrs {\n  const channel = effect.channel;\n  let attributes: IParsedAnimationAttrs = null;\n\n  if (isArray(channel)) {\n    attributes = channel.reduce(\n      (res, key) => {\n        res.from[key] = element.getGraphicAttribute(key, true);\n        res.to[key] = element.getGraphicAttribute(key, false);\n        return res;\n      },\n      { from: {}, to: {} }\n    );\n  } else if (isObject(channel)) {\n    attributes = Object.keys(channel).reduce(\n      (res, key) => {\n        const hasFrom = !isNil(channel[key]?.from);\n        const hasTo = !isNil(channel[key]?.to);\n\n        if (hasFrom || hasTo) {\n          res.from[key] = hasFrom\n            ? parseChannelValue(element, key, channel[key].from, animationParameters, parameters)\n            : undefined;\n          res.to[key] = hasTo\n            ? parseChannelValue(element, key, channel[key].to, animationParameters, parameters)\n            : element.getGraphicAttribute(key, false);\n        }\n\n        return res;\n      },\n      { from: {}, to: {} }\n    );\n  }\n\n  return transformAnimationAttributes(attributes, element);\n}\n\nexport class CustomInterpolator extends ACustomAnimate<any> {\n  private _element: IElement;\n  private _interpolator?: IAnimationChannelInterpolator;\n\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: { interpolator: IAnimationChannelInterpolator; element: IElement; parameters?: any }\n  ) {\n    super(from, to, duration, easing, params);\n    this._interpolator = params?.interpolator;\n    this._element = params?.element;\n  }\n\n  onBind() {\n    this.from = this.from ?? {};\n    this.to = this.to ?? {};\n  }\n\n  getEndProps(): void | Record<string, any> {\n    return this.to;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (!this._interpolator || !this._element) {\n      return;\n    }\n    this._interpolator.call(\n      this,\n      ratio,\n      this.from,\n      this.to,\n      out,\n      this._element.getDatum(),\n      this._element,\n      this.params.parameters\n    );\n  }\n}\n\nexport class AttributeAnimate extends ACustomAnimate<any> {\n  declare target: IGraphic;\n\n  private _fromAttribute: any;\n  private _toAttribute: any;\n\n  getEndProps(): Record<string, any> {\n    return this.to;\n  }\n\n  onBind() {\n    this.from = this.from ?? {};\n    this.to = this.to ?? {};\n  }\n\n  onStart(): void {\n    const excludedChannelMap = (this.target.constructor as any).NOWORK_ANIMATE_ATTR ?? NOWORK_ANIMATE_ATTR;\n    const excludedChannels = Object.keys(excludedChannelMap).filter(channel => excludedChannelMap[channel] !== 0);\n    this.subAnimate.animate.preventAttrs(excludedChannels);\n\n    const from = Object.assign({}, this.from);\n    const to = Object.assign({}, this.to);\n    Object.keys(to).forEach(k => {\n      if (excludedChannels.includes(k)) {\n        from[k] = to[k];\n        this.from[k] = to[k];\n      } else if (isNil(from[k])) {\n        from[k] = this.target.getComputedAttribute(k);\n      }\n      // if (this.to[k] === from[k]) {\n      //   delete from[k];\n      // }\n    });\n\n    this.target.setAttributes(from, false, {\n      type: AttributeUpdateType.ANIMATE_UPDATE,\n      animationState: { ratio: 0, end: false }\n    });\n\n    this._fromAttribute = from;\n    this._toAttribute = to;\n  }\n\n  onEnd(): void {\n    this.target.setAttributes(this._toAttribute, false, {\n      type: AttributeUpdateType.ANIMATE_END\n    });\n  }\n\n  update(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.updateCount === 0) {\n      this.onFirstRun();\n    }\n    this.updateCount += 1;\n\n    // Hack: waiting for canopus to remove invalid key when updating\n    const lastProps = this.step.getLastProps();\n    Object.keys(lastProps).forEach(key => {\n      if (this.subAnimate.animate.validAttr(key)) {\n        out[key] = lastProps[key];\n      }\n    });\n    this.onUpdate(end, ratio, out);\n    if (end) {\n      this.onEnd();\n    }\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    this.target.stepInterpolate(\n      this.subAnimate,\n      this.subAnimate.animate,\n      out,\n      this.step,\n      ratio,\n      end,\n      this._toAttribute,\n      this._fromAttribute\n    );\n  }\n}\n"]}