{"version":3,"sources":["../src/common/bisect.ts"],"names":[],"mappings":";;;;;;AAAA,2CAAwC;AACxC,oDAA4B;AAE5B,SAAgB,MAAM,CAAC,CAAW,EAAE,CAAS,EAAE,KAAa,CAAC,EAAE,EAAW;IACxE,IAAI,IAAA,eAAK,EAAC,EAAE,CAAC,EAAE;QACb,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;KACf;IACD,OAAO,EAAE,GAAI,EAAa,EAAE;QAC1B,MAAM,GAAG,GAAW,CAAC,EAAE,GAAI,EAAa,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,IAAA,qBAAS,EAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE;YAC5B,EAAE,GAAG,GAAG,CAAC;SACV;aAAM;YACL,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;SACd;KACF;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAbD,wBAaC","file":"bisect.js","sourcesContent":["import { ascending } from './ascending';\nimport isNil from './isNil';\n\nexport function bisect(a: number[], x: number, lo: number = 0, hi?: number) {\n  if (isNil(hi)) {\n    hi = a.length;\n  }\n  while (lo < (hi as number)) {\n    const mid: number = (lo + (hi as number)) >>> 1;\n    if (ascending(a[mid], x) > 0) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  return lo;\n}\n"]}