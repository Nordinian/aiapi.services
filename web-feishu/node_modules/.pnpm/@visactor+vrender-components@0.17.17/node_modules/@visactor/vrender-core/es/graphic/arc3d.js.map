{"version":3,"sources":["../src/graphic/arc3d.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,mBAAmB,EAAE,MAAM,WAAW,CAAC;AAEhD,MAAM,OAAO,KAAM,SAAQ,GAAG;IAS5B,YAAY,MAA8B;QACxC,KAAK,CAAC,MAAM,CAAC,CAAC;QAThB,SAAI,GAAgB,OAAO,CAAC;QAU1B,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;IACtC,CAAC;IAES,kBAAkB;QAC1B,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;QAEpE,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,MAAM,MAAM,GAAG,WAAW,CAAC,cAAc,CAAC,qBAAqB,CAC7D,SAAS,EACT,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAc,EAC7B,IAAI,CAAC,WAAW,EAChB,IAAI,CACS,CAAC;QAEhB,MAAM,EAAE,aAAa,GAAG,YAAY,CAAC,aAAa,EAAE,GAAG,SAAS,CAAC;QACjE,MAAM,YAAY,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;QACjD,IAAI,YAAY,EAAE;YAChB,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC7B;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,oBAAoB;QAClB,OAAO,KAAK,CAAC,mBAAmB,CAAC;IACnC,CAAC;;AAnCM,yBAAmB,mBACxB,GAAG,EAAE,CAAC,IACH,mBAAmB,EACtB;AAmCJ,MAAM,UAAU,WAAW,CAAC,UAAkC;IAC5D,OAAO,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;AAC/B,CAAC","file":"arc3d.js","sourcesContent":["import type { AABBBounds } from '@visactor/vutils';\nimport type { GraphicType, IArc3d, IArc3dGraphicAttribute } from '../interface';\nimport { Arc } from './arc';\nimport { getTheme } from './theme';\nimport { application } from '../application';\nimport { parsePadding } from '../common/utils';\nimport { ARC3D_NUMBER_TYPE } from './constants';\nimport { NOWORK_ANIMATE_ATTR } from './graphic';\n\nexport class Arc3d extends Arc implements IArc3d {\n  type: GraphicType = 'arc3d';\n  declare attribute: IArc3dGraphicAttribute;\n\n  static NOWORK_ANIMATE_ATTR = {\n    cap: 1,\n    ...NOWORK_ANIMATE_ATTR\n  };\n\n  constructor(params: IArc3dGraphicAttribute) {\n    super(params);\n    this.numberType = ARC3D_NUMBER_TYPE;\n  }\n\n  protected doUpdateAABBBounds(): AABBBounds {\n    const polygonTheme = getTheme(this).arc;\n    this._AABBBounds.setValue(Infinity, Infinity, -Infinity, -Infinity);\n\n    const attribute = this.attribute;\n    const bounds = application.graphicService.updateArc3dAABBBounds(\n      attribute,\n      getTheme(this).polygon as any,\n      this._AABBBounds,\n      this\n    ) as AABBBounds;\n\n    const { boundsPadding = polygonTheme.boundsPadding } = attribute;\n    const paddingArray = parsePadding(boundsPadding);\n    if (paddingArray) {\n      bounds.expand(paddingArray);\n    }\n\n    this.clearUpdateBoundTag();\n\n    return this._AABBBounds;\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Arc3d.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createArc3d(attributes: IArc3dGraphicAttribute): IArc3d {\n  return new Arc3d(attributes);\n}\n"]}