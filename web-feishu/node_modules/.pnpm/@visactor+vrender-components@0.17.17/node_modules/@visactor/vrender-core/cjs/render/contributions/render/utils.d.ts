import type { IGraphicAttribute, IContext2d, IGraphic, IMarkAttribute, IThemeAttribute, IFillType, IStrokeType, IArc, IPath2D, IGraphicRenderDrawParams, IDrawContext, IBackgroundConfig } from '../../../interface';
export declare function runFill(fill: IFillType, background?: string | any | HTMLImageElement | HTMLCanvasElement | IBackgroundConfig): boolean;
export declare function runStroke(stroke: IStrokeType | IStrokeType[], lineWidth: number): boolean;
export declare function fillVisible(opacity: number, fillOpacity: number, fill: IFillType): boolean;
export declare function rectFillVisible(opacity: number, fillOpacity: number, width: number, height: number, fill: IFillType): boolean;
export declare function strokeVisible(opacity: number, strokeOpacity: number): boolean;
export declare function rectStrokeVisible(opacity: number, strokeOpacity: number, width: number, height: number): boolean;
export declare function drawPathProxy(graphic: IGraphic, context: IContext2d, x: number, y: number, drawContext: IDrawContext, params?: IGraphicRenderDrawParams, fillCb?: (ctx: IContext2d, markAttribute: Partial<IMarkAttribute & IGraphicAttribute>, themeAttribute: IThemeAttribute) => boolean, strokeCb?: (ctx: IContext2d, markAttribute: Partial<IMarkAttribute & IGraphicAttribute>, themeAttribute: IThemeAttribute) => boolean): boolean;
export declare function intersect(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number): number[];
export declare function cornerTangents(x0: number, y0: number, x1: number, y1: number, r1: number, rc: number, clockwise: number): {
    cx: number;
    cy: number;
    x01: number;
    y01: number;
    x11: number;
    y11: number;
};
export declare function drawArcPath(arc: IArc, context: IContext2d | IPath2D, cx: number, cy: number, outerRadius: number, innerRadius: number, partStroke?: (boolean | string)[]): boolean;
