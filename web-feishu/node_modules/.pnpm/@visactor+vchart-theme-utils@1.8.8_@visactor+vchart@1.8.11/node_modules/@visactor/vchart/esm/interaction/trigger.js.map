{"version":3,"sources":["../src/interaction/trigger.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACvC,OAAO,EAAE,iCAAiC,EAAE,MAAM,UAAU,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AAMpD,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAC7D,OAAO,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAEpE,MAAM,OAAO,OAAO;IAUlB,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAOD,YAAY,IAAkB,EAAE,MAAsB;QAL5C,YAAO,GAAoB,IAAI,CAAC;QAChC,WAAM,GAAY,IAAI,OAAO,EAAE,CAAC;QAChC,iBAAY,GAAY,IAAI,OAAO,EAAE,CAAC;QAoGxC,YAAO,GAAG,CAAC,MAAuB,EAAE,EAAE;YAM5C,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE;gBAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACxB;iBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,CAAC;QAEM,cAAS,GAAG,CAAC,MAAuB,EAAE,EAAE;YAC9C,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,EAAE,gBAAgB,CAAC,WAAW,CAAC,EAAE;gBAC1G,OAAO;aACR;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;gBACrE,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,MAAuB,EAAE,EAAE;YAC7C,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC;QAEM,eAAU,GAAG,CAAC,MAAuB,EAAE,EAAE;YAC/C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,EAAE,gBAAgB,CAAC,cAAc,CAAC,EAAE;gBAC9E,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;QACH,CAAC,CAAC;QAhIA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY,CAAC,MAAgB;QAC3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAED,YAAY,CAAC,IAAW;QACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACnE;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;SACtE;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAGS,SAAS;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAChG,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QACpG,IAAI,WAAW,EAAE;YAEf,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACpC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,kBAAkB,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,OAAqC,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC;YACH,IAAI,eAAe,IAAI,eAAe,KAAK,MAAM,EAAE;gBACjD,KAAK,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACvC,KAAK,CAAC,EAAE,CACN,OAAO,EACP,EAAE,KAAK,EAAE,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,iBAAiB,CAAC,KAAK,EAAE,EACrE,IAAI,CAAC,SAAuC,CAC7C,CAAC;gBACJ,CAAC,CAAC,CAAC;aACJ;SACF;QAED,IAAI,YAAY,EAAE;YAEhB,KAAK,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACrC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,kBAAkB,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,QAAsC,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC;YACH,IAAI,gBAAgB,IAAI,gBAAgB,KAAK,MAAM,EAAE;gBACnD,KAAK,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACxC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,kBAAkB,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,UAAwC,CAAC,CAAC;gBACvG,CAAC,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,gBAAgB,EAAE;gBACrB,KAAK,CAAC,gBAAgB,aAAhB,gBAAgB,cAAhB,gBAAgB,GAAI,aAAa,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACzD,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,kBAAkB,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,UAAwC,CAAC,CAAC;gBACzG,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAES,YAAY;QACpB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAEO,UAAU,CAAC,IAAgB;QACjC,MAAM,aAAa,GAAG,iCAAiC,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,qBAAQ,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,CAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,qBAAQ,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,CAAE,CAAC;QAE5C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACnC,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC;SAChC;aAAM,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SACjD;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACrC,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;SAClC;aAAM,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SACpD;IACH,CAAC;IAqCS,SAAS,CAAC,MAAuB;QACzC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;YACzB,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YACzB,KAAK,EAAE,CAAC,KAAK,CAAC;SACf,CAAC,CAAC;IACL,CAAC;IAES,WAAW;QACnB,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC7F,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAEvE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE;YAC3B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YACzB,KAAK,EAAE,iBAAiB;SACzB,CAAC,CAAC;IACL,CAAC;IAES,sBAAsB,CAAC,MAAuB;QACtD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACxB;aAAM,IACL,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACjE,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,EAAE,gBAAgB,CAAC,WAAW,CAAC,EACvE;YACA,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAGS,WAAW,CAAC,MAAa;QACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;YAC1B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YACzB,KAAK,EAAE,MAAM;SACd,CAAC,CAAC;IACL,CAAC;IAES,kBAAkB;QAC1B,MAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAC/F,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAE1E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE;YAC5B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YACzB,KAAK,EAAE,gBAAgB;SACxB,CAAC,CAAC;IACL,CAAC;IAES,aAAa,CAAC,MAAuB;QAC7C,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QACpC,IAAI,UAAU,KAAK,MAAM,EAAE;YACzB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAClF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE;gBAC5B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;gBACzB,KAAK,EAAE,MAAM,CAAC,IAAI;aACnB,CAAC,CAAC;SACJ;IACH,CAAC;IAES,uBAAuB,CAAC,MAAuB;QACvD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE;gBACrE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aAC5B;iBAAM;gBACL,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;oBACzB,KAAK,UAAU;wBACb,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;wBAC/E,MAAM;oBACR,KAAK,QAAQ,CAAC;oBACd;wBACE,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;iBACvF;gBACD,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;gBACtE,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;gBACpF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB;SACF;aAAM,IAGL,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,EAAE,gBAAgB,CAAC,cAAc,CAAC,EAC1E;YACA,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;IACH,CAAC;IAGS,eAAe,CAAC,MAAuB;QAC/C,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;IAES,YAAY,CAAC,MAAW,EAAE,MAAW;QAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;CACF","file":"trigger.js","sourcesContent":["import { Event } from '../event/event';\nimport { getDefaultInteractionConfigByMode } from './config';\nimport { isBoolean, isObject, array } from '@visactor/vutils';\nimport { mergeSpec } from '../util/spec/merge-spec';\n\nimport type { IMark } from '../mark/interface';\nimport type { BaseEventParams, EventCallback, EventParams, IEvent } from '../event/interface';\nimport type { IHoverSpec, IInteraction, ISelectSpec, ITrigger, ITriggerOption, ITriggerSpec } from './interface';\nimport type { RenderMode } from '../typings/spec';\nimport { MarkSet } from '../mark/mark-set';\nimport { STATE_VALUE_ENUM } from '../compile/mark/interface';\nimport { Event_Bubble_Level, Event_Source_Type } from '../constant';\n\nexport class Trigger implements ITrigger {\n  // 事件\n  readonly event: IEvent;\n\n  protected readonly interaction: IInteraction;\n\n  protected _spec: ITriggerSpec;\n  protected _option: ITriggerOption;\n\n  protected _hover: IHoverSpec;\n  get hover() {\n    return this._hover;\n  }\n  protected _select: ISelectSpec;\n  get select() {\n    return this._select;\n  }\n\n  protected _fields: string[] | null = null;\n  protected _marks: MarkSet = new MarkSet();\n  protected _markReverse: MarkSet = new MarkSet();\n  private _isHovered?: boolean;\n\n  constructor(spec: ITriggerSpec, option: ITriggerOption) {\n    this._spec = spec;\n    this._option = option;\n    this.event = new Event(option.eventDispatcher, option.mode);\n    this.interaction = option.interaction;\n    this.initConfig(option.mode);\n  }\n\n  setStateKeys(fields: string[]): void {\n    this._fields = fields.slice();\n  }\n\n  registerMark(mark: IMark): void {\n    this._marks.addMark(mark);\n    if (this._hover.enable) {\n      this.interaction.registerMark(STATE_VALUE_ENUM.STATE_HOVER, mark);\n    }\n    if (this._select.enable) {\n      this.interaction.registerMark(STATE_VALUE_ENUM.STATE_SELECTED, mark);\n    }\n  }\n\n  init(): void {\n    this.initEvent();\n  }\n\n  release(): void {\n    this.releaseEvent();\n    this._marks.clear();\n  }\n\n  // event\n  protected initEvent() {\n    const event = this.event;\n    const { enable: hoverEnable, trigger: hoverTrigger, triggerOff: hoverTriggerOff } = this._hover;\n    const { enable: selectEnable, trigger: selectTrigger, triggerOff: selectTriggerOff } = this._select;\n    if (hoverEnable) {\n      // 进行 hover 交互相关的事件绑定\n      array(hoverTrigger).forEach(trigger => {\n        event.on(trigger, { level: Event_Bubble_Level.chart }, this.onHover as EventCallback<EventParams>);\n      });\n      if (hoverTriggerOff && hoverTriggerOff !== 'none') {\n        array(hoverTriggerOff).forEach(trigger => {\n          event.on(\n            trigger,\n            { level: Event_Bubble_Level.vchart, source: Event_Source_Type.chart },\n            this.onUnHover as EventCallback<EventParams>\n          );\n        });\n      }\n    }\n\n    if (selectEnable) {\n      // 进行 select 交互相关的事件绑定\n      array(selectTrigger).forEach(trigger => {\n        event.on(trigger, { level: Event_Bubble_Level.mark }, this.onSelect as EventCallback<EventParams>);\n      });\n      if (selectTriggerOff && selectTriggerOff !== 'none') {\n        array(selectTriggerOff).forEach(trigger => {\n          event.on(trigger, { level: Event_Bubble_Level.mark }, this.onUnSelect as EventCallback<EventParams>);\n        });\n      }\n      // default triggerOff: active without mark , unselected\n      if (!selectTriggerOff) {\n        array(selectTriggerOff ?? selectTrigger).forEach(trigger => {\n          event.on(trigger, { level: Event_Bubble_Level.vchart }, this.onUnSelect as EventCallback<EventParams>);\n        });\n      }\n    }\n  }\n\n  protected releaseEvent(): void {\n    this.event.release();\n  }\n\n  private initConfig(mode: RenderMode): void {\n    const defaultConfig = getDefaultInteractionConfigByMode(mode);\n    this._hover = { ...defaultConfig?.hover };\n    this._select = { ...defaultConfig?.select };\n\n    const hoverSpec = this._spec.hover;\n    if (isBoolean(hoverSpec)) {\n      this._hover.enable = hoverSpec;\n    } else if (isObject(hoverSpec)) {\n      this._hover.enable = true;\n      this._hover = mergeSpec(this._hover, hoverSpec);\n    }\n\n    const selectSpec = this._spec.select;\n    if (isBoolean(selectSpec)) {\n      this._select.enable = selectSpec;\n    } else if (isObject(selectSpec)) {\n      this._select.enable = true;\n      this._select = mergeSpec(this._select, selectSpec);\n    }\n  }\n\n  private onHover = (params: BaseEventParams) => {\n    /**\n     * 多个series的时候，trigger会有多个，每个trigger管理自己的marks\n     * 如果不加状态\n     * 会存在A系列触发hover，B系列触发unhover清空A系列高亮元素的情况\n     */\n    if (this.filterEventMark(params)) {\n      this._isHovered = true;\n      this.hoverItem(params);\n    } else if (this._isHovered) {\n      this._isHovered = false;\n      this.unhoverItem();\n    }\n  };\n\n  private onUnHover = (params: BaseEventParams) => {\n    if (this.filterEventMark(params) || this.interaction.filterEventMark(params, STATE_VALUE_ENUM.STATE_HOVER)) {\n      return;\n    }\n    if (this.interaction.getEventElement(STATE_VALUE_ENUM.STATE_HOVER)[0]) {\n      this.unhoverItem();\n    }\n  };\n\n  private onSelect = (params: BaseEventParams) => {\n    this.handleSingleEventSelect(params);\n  };\n\n  private onUnSelect = (params: BaseEventParams) => {\n    if (!this.interaction.filterEventMark(params, STATE_VALUE_ENUM.STATE_SELECTED)) {\n      this.clearSelectedItems();\n    }\n  };\n\n  // hover\n  protected hoverItem(params: BaseEventParams): void {\n    const { datum } = params;\n    const lastEl = this.interaction.getEventElement(STATE_VALUE_ENUM.STATE_HOVER)[0];\n    if (params.item === lastEl) {\n      return;\n    }\n    this.interaction.exchangeEventElement(STATE_VALUE_ENUM.STATE_HOVER, params.item);\n    this.interaction.reverseEventElement(STATE_VALUE_ENUM.STATE_HOVER);\n    this.event.emit('hovered', {\n      model: this._option.model,\n      value: [datum]\n    });\n  }\n\n  protected unhoverItem(): void {\n    const lastHoveredDatums = this.interaction.getEventElementData(STATE_VALUE_ENUM.STATE_HOVER);\n    this.interaction.clearEventElement(STATE_VALUE_ENUM.STATE_HOVER, true);\n\n    this.event.emit('unhovered', {\n      model: this._option.model,\n      value: lastHoveredDatums\n    });\n  }\n\n  protected handleSingleEventHover(params: BaseEventParams): void {\n    if (this.filterEventMark(params)) {\n      this.hoverItem(params);\n    } else if (\n      this.interaction.getEventElement(STATE_VALUE_ENUM.STATE_HOVER)[0] &&\n      !this.interaction.filterEventMark(params, STATE_VALUE_ENUM.STATE_HOVER)\n    ) {\n      this.unhoverItem();\n    }\n  }\n\n  // select\n  protected selectItems(datums: any[]): void {\n    this.event.emit('selected', {\n      model: this._option.model,\n      value: datums\n    });\n  }\n\n  protected clearSelectedItems() {\n    const lastSelectedItem = this.interaction.getEventElementData(STATE_VALUE_ENUM.STATE_SELECTED);\n    this.interaction.clearEventElement(STATE_VALUE_ENUM.STATE_SELECTED, true);\n\n    this.event.emit('unselected', {\n      model: this._option.model,\n      value: lastSelectedItem\n    });\n  }\n\n  protected unselectItems(params: BaseEventParams): void {\n    const { triggerOff } = this._select;\n    if (triggerOff !== 'none') {\n      this.interaction.removeEventElement(STATE_VALUE_ENUM.STATE_SELECTED, params.item);\n      this.event.emit('unselected', {\n        model: this._option.model,\n        value: params.item\n      });\n    }\n  }\n\n  protected handleSingleEventSelect(params: BaseEventParams): void {\n    if (this.filterEventMark(params)) {\n      if (params.item.getStates().includes(STATE_VALUE_ENUM.STATE_SELECTED)) {\n        this.unselectItems(params);\n      } else {\n        switch (this._select.mode) {\n          case 'multiple':\n            this.interaction.addEventElement(STATE_VALUE_ENUM.STATE_SELECTED, params.item);\n            break;\n          case 'single':\n          default:\n            this.interaction.exchangeEventElement(STATE_VALUE_ENUM.STATE_SELECTED, params.item);\n        }\n        this.interaction.reverseEventElement(STATE_VALUE_ENUM.STATE_SELECTED);\n        const items = this.interaction.getEventElementData(STATE_VALUE_ENUM.STATE_SELECTED);\n        this.selectItems(items);\n      }\n    } else if (\n      // 不做已选内容的判断，因为选中的元素可能由用户 API 控制\n      // this._selectedItems.length > 0 &&\n      !this.interaction.filterEventMark(params, STATE_VALUE_ENUM.STATE_SELECTED)\n    ) {\n      this.clearSelectedItems();\n    }\n  }\n\n  // util\n  protected filterEventMark(params: BaseEventParams): boolean {\n    return !!(params.mark && this._marks.includes(params.mark));\n  }\n\n  protected isDatumEqual(datumA: any, datumB: any): boolean {\n    const fields = this._fields ? this._fields : Object.keys(datumA);\n    return fields.every(f => datumA[f] === datumB[f]);\n  }\n}\n"]}