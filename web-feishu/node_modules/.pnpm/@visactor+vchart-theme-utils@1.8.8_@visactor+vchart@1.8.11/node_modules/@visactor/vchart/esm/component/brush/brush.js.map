{"version":3,"sources":["../src/component/brush/brush.ts"],"names":[],"mappings":"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","file":"brush.js","sourcesContent":["import { AttributeLevel, ChartEvent, LayoutZIndex } from '../../constant';\nimport { BaseComponent } from '../base/base-component';\nimport type { IComponentOption } from '../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../interface/type';\nimport { Brush as BrushComponent, IOperateType as BrushEvent } from '@visactor/vrender-components';\nimport type { IBounds, IPointLike, Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { array, isNil, polygonIntersectPolygon, isValid } from '@visactor/vutils';\nimport type { IModelRenderOption, IModelSpecInfo } from '../../model/interface';\nimport type { IRegion } from '../../region/interface';\nimport type {\n  IGraphic,\n  IGroup,\n  INode,\n  IPolygon,\n  IRectGraphicAttribute,\n  ISymbolGraphicAttribute\n} from '@visactor/vrender-core';\nimport { transformToGraphic } from '../../util/style';\nimport type { ISeries } from '../../series/interface';\nimport type { IMark } from '../../mark/interface';\nimport type { IElement } from '@visactor/vgrammar-core';\nimport type { BrushInteractiveRangeAttr, IBrush, IBrushSpec, selectedItemStyle } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { isEqual } from '@visactor/vutils';\nimport { Factory } from '../../core/factory';\n\nconst IN_BRUSH_STATE = 'inBrush';\nconst OUT_BRUSH_STATE = 'outOfBrush';\n\nexport class Brush<T extends IBrushSpec = IBrushSpec> extends BaseComponent<T> implements IBrush {\n  layoutType: 'none' = 'none';\n  static type = ComponentTypeEnum.brush;\n  type = ComponentTypeEnum.brush;\n  name: string = ComponentTypeEnum.brush;\n\n  static specKey = 'brush';\n  specKey = 'brush';\n\n  layoutZIndex: number = LayoutZIndex.Brush;\n\n  // brush组件\n  protected _brushComponents!: BrushComponent[];\n  protected _relativeRegions!: IRegion[];\n  protected _linkedSeries: ISeries[] = [];\n\n  private _itemMap: { [regionId: string | number]: IMark[] } = {};\n  private _linkedItemMap: { [seriesId: string | number]: IMark[] } = {};\n\n  // 用brushName做分组管理的原因是: 如果有多个brush, 某个图元A brush内, 但在B brush外, 该图元state会被B误变成out of brush。 但其实该图元只有在A brush外才能被判断out of brush\n  // 用dict做存储因为方便查找和删减对应图元\n  protected _inBrushElementsMap: { [brushName: string]: { [elementKey: string]: IElement } } = {};\n  protected _outOfBrushElementsMap: { [elementKey: string]: IElement } = {};\n  protected _linkedInBrushElementsMap: { [brushName: string]: { [elementKey: string]: IElement } } = {};\n  protected _linkedOutOfBrushElementsMap: { [elementKey: string]: IElement } = {};\n\n  private _needInitOutState: boolean = true;\n  private _cacheInteractiveRangeAttrs: BrushInteractiveRangeAttr[] = [];\n\n  private _needDisablePickable: boolean = false;\n\n  init() {\n    const inBrushMarkAttr = this._transformBrushedMarkAttr(this._spec.inBrush);\n    const outOfBrushMarkAttr = this._transformBrushedMarkAttr(this._spec.outOfBrush);\n    // 写入mark state, 便于后续state管理\n    this._option.getAllSeries().forEach((s: ISeries) => {\n      s.getActiveMarks().forEach((m: IMark) => {\n        if (m) {\n          s.setMarkStyle(\n            m,\n            {\n              ...inBrushMarkAttr\n            },\n            IN_BRUSH_STATE,\n            AttributeLevel.Series\n          );\n          s.setMarkStyle(\n            m,\n            {\n              ...outOfBrushMarkAttr\n            },\n            OUT_BRUSH_STATE,\n            AttributeLevel.Series\n          );\n        }\n      });\n    });\n  }\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    const brushSpec = chartSpec[this.specKey];\n    // brush不支持数组的形式配置\n    if (isNil(brushSpec) || brushSpec.visible === false) {\n      return undefined;\n    }\n    return [\n      {\n        spec: brushSpec,\n        specPath: [this.specKey],\n        type: ComponentTypeEnum.brush\n      }\n    ];\n  }\n\n  created() {\n    super.created();\n\n    // event\n    this.initEvent();\n    this._bindRegions();\n    this._bindLinkedSeries();\n    this._initNeedOperatedItem();\n  }\n\n  protected _extendDataInBrush(elementsMap: { [brushName: string]: { [elementKey: string]: IElement } }) {\n    const data = [];\n    for (const brushName in elementsMap) {\n      for (const elementKey in elementsMap[brushName]) {\n        data.push(elementsMap[brushName][elementKey].data[0]);\n      }\n    }\n    return data;\n  }\n\n  protected _extendDatumOutOfBrush(elementsMap: { [elementKey: string]: IElement }) {\n    const data = [];\n    for (const elementKey in elementsMap) {\n      data.push(elementsMap[elementKey].data[0]);\n    }\n    return data;\n  }\n\n  protected _getBrushInteractiveAttr(region: IRegion) {\n    const regionLayoutPosition = region.getLayoutStartPoint();\n    const regionLayoutRect = region.getLayoutRect();\n    const seriesRegionStartX = regionLayoutPosition.x;\n    const seriesRegionEndX = seriesRegionStartX + regionLayoutRect.width;\n    const seriesRegionStartY = regionLayoutPosition.y;\n    const seriesRegionEndY = seriesRegionStartY + regionLayoutRect.height;\n    return {\n      interactiveRange: {\n        minY: seriesRegionStartY,\n        maxY: seriesRegionEndY,\n        minX: seriesRegionStartX,\n        maxX: seriesRegionEndX\n      },\n      xRange: [seriesRegionStartX, seriesRegionEndX],\n      yRange: [seriesRegionStartY, seriesRegionEndY]\n    } as BrushInteractiveRangeAttr;\n  }\n\n  protected _updateBrushComponent(region: IRegion, componentIndex: number) {\n    const interactiveAttr = this._getBrushInteractiveAttr(region);\n    // 布局变化后, 更新可交互范围\n    const brushComponent = this._brushComponents[componentIndex];\n    brushComponent.setAttributes(interactiveAttr as any);\n\n    // 布局变化后, 更新brush 和 图元状态\n    // 方案一:\n    // TODO: 更新mask位置（保持选框在画布中的相对位置）\n    // TODO: 是否更新mask大小有待商榷（保持选框位置和图元高亮区域一致）\n\n    // 方案二: 清空brushMask 和 图元高亮状态\n    this._initMarkBrushState(componentIndex, '');\n    brushComponent.children[0].removeAllChild();\n    this._needInitOutState = true;\n  }\n\n  protected _createBrushComponent(region: IRegion, componentIndex: number) {\n    const interactiveAttr = this._getBrushInteractiveAttr(region);\n    const brush = new BrushComponent({\n      zIndex: this.layoutZIndex,\n      brushStyle: transformToGraphic(this._spec?.style),\n      ...interactiveAttr,\n      ...this._spec,\n      disableTriggerEvent: this._option.disableTriggerEvent\n    });\n    brush.id = this._spec.id ?? `brush-${this.id}`;\n    this.getContainer().add(brush as unknown as INode);\n    const { brushMode = 'single' } = this._spec;\n    this._brushComponents.push(brush);\n    this._cacheInteractiveRangeAttrs.push(interactiveAttr);\n\n    brush.addEventListener(BrushEvent.drawStart, (e: any) => {\n      this._emitEvent(ChartEvent.brushStart, region);\n    });\n\n    brush.addEventListener(BrushEvent.moveStart, (e: any) => {\n      this._emitEvent(ChartEvent.brushStart, region);\n    });\n\n    brush.addEventListener(BrushEvent.drawing, (e: any) => {\n      // 需要重置out状态的情况：\n      // _needInitOutState：框选模式为'single' 且 开始后的第一次drawing时（这里不选择drawStart而选择第一次触发drawing的时机是因为点击空白处也会触发drawStart）, 需要重置图元状态\n      if (this._needInitOutState && brushMode === 'single') {\n        this._initMarkBrushState(componentIndex, OUT_BRUSH_STATE);\n      }\n      this._needInitOutState = false;\n      this._needDisablePickable = true;\n\n      this._handleBrushChange(ChartEvent.brushChange, region, e);\n    });\n\n    brush.addEventListener(BrushEvent.moving, (e: any) => {\n      this._handleBrushChange(ChartEvent.brushChange, region, e);\n    });\n\n    brush.addEventListener(BrushEvent.brushClear, (e: any) => {\n      this._initMarkBrushState(componentIndex, '');\n      this._needInitOutState = true;\n      this._needDisablePickable = false;\n      this._handleBrushChange(ChartEvent.brushChange, region, e);\n      this._handleBrushChange(ChartEvent.brushClear, region, e);\n    });\n\n    brush.addEventListener(BrushEvent.drawEnd, (e: any) => {\n      this._needInitOutState = true;\n      this._needDisablePickable = false;\n      this._handleBrushChange(ChartEvent.brushEnd, region, e);\n    });\n\n    brush.addEventListener(BrushEvent.moveEnd, (e: any) => {\n      this._handleBrushChange(ChartEvent.brushEnd, region, e);\n    });\n  }\n\n  private _handleBrushChange(eventType: string, region: IRegion, e: any) {\n    const { operateMask } = e.detail as any;\n    this._reconfigItem(operateMask, region);\n    this._reconfigLinkedItem(operateMask, region);\n\n    this._emitEvent(eventType, region);\n  }\n\n  private _emitEvent(eventType: string, region: IRegion) {\n    this.event.emit(eventType, {\n      model: this,\n      value: {\n        // 操作类型\n        operateType: eventType,\n        // 正在操作的region\n        operateRegion: region,\n        // 在选框内的 element data\n        inBrushData: this._extendDataInBrush(this._inBrushElementsMap),\n        // 在选框外的 element data\n        outOfBrushData: this._extendDatumOutOfBrush(this._outOfBrushElementsMap),\n        // 被链接的系列中：在选框内的 element data\n        linkInBrushData: this._extendDataInBrush(this._linkedInBrushElementsMap),\n        // 被链接的系列中：在选框外的 element data\n        linkOutOfBrushData: this._extendDatumOutOfBrush(this._linkedOutOfBrushElementsMap),\n        // 在选框内的 vgrammar elements\n        inBrushElementsMap: this._inBrushElementsMap,\n        // 在选框外的 vgrammar elements\n        outOfBrushElementsMap: this._outOfBrushElementsMap,\n        // 被链接的系列中：在选框内的 vgrammar elements\n        linkedInBrushElementsMap: this._linkedInBrushElementsMap,\n        // 被链接的系列中：在选框外的 vgrammar elements\n        linkedOutOfBrushElementsMap: this._linkedOutOfBrushElementsMap\n      }\n    });\n  }\n\n  private _transformBrushedMarkAttr(brushedStyle: selectedItemStyle) {\n    const styleResult: any = {};\n    if (brushedStyle?.symbol) {\n      styleResult.symbolType = brushedStyle.symbol;\n    }\n    if (brushedStyle?.symbolSize) {\n      styleResult.size = brushedStyle.symbolSize;\n    }\n    if (brushedStyle?.color) {\n      styleResult.fill = brushedStyle.color;\n    }\n    if (brushedStyle?.colorAlpha) {\n      styleResult.fillOpacity = brushedStyle.colorAlpha;\n    }\n    return {\n      ...transformToGraphic(brushedStyle),\n      ...styleResult\n    };\n  }\n\n  private _reconfigItem(operateMask: IPolygon, region: IRegion) {\n    // 遍历图元, 更新状态\n    this._itemMap[region.id].forEach((mark: IMark) => {\n      const grammarMark = mark.getProduct();\n      if (!grammarMark || !grammarMark.elements || !grammarMark.elements.length) {\n        return;\n      }\n      const elements = grammarMark.elements;\n      elements.forEach((el: IElement) => {\n        const graphicItem = el.getGraphicItem();\n        const elementKey = mark.id + '_' + el.key;\n        // 判断逻辑:\n        // 应该被置为inBrush状态的图元:\n        // before: 在out brush elment map, 即不在任何brush中\n        // now: 在当前brush图元中\n\n        // 应该被置为outOfBrush状态的图元:\n        // before: 在当前brush 的 in brush element map中, 即在当前brush中\n        // now: 不在当前brush中\n        if (this._outOfBrushElementsMap?.[elementKey] && this._isBrushContainItem(operateMask, graphicItem)) {\n          el.addState(IN_BRUSH_STATE);\n          if (!this._inBrushElementsMap[operateMask?.name]) {\n            this._inBrushElementsMap[operateMask?.name] = {};\n          }\n          this._inBrushElementsMap[operateMask?.name][elementKey] = el;\n          delete this._outOfBrushElementsMap[elementKey];\n        } else if (\n          this._inBrushElementsMap?.[operateMask?.name]?.[elementKey] &&\n          !this._isBrushContainItem(operateMask, graphicItem)\n        ) {\n          el.removeState(IN_BRUSH_STATE);\n          el.addState(OUT_BRUSH_STATE);\n          this._outOfBrushElementsMap[elementKey] = el;\n          delete this._inBrushElementsMap[operateMask.name][elementKey];\n        }\n        graphicItem.setAttribute('pickable', !this._needDisablePickable);\n      });\n    });\n  }\n\n  private _reconfigLinkedItem(operateMask: IPolygon, region: IRegion) {\n    const regionLayoutPos = region.getLayoutStartPoint();\n    const seriesId = region.getSeries().map(s => s.id);\n    this._linkedSeries.forEach((s: ISeries) => {\n      if (!seriesId.includes(s.id)) {\n        const sRegionLayoutPos = s.getRegion().getLayoutStartPoint();\n\n        const regionOffsetX = sRegionLayoutPos.x - regionLayoutPos.x;\n        const regionOffsetY = sRegionLayoutPos.y - regionLayoutPos.y;\n\n        this._linkedItemMap[s.id].forEach((mark: IMark) => {\n          const grammarMark = mark.getProduct();\n          if (!grammarMark || !grammarMark.elements || !grammarMark.elements.length) {\n            return;\n          }\n          const elements = grammarMark.elements;\n          elements.forEach((el: IElement) => {\n            const graphicItem = el.getGraphicItem();\n            const elementKey = mark.id + '_' + el.key;\n            // 判断逻辑:\n            // 应该被置为inBrush状态的图元:\n            // before: 在out brush elment map, 即不在任何brush中\n            // now: 在当前brush图元中\n\n            // 应该被置为outOfBrush状态的图元:\n            // before: 在当前brush 的 in brush element map中, 即在当前brush中\n            // now: 不在当前brush中\n            if (\n              this._linkedOutOfBrushElementsMap?.[elementKey] &&\n              this._isBrushContainItem(operateMask, graphicItem, { dx: regionOffsetX, dy: regionOffsetY })\n            ) {\n              el.addState(IN_BRUSH_STATE);\n              if (!this._linkedInBrushElementsMap[operateMask?.name]) {\n                this._linkedInBrushElementsMap[operateMask?.name] = {};\n              }\n              this._linkedInBrushElementsMap[operateMask?.name][elementKey] = el;\n              delete this._linkedOutOfBrushElementsMap[elementKey];\n            } else if (\n              this._linkedInBrushElementsMap?.[operateMask?.name]?.[elementKey] &&\n              !this._isBrushContainItem(operateMask, graphicItem, { dx: regionOffsetX, dy: regionOffsetY })\n            ) {\n              el.removeState(IN_BRUSH_STATE);\n              el.addState(OUT_BRUSH_STATE);\n              this._linkedOutOfBrushElementsMap[elementKey] = el;\n            }\n            graphicItem.setAttribute('pickable', !this._needDisablePickable);\n          });\n        });\n      }\n    });\n  }\n\n  private _isBrushContainItem(brushMask: IPolygon, item: IGraphic, linkedOffset?: { dx: number; dy: number }) {\n    if (!brushMask?.globalTransMatrix || !brushMask?.attribute?.points) {\n      return false;\n    }\n\n    // 根据变换矩阵得到brushMask的实际坐标\n    const points = brushMask?.attribute?.points ?? [];\n    const { a, b, c, d, e, f } = brushMask.globalTransMatrix;\n\n    const dx = linkedOffset?.dx || 0;\n    const dy = linkedOffset?.dy || 0;\n\n    const pointsCoord = points.map((p: IPointLike) => {\n      return {\n        x: a * p.x + c * p.y + e + dx,\n        y: b * p.x + d * p.y + f + dy\n      };\n    });\n\n    brushMask.globalAABBBounds\n      .clone()\n      .set(\n        brushMask.globalAABBBounds.x1 + dx,\n        brushMask.globalAABBBounds.y1 + dy,\n        brushMask.globalAABBBounds.x2 + dx,\n        brushMask.globalAABBBounds.y2 + dy\n      );\n\n    // 根据变换矩阵得到item的实际坐标\n    const x = item.globalTransMatrix.e;\n    const y = item.globalTransMatrix.f;\n\n    // brush与图表图元进行相交 或 包含判断\n    let itemBounds: { x: number; y: number }[] = [];\n    if (item.type === 'symbol') {\n      const { size: itemSize = 0 } = item?.attribute as ISymbolGraphicAttribute;\n      const size = array(itemSize)[0] / 2;\n      itemBounds = [\n        {\n          x: x - size,\n          y: y - size\n        },\n        {\n          x: x + size,\n          y: y - size\n        },\n        {\n          x: x + size,\n          y: y + size\n        },\n        {\n          x: x - size,\n          y: y + size\n        }\n      ];\n      return polygonIntersectPolygon(pointsCoord, itemBounds);\n    } else if (item.type === 'rect') {\n      const { x1, x2, y1, y2 } = item?.AABBBounds;\n      const width = Math.abs(x1 - x2);\n      const height = Math.abs(y1 - y2);\n      itemBounds = [\n        {\n          x: x,\n          y: y\n        },\n        {\n          x: x + width,\n          y: y\n        },\n        {\n          x: x + width,\n          y: y + height\n        },\n        {\n          x: x,\n          y: y + height\n        }\n      ];\n      return polygonIntersectPolygon(pointsCoord, itemBounds);\n    }\n    return brushMask.globalAABBBounds.intersects(item.globalAABBBounds);\n  }\n\n  protected _bindRegions() {\n    if (isValid(this._spec.regionId) && isValid(this._spec.regionIndex)) {\n      this._relativeRegions = this._option.getAllRegions();\n    }\n    this._relativeRegions = this._option.getRegionsInUserIdOrIndex(\n      array(this._spec.regionId),\n      array(this._spec.regionIndex)\n    );\n  }\n\n  protected _bindLinkedSeries() {\n    if (isValid(this._spec.brushLinkSeriesId) && isValid(this._spec.brushLinkSeriesIndex)) {\n      return;\n    }\n    this._linkedSeries = this._option.getSeriesInUserIdOrIndex(\n      array(this._spec.brushLinkSeriesId),\n      array(this._spec.brushLinkSeriesIndex)\n    );\n  }\n\n  private _initNeedOperatedItem() {\n    const seriesUserId = this._spec.seriesId;\n    const seriesIndex = this._spec.seriesIndex;\n    this._relativeRegions.forEach(r => {\n      const allMarks: IMark[] = [];\n      r.getSeries().forEach((s: ISeries) => {\n        if (\n          (seriesUserId && array(seriesUserId).includes(s.userId.toString())) ||\n          (seriesIndex && array(seriesIndex).includes(s.getSpecIndex())) ||\n          (!seriesIndex && !seriesUserId)\n        ) {\n          allMarks.push(...s.getMarksWithoutRoot());\n        }\n        this._itemMap[r.id] = allMarks;\n      });\n    });\n\n    this._linkedSeries.forEach(s => {\n      this._linkedItemMap[s.id] = s.getMarksWithoutRoot();\n    });\n  }\n\n  protected _initMarkBrushState(componentIndex: number, stateName: string) {\n    this._brushComponents.forEach((brush, index) => {\n      if (index !== componentIndex) {\n        brush.children[0].removeAllChild();\n      }\n    });\n\n    this._inBrushElementsMap = {};\n    this._outOfBrushElementsMap = {};\n    this._linkedInBrushElementsMap = {};\n    this._linkedOutOfBrushElementsMap = {};\n\n    this._option.getAllSeries().forEach((s: ISeries) => {\n      s.getMarksWithoutRoot().forEach((mark: IMark) => {\n        const grammarMark = mark.getProduct();\n        if (!grammarMark || !grammarMark.elements || !grammarMark.elements.length) {\n          return;\n        }\n        const elements = grammarMark.elements;\n        elements.forEach((el: IElement) => {\n          const elementKey = mark.id + '_' + el.key;\n          el.removeState(IN_BRUSH_STATE);\n          el.removeState(OUT_BRUSH_STATE);\n          el.addState(stateName);\n          this._outOfBrushElementsMap[elementKey] = el;\n          this._linkedOutOfBrushElementsMap[elementKey] = el;\n        });\n      });\n    });\n  }\n\n  protected initEvent() {\n    // do nothing\n  }\n  onRender(ctx: IModelRenderOption): void {\n    // do nothing\n  }\n  changeRegions(regions: IRegion[]): void {\n    // do nothing\n  }\n\n  protected _getNeedClearVRenderComponents(): IGraphic[] {\n    return this._brushComponents as unknown as IGroup[];\n  }\n\n  /**\n   * updateSpec\n   */\n  _compareSpec(spec: T, prevSpec: T) {\n    if (this._brushComponents) {\n      // FIXME: 这个逻辑放在这个方法里不太妥当？\n      this._relativeRegions.forEach((region: IRegion, index: number) => {\n        this._updateBrushComponent(region, index);\n      });\n    }\n    const result = super._compareSpec(spec, prevSpec);\n    if (!isEqual(prevSpec, spec)) {\n      result.reRender = true;\n      result.reMake = true;\n    }\n    return result;\n  }\n\n  onLayoutEnd(ctx: any): void {\n    super.onLayoutEnd(ctx);\n    if (this._option.disableTriggerEvent) {\n      return;\n    }\n    const brushVisible = this._spec.visible ?? true;\n    if (brushVisible) {\n      // 创建或更新marker组件\n      if (!this._brushComponents) {\n        this._brushComponents = [];\n        this._relativeRegions.forEach((region: IRegion, index: number) => {\n          this._createBrushComponent(region, index);\n        });\n      } else {\n        this._relativeRegions.forEach((region: IRegion, index: number) => {\n          this._updateBrushComponent(region, index);\n        });\n      }\n    }\n  }\n\n  clearGraphic(): void {\n    if (this._brushComponents) {\n      this._brushComponents.forEach(brush => {\n        (brush as any)._container.incrementalClearChild();\n      });\n    }\n  }\n\n  clear(): void {\n    if (this._brushComponents) {\n      this.getContainer()?.removeChild(this._brushComponents as unknown as INode);\n      this._brushComponents.forEach(brush => {\n        brush.removeAllChild();\n        brush.releaseBrushEvents();\n      });\n      this._brushComponents = null;\n    }\n    super.clear();\n  }\n}\n\nexport const registerBrush = () => {\n  Factory.registerComponent(Brush.type, Brush);\n};\n"]}