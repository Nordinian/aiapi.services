{"version":3,"sources":["../src/component/axis/mixin/band-axis-mixin.ts"],"names":[],"mappings":"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","file":"band-axis-mixin.js","sourcesContent":["import type { BandScale } from '@visactor/vscale';\nimport { isArray } from '@visactor/vutils';\nimport type { StringOrNumber } from '../../../typings';\nimport type { IEvent } from '../../../event/interface';\nimport { ChartEvent } from '../../../constant/event';\nimport type { IModel } from '../../../model/interface';\nimport type { IAxisLocationCfg } from '../interface';\n\nexport interface BandAxisMixin {\n  _scale: BandScale;\n  _scales: BandScale[];\n  _spec: any;\n  _defaultBandPosition: number;\n  _defaultBandInnerPadding: number;\n  _defaultBandOuterPadding: number;\n  event: IEvent;\n  isSeriesDataEnable: () => boolean;\n  collectData: (depth: number, rawData?: boolean) => { min: number; max: number; values: any[] }[];\n  computeDomain: (data: { min: number; max: number; values: any[] }[]) => StringOrNumber[];\n  transformScaleDomain: () => void;\n}\n\nexport class BandAxisMixin {\n  protected _rawDomainIndex: { [key: string | number | symbol]: number }[] = [];\n\n  dataToPosition(values: any[], cfg: IAxisLocationCfg = {}): number {\n    if (values.length === 0 || this._scales.length === 0) {\n      return 0;\n    }\n    const { position, bandScale } = this.getPosition(values);\n    return (\n      position + bandScale.bandwidth() * (cfg.bandPosition ?? this._spec.bandPosition ?? this._defaultBandPosition)\n    );\n  }\n\n  valueToPosition(value: any): number {\n    const bandStart = this._scale.scale(value);\n    return bandStart;\n  }\n\n  updateGroupScaleRange() {\n    let parentScale = this._scale;\n    this._scales.forEach((scale, i) => {\n      if (i > 0) {\n        scale.range([0, parentScale.bandwidth()]);\n        parentScale = scale;\n      }\n    });\n  }\n\n  getPosition(values: any[]) {\n    let position = 0;\n    let bandScale = this._scale;\n    // 要不要性能优化？\n    // 优化有没有用？\n    if (this._scales.length === 1 || values.length === 1) {\n      position = this.valueToPosition(values[0]);\n    } else {\n      const max = Math.min(values.length, this._scales.length);\n      for (let i = 0; i < max; i++) {\n        position += this._scales[i].scale(values[i]);\n      }\n      bandScale = this._scales[max - 1];\n    }\n    return { position, bandScale };\n  }\n\n  calcScales(DEFAULT_BAND_INNER_PADDING: number, DEFAULT_BAND_OUTER_PADDING: number) {\n    const { bandPadding, paddingInner, paddingOuter } = this._spec;\n    const isBandPaddingArray = isArray(bandPadding);\n    const isPaddingInnerArray = isArray(paddingInner);\n    const isPaddingOuterArray = isArray(paddingOuter);\n\n    for (let i = 0; i < this._scales.length; i++) {\n      const _padding = isBandPaddingArray ? bandPadding[i] : bandPadding;\n      const _paddingInner = isPaddingInnerArray ? paddingInner[i] : paddingInner;\n      const _paddingOuter = isPaddingOuterArray ? paddingOuter[i] : paddingOuter;\n\n      this._scales[i]\n        .paddingInner(_paddingInner ?? _padding ?? DEFAULT_BAND_INNER_PADDING, true)\n        .paddingOuter(_paddingOuter ?? _padding ?? DEFAULT_BAND_OUTER_PADDING, true);\n    }\n  }\n  computeBandDomain(data: { min: number; max: number; values: any[] }[]): StringOrNumber[] {\n    if (!data.length) {\n      return [];\n    }\n\n    // 性能优化 9.13\n    if (data.length === 1) {\n      return data[0].values;\n    }\n    const tempSet = new Set();\n    for (let i = 0; i < data.length; i++) {\n      for (let j = 0; j < data[i].values.length; j++) {\n        tempSet.add(data[i].values[j]);\n      }\n    }\n    return Array.from(tempSet) as StringOrNumber[];\n  }\n\n  protected updateScaleDomain() {\n    if (!this.isSeriesDataEnable()) {\n      return;\n    }\n    if (!this._rawDomainIndex?.length && this._scales.length) {\n      this._updateRawDomain();\n    }\n    const userDomain = this._spec.domain;\n    for (let i = 0; i < this._scales.length; i++) {\n      if (userDomain && userDomain.length && i === 0) {\n        // 当数字映射字段存在分组时，只作用于第一个分组的domain，如 xField: ['x', 'type']\n        this._scales[i].domain(userDomain);\n      } else {\n        const data = this.collectData(i);\n        const domain = this.computeDomain(data);\n        this._scales[i].domain(domain.sort((a, b) => this._rawDomainIndex[i][a] - this._rawDomainIndex[i][b]));\n      }\n    }\n    this.transformScaleDomain();\n    this.event.emit(ChartEvent.scaleDomainUpdate, { model: this as unknown as IModel });\n    this.event.emit(ChartEvent.scaleUpdate, { model: this as unknown as IModel, value: 'domain' });\n  }\n\n  protected _updateRawDomain() {\n    // 默认值设置了无效？\n    this._rawDomainIndex = [];\n\n    const userDomain = this._spec.domain;\n    for (let i = 0; i < this._scales.length; i++) {\n      if (userDomain && userDomain.length && i === 0) {\n        // 当数字映射字段存在分组时，只作用于第一个分组的domain，如 xField: ['x', 'type']\n        this._scales[i].domain(userDomain);\n      } else {\n        const data = this.collectData(i, true);\n        const domain = this.computeDomain(data);\n        this._rawDomainIndex[i] = {};\n        domain.forEach((d, _i) => (this._rawDomainIndex[i][d] = _i));\n      }\n    }\n  }\n\n  protected _clearRawDomain() {\n    this._rawDomainIndex = [];\n  }\n}\n"]}