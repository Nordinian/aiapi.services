"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.SunburstChartSpecTransformer = void 0;

const vutils_1 = require("@visactor/vutils"), base_1 = require("../base"), constant_1 = require("../../constant"), series_1 = require("../../series");

class SunburstChartSpecTransformer extends base_1.BaseChartSpecTransformer {
    _getDefaultSeriesSpec(spec) {
        const startAngle = (0, vutils_1.isValid)(spec.startAngle) ? spec.startAngle : constant_1.POLAR_START_ANGLE, endAngle = (0, 
        vutils_1.isValid)(spec.endAngle) ? spec.endAngle : startAngle + (0, vutils_1.radianToDegree)(2 * Math.PI), series = Object.assign(Object.assign({}, super._getDefaultSeriesSpec(spec)), {
            categoryField: spec.categoryField,
            valueField: spec.valueField,
            seriesField: spec.seriesField,
            centerX: spec.centerX,
            centerY: spec.centerY,
            offsetX: spec.offsetX,
            offsetY: spec.offsetY,
            startAngle: startAngle,
            endAngle: endAngle,
            innerRadius: spec.innerRadius,
            outerRadius: spec.outerRadius,
            gap: spec.gap,
            labelLayout: spec.labelLayout,
            label: spec.label,
            labelAutoVisible: spec.labelAutoVisible,
            drill: spec.drill,
            drillField: spec.drillField
        }), seriesType = series_1.SeriesTypeEnum.sunburst;
        return series.type = seriesType, series[seriesType] = spec[seriesType], series;
    }
    transformSpec(spec) {
        super.transformSpec(spec);
        const defaultSeriesSpec = this._getDefaultSeriesSpec(spec);
        spec.series && 0 !== spec.series.length ? spec.series.forEach((s => {
            this._isValidSeries(s.type) && Object.keys(defaultSeriesSpec).forEach((k => {
                k in s || (s[k] = defaultSeriesSpec[k]);
            }));
        })) : spec.series = [ defaultSeriesSpec ];
    }
}

exports.SunburstChartSpecTransformer = SunburstChartSpecTransformer;
//# sourceMappingURL=sunburst-transformer.js.map
