{"version":3,"sources":["../src/plugin/base/base-plugin-service.ts"],"names":[],"mappings":";;;AACA,sCAAyC;AACzC,4CAAwC;AAExC,MAAa,iBAAiB;IAI5B;QAFS,OAAE,GAAW,IAAA,aAAQ,GAAE,CAAC;QAG/B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,GAAG,CAAC,OAAY;QACd,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC;SACb;QACD,MAAM,eAAe,GAAQ,EAAE,CAAC;QAChC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;YAC5D,IAAI,OAAO,EAAE;gBACX,IAAA,YAAI,EAAC,iBAAiB,CAAC,CAAC;gBACxB,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,IAAI,CAAC,OAAY;QACf,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YAC/C,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAED,QAAQ,CAAC,OAAY;QACnB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnB,OAAO;SACR;QAED,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,SAAiB;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QACD,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC7B,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAnED,8CAmEC","file":"base-plugin-service.js","sourcesContent":["import type { IBasePlugin, IBasePluginService } from './interface';\nimport { createID } from '../../util/id';\nimport { warn } from '../../util/debug';\n\nexport class BasePluginService<T extends IBasePlugin = IBasePlugin> implements IBasePluginService<T> {\n  protected _plugins: T[];\n  readonly id: number = createID();\n\n  constructor() {\n    this._plugins = [];\n  }\n\n  add(plugins: T[]): T[] | null {\n    if (!plugins || plugins.length === 0) {\n      return null;\n    }\n    const unloadedPlugins: T[] = [];\n    plugins.forEach(plugin => {\n      const isExist = this._plugins.find(p => p.id === plugin.id);\n      if (isExist) {\n        warn('不要重复添加相同的plugin');\n        return;\n      }\n      this._plugins.push(plugin);\n      unloadedPlugins.push(plugin);\n      plugin.onAdd && plugin.onAdd(this);\n    });\n\n    return unloadedPlugins;\n  }\n\n  load(plugins: T[]): void {\n    const unloadedPlugins = this.add(plugins);\n    if (!unloadedPlugins || !unloadedPlugins.length) {\n      return;\n    }\n\n    this.activate(plugins);\n  }\n\n  activate(plugins: T[]): void {\n    if (!plugins.length) {\n      return;\n    }\n\n    plugins.forEach(plugin => {\n      plugin.init && plugin.init();\n    });\n  }\n\n  get(id: number): T | undefined {\n    return this._plugins.find(p => p.id === id);\n  }\n\n  getAll(): T[] {\n    return this._plugins.slice();\n  }\n\n  dispose(pluginsId: number): void {\n    const plugin = this._plugins.find(p => p.id === pluginsId);\n    if (!plugin) {\n      return;\n    }\n    plugin.dispose && plugin.dispose(this);\n  }\n\n  disposeAll(): void {\n    this._plugins.forEach(plugin => {\n      plugin.dispose && plugin.dispose(this);\n    });\n  }\n}\n"]}