{"version":3,"sources":["../src/component/tooltip/handler/dom/model/tooltip-model.ts"],"names":[],"mappings":"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","file":"tooltip-model.js","sourcesContent":["import { isValid } from '@visactor/vutils';\nimport { BaseTooltipModel } from './base-tooltip-model';\nimport { ContentModel } from './content-model';\nimport type { ITooltipModelOption } from './interface';\nimport { TitleModel } from './title-model';\nimport { defaultContainerStyle } from './style-constants';\nimport { mergeSpec } from '../../../../../util/spec/merge-spec';\n\nexport class TooltipModel extends BaseTooltipModel {\n  title: TitleModel | null = null;\n  content: ContentModel | null = null;\n\n  private _classList: string[];\n  private _id: string;\n\n  constructor(parent: BaseTooltipModel | HTMLElement, option: ITooltipModelOption, classList: string[], id: string) {\n    super(parent, option, 0);\n    this._classList = classList;\n    this._id = id;\n  }\n\n  setVisibility(visibility: boolean) {\n    super.setVisibility(visibility);\n    if (!this.product) {\n      return;\n    }\n    const { classList } = this.product;\n    if (visibility) {\n      classList.add('visible');\n    } else {\n      classList.remove('visible');\n    }\n  }\n\n  init(): void {\n    const tooltipActual = this._option.getTooltipActual();\n\n    if (!this.product) {\n      this._initPanel(this._classList, this._id);\n    }\n\n    const { title } = tooltipActual;\n    if (title?.visible !== false && isValid(title?.value)) {\n      if (!this.title) {\n        this._initTitle();\n      }\n    } else if (this.title) {\n      this._releaseTitle();\n    }\n\n    const renderContent = tooltipActual.content ?? [];\n    if (renderContent.length > 0) {\n      if (!this.content) {\n        this._initContent();\n      }\n    } else if (this.content) {\n      this._releaseContent();\n    }\n  }\n\n  private _initPanel(classList?: string[], id?: string) {\n    const panel = this.createElement(\n      'div',\n      classList,\n      {\n        left: '0',\n        top: '0',\n        pointerEvents: 'none',\n        padding: '12px',\n        position: 'absolute',\n        zIndex: '99999999999999',\n        fontFamily: 'sans-serif',\n        fontSize: '11px',\n        borderRadius: '3px',\n        borderStyle: 'solid',\n        lineHeight: 'initial',\n        background: '#fff',\n        boxShadow: '2px 2px 4px rgba(0, 0, 0, 0.1)',\n        maxWidth: '100wh',\n        maxHeight: '100vh'\n      },\n      id\n    );\n    this.product = panel;\n  }\n\n  private _initTitle() {\n    const title = new TitleModel(this.product!, this._option, 0);\n    title.init();\n    this.title = title;\n    this.children[title.childIndex] = title;\n  }\n\n  private _releaseTitle() {\n    if (!this.title) {\n      return;\n    }\n    this.title.release();\n    delete this.children[this.title.childIndex];\n    this.title = null;\n  }\n\n  private _initContent() {\n    const content = new ContentModel(this.product!, this._option, 1);\n    content.init();\n    this.content = content;\n    this.children[content.childIndex] = content;\n  }\n\n  private _releaseContent() {\n    if (!this.content) {\n      return;\n    }\n    this.content.release();\n    delete this.children[this.content.childIndex];\n    this.content = null;\n  }\n\n  setStyle(): void {\n    const tooltipStyle = this._option.getTooltipStyle();\n    super.setStyle(mergeSpec({}, defaultContainerStyle, tooltipStyle.panel));\n    Object.values(this.children).forEach(c => c.setStyle());\n  }\n\n  setContent() {\n    Object.values(this.children).forEach(c => {\n      c.setContent();\n    });\n  }\n\n  release(): void {\n    super.release();\n    this.title = null;\n    this.content = null;\n  }\n}\n"]}