{"version":3,"sources":["../src/series/funnel/tooltip-helper.ts"],"names":[],"mappings":";;;AAEA,2DAAiE;AACjE,kDAA2D;AAC3D,6CAA2C;AAI3C,MAAa,yBAA0B,SAAQ,wCAAuB;IAAtE;;QACE,uBAAkB,GAAG,CAAC,KAAY,EAAE,MAA6B,EAAE,EAAE;;YACnE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAuB,CAAC;YAC5C,IAAI,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,IAAI,iBAAiC,EAAE;gBAEvD,OAAO,KAAK,CAAC;aACd;YACD,OAAO,MAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,mCAAI,MAAA,KAAK,CAAC,UAAU,0CAAG,GAAG,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;QAC7F,CAAC,CAAC;QAEF,yBAAoB,GAAG,CAAC,KAAY,EAAE,MAA6B,EAAE,EAAE;;YACrE,IAAI,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,IAAI,iBAAiC,EAAE;gBACvD,MAAM,WAAW,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,2BAAkB,CAAC,CAAC;gBAChD,OAAO,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;aAC7C;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,KAAY,EAAE,MAA6B,EAAE,EAAE;;YACnE,IAAI,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,IAAI,iBAAiC,EAAE;gBAEvD,OAAO,KAAK,CAAC;aACd;YACD,MAAM,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAChE,MAAM,iBAAiB,GAAG,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAEtE,IAAI,IAAA,gBAAO,EAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC5B,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACjC;YACD,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,iBAAiB,CAAC,CAAC;QACpC,CAAC,CAAC;IACJ,CAAC;CAAA;AA/BD,8DA+BC","file":"tooltip-helper.js","sourcesContent":["import type { IFunnelSeries, ISeriesTooltipHelper } from '../interface';\nimport { SeriesMarkNameEnum } from '../interface/type';\nimport { BaseSeriesTooltipHelper } from '../base/tooltip-helper';\nimport { FUNNEL_REACH_RATIO } from '../../constant/funnel';\nimport { isValid } from '@visactor/vutils';\nimport type { TooltipHandlerParams } from '../../component/tooltip/interface';\nimport type { Datum } from '@visactor/vgrammar-core';\n\nexport class FunnelSeriesTooltipHelper extends BaseSeriesTooltipHelper implements ISeriesTooltipHelper {\n  titleValueCallback = (datum: Datum, params?: TooltipHandlerParams) => {\n    const series = this.series as IFunnelSeries;\n    if (params?.mark?.name === SeriesMarkNameEnum.transform) {\n      // TODO: i18n\n      return `转化率`;\n    }\n    return this._getDimensionData(datum) ?? datum.properties?.[`${series.getCategoryField()}`];\n  };\n\n  contentValueCallback = (datum: Datum, params?: TooltipHandlerParams) => {\n    if (params?.mark?.name === SeriesMarkNameEnum.transform) {\n      const measureData = datum?.[FUNNEL_REACH_RATIO];\n      return `${(measureData * 100).toFixed(1)}%`;\n    }\n    return this._getMeasureData(datum);\n  };\n\n  contentKeyCallback = (datum: Datum, params?: TooltipHandlerParams) => {\n    if (params?.mark?.name === SeriesMarkNameEnum.transform) {\n      // TODO: i18n\n      return `转化率`;\n    }\n    const { dimensionFields, seriesFields } = this._seriesCacheInfo;\n    const subDimensionField = dimensionFields[dimensionFields.length - 1];\n\n    if (isValid(seriesFields[0])) {\n      return datum?.[seriesFields[0]];\n    }\n    return datum?.[subDimensionField];\n  };\n}\n"]}