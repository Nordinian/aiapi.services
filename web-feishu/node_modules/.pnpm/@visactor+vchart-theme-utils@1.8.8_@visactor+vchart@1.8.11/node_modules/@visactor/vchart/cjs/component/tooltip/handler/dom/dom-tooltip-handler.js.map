{"version":3,"sources":["../src/component/tooltip/handler/dom/dom-tooltip-handler.ts"],"names":[],"mappings":"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","file":"dom-tooltip-handler.js","sourcesContent":["import type { IToolTipActual } from '../../../../typings/tooltip';\nimport type { ITooltipSpec, TooltipHandlerParams } from '../../interface';\nimport { BaseTooltipHandler } from '../base';\nimport { getDomStyles } from './util';\nimport type { IDomTooltipStyle } from './interface';\nimport { TooltipModel } from './model/tooltip-model';\nimport { TOOLTIP_CONTAINER_EL_CLASS_NAME, TooltipHandlerType } from '../constants';\nimport type { Tooltip } from '../../tooltip';\nimport type { Maybe } from '@visactor/vutils';\nimport { domDocument } from '../../../../util/env';\n\n/**\n * The tooltip handler class.\n */\nexport class DomTooltipHandler extends BaseTooltipHandler {\n  type = TooltipHandlerType.dom;\n\n  protected _tooltipContainer = domDocument?.body;\n  protected _domStyle: IDomTooltipStyle;\n  protected _tooltipActual?: IToolTipActual;\n  protected declare _container: Maybe<HTMLDivElement>;\n\n  protected model: TooltipModel;\n\n  getVisibility() {\n    return !!this.model?.getVisibility();\n  }\n\n  setVisibility(_value: boolean) {\n    // 这里做个节流\n    if (_value !== this.getVisibility()) {\n      this.model?.setVisibility(_value);\n    }\n  }\n\n  constructor(tooltipId: string, component: Tooltip) {\n    super(tooltipId, component);\n    this._initStyle();\n    this.initEl();\n  }\n\n  initEl() {\n    const tooltipSpec = this._component.getSpec();\n    const parentElement = tooltipSpec.parentElement as HTMLElement | HTMLCanvasElement;\n    if (domDocument && parentElement) {\n      for (let i = 0; i < parentElement.children.length; i++) {\n        if (parentElement.children[i].classList.contains(TOOLTIP_CONTAINER_EL_CLASS_NAME)) {\n          this._container = parentElement.children[i] as HTMLDivElement;\n          break;\n        }\n      }\n      if (!this._container) {\n        this._container = domDocument.createElement('div');\n        this._container.style.position = 'relative';\n        this._container.classList.add(TOOLTIP_CONTAINER_EL_CLASS_NAME);\n        parentElement.appendChild(this._container);\n      }\n      this.model = new TooltipModel(\n        this._container,\n        {\n          valueToHtml: this._option.sanitize,\n          getTooltipStyle: () => this._domStyle,\n          getTooltipActual: () => this._tooltipActual,\n          getTooltipAttributes: () => this._attributes\n        },\n        [tooltipSpec.className],\n        this.id\n      );\n    }\n  }\n\n  protected _removeTooltip() {\n    this.model?.release();\n    this._container = null;\n  }\n\n  protected _updateTooltip(visible: boolean, params: TooltipHandlerParams, actualTooltip: IToolTipActual) {\n    if (!visible || !this.model) {\n      this.setVisibility(visible);\n    } else {\n      if (!params.changePositionOnly) {\n        this._tooltipActual = actualTooltip;\n        this._initStyle();\n\n        this.model.initAll();\n        this.model.setStyle();\n        this.model.setContent();\n      }\n      this.setVisibility(visible);\n\n      // 位置\n      let { x = 0, y = 0 } = actualTooltip.position ?? {};\n      const el = this.model.product;\n\n      if (el) {\n        if (this._cacheViewSpec?.updateElement) {\n          this._cacheViewSpec.updateElement(el, actualTooltip, params);\n\n          // 重新计算 tooltip 位置\n          const position = this._getActualTooltipPosition(actualTooltip, params, {\n            width: el.offsetWidth,\n            height: el.offsetHeight\n          });\n          x = position.x;\n          y = position.y;\n        }\n\n        // https://stackoverflow.com/questions/22111256/translate3d-vs-translate-performance\n        el.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n      }\n    }\n  }\n\n  protected _initStyle() {\n    this._domStyle = getDomStyles(this._attributes);\n  }\n\n  protected _getParentElement(spec: ITooltipSpec): HTMLElement {\n    return this._container ?? super._getParentElement(spec);\n  }\n\n  isTooltipShown() {\n    return this.getVisibility();\n  }\n\n  reInit() {\n    super.reInit();\n    this._initStyle();\n  }\n}\n"]}