{"version":3,"sources":["../src/animate/Ticker/default-ticker.ts"],"names":[],"mappings":"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","file":"default-ticker.js","sourcesContent":["import { Logger } from '@visactor/vutils';\nimport type { ITickHandler, ITickerHandlerStatic, ITimeline, ITicker } from '../../interface';\nimport { application } from '../../application';\nexport class ManualTickHandler implements ITickHandler {\n  protected timerId: number;\n  protected time: number = 0;\n\n  static Avaliable(): boolean {\n    return true;\n  }\n\n  avaliable(): boolean {\n    return ManualTickHandler.Avaliable();\n  }\n\n  tick(interval: number, cb: (handler: ITickHandler, params?: { once: boolean }) => void): void {\n    this.time = Math.max(0, interval + this.time);\n    cb(this, { once: true });\n  }\n\n  tickTo(t: number, cb: (handler: ITickHandler, params?: { once: boolean }) => void): void {\n    this.time = Math.max(0, t);\n    cb(this, { once: true });\n  }\n\n  release() {\n    if (this.timerId > 0) {\n      // clearTimeout(this.timerId);\n      this.timerId = -1;\n    }\n  }\n\n  getTime() {\n    return this.time;\n  }\n}\n\nexport class TimeOutTickHandler implements ITickHandler {\n  protected timerId: number;\n\n  static Avaliable(): boolean {\n    return true;\n  }\n\n  avaliable(): boolean {\n    return TimeOutTickHandler.Avaliable();\n  }\n\n  tick(interval: number, cb: (handler: ITickHandler) => void): void {\n    this.timerId = setTimeout(() => {\n      cb(this);\n    }, interval) as unknown as number;\n  }\n\n  release() {\n    if (this.timerId > 0) {\n      clearTimeout(this.timerId);\n      this.timerId = -1;\n    }\n  }\n  getTime() {\n    return Date.now();\n  }\n}\n\nexport class RAFTickHandler implements ITickHandler {\n  protected released: boolean;\n\n  static Avaliable(): boolean {\n    return !!application.global.getRequestAnimationFrame();\n  }\n  avaliable(): boolean {\n    return RAFTickHandler.Avaliable();\n  }\n\n  tick(interval: number, cb: (handler: ITickHandler) => void): void {\n    const raf = application.global.getRequestAnimationFrame();\n    raf(() => {\n      if (this.released) {\n        return;\n      }\n      cb(this);\n    });\n  }\n\n  release() {\n    this.released = true;\n  }\n  getTime() {\n    return Date.now();\n  }\n}\n\ntype TickerMode = 'raf' | 'timeout' | 'manual';\n\nenum STATUS {\n  INITIAL = 0, // initial表示初始状态\n  RUNNING = 1, // running表示正在执行\n  PAUSE = 2 // PULSE表示tick还是继续，只是不执行函数了\n}\n\nexport class DefaultTicker implements ITicker {\n  protected interval: number;\n  protected tickerHandler: ITickHandler;\n  protected _mode: TickerMode;\n  protected status: STATUS;\n  protected lastFrameTime: number;\n  protected tickCounts: number;\n  protected timelines: ITimeline[];\n  autoStop: boolean;\n\n  set mode(m: TickerMode) {\n    if (this._mode === m) {\n      return;\n    }\n    this._mode = m;\n    this.setupTickHandler();\n  }\n  get mode(): TickerMode {\n    return this._mode;\n  }\n\n  constructor(timelines: ITimeline[] = []) {\n    this.init();\n    this.lastFrameTime = -1;\n    this.tickCounts = 0;\n    this.timelines = timelines;\n    this.autoStop = true;\n  }\n\n  init() {\n    this.interval = NaN;\n    this.status = STATUS.INITIAL;\n    application.global.hooks.onSetEnv.tap('default-ticker', () => {\n      this.initHandler();\n    });\n    if (application.global.env) {\n      this.initHandler();\n    }\n  }\n\n  addTimeline(timeline: ITimeline) {\n    this.timelines.push(timeline);\n  }\n  remTimeline(timeline: ITimeline) {\n    this.timelines = this.timelines.filter(t => t !== timeline);\n  }\n\n  protected initHandler(): ITickHandler | null {\n    if (this._mode) {\n      return null;\n    }\n    const ticks: { mode: TickerMode; cons: ITickerHandlerStatic }[] = [\n      { mode: 'raf', cons: RAFTickHandler },\n      { mode: 'timeout', cons: TimeOutTickHandler },\n      { mode: 'manual', cons: ManualTickHandler }\n    ];\n    for (let i = 0; i < ticks.length; i++) {\n      if (ticks[i].cons.Avaliable()) {\n        this.mode = ticks[i].mode;\n        break;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 设置tickHandler\n   * @returns 返回true表示设置成功，false表示设置失败\n   */\n  protected setupTickHandler(): boolean {\n    let handler: ITickHandler;\n    // 创建下一个tickHandler\n    switch (this._mode) {\n      case 'raf':\n        handler = new RAFTickHandler();\n        break;\n      case 'timeout':\n        handler = new TimeOutTickHandler();\n        break;\n      case 'manual':\n        handler = new ManualTickHandler();\n        break;\n      default:\n        Logger.getInstance().warn('非法的计时器模式');\n        handler = new RAFTickHandler();\n        break;\n    }\n    if (!handler.avaliable()) {\n      return false;\n    }\n\n    // 销毁上一个tickerHandler\n    if (this.tickerHandler) {\n      this.tickerHandler.release();\n    }\n    this.tickerHandler = handler;\n    return true;\n  }\n\n  setInterval(interval: number) {\n    this.interval = interval;\n  }\n  getInterval(): number {\n    return this.interval;\n  }\n\n  setFPS(fps: number): void {\n    this.setInterval(1000 / fps);\n  }\n  getFPS(): number {\n    return 1000 / this.interval;\n  }\n  tick(interval: number): void {\n    this.tickerHandler.tick(interval, (handler: ITickHandler) => {\n      this.handleTick(handler, { once: true });\n    });\n  }\n  tickTo(t: number): void {\n    if (!this.tickerHandler.tickTo) {\n      return;\n    }\n    this.tickerHandler.tickTo(t, (handler: ITickHandler) => {\n      this.handleTick(handler, { once: true });\n    });\n  }\n  pause(): boolean {\n    if (this.status === STATUS.INITIAL) {\n      return false;\n    }\n    this.status = STATUS.PAUSE;\n    return true;\n  }\n  resume(): boolean {\n    if (this.status === STATUS.INITIAL) {\n      return false;\n    }\n    this.status = STATUS.RUNNING;\n    return true;\n  }\n\n  ifCanStop(): boolean {\n    if (this.autoStop) {\n      if (!this.timelines.length) {\n        return true;\n      }\n      if (this.timelines.reduce((a, b) => a + b.animateCount, 0) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  start(force: boolean = false): boolean {\n    if (this.status === STATUS.RUNNING) {\n      return false;\n    }\n    if (!this.tickerHandler) {\n      return false;\n    }\n    // 如果不需要start，那就不start\n    if (!force) {\n      // 暂停状态不执行\n      if (this.status === STATUS.PAUSE) {\n        return false;\n      }\n      if (!this.timelines.length) {\n        return false;\n      }\n      if (this.timelines.reduce((a, b) => a + b.animateCount, 0) === 0) {\n        return false;\n      }\n    }\n    this.status = STATUS.RUNNING;\n    this.tickerHandler.tick(0, this.handleTick);\n    return true;\n  }\n  stop(): void {\n    // 重新设置tickHandler\n    this.status = STATUS.INITIAL;\n    this.setupTickHandler();\n    this.lastFrameTime = -1;\n  }\n\n  protected handleTick = (handler: ITickHandler, params?: { once?: boolean }) => {\n    const { once = false } = params ?? {};\n    // 尝试停止\n    if (this.ifCanStop()) {\n      this.stop();\n      return;\n    }\n    this._handlerTick(handler);\n    if (!once) {\n      handler.tick(this.interval, this.handleTick);\n    }\n  };\n\n  protected _handlerTick = (handler: ITickHandler) => {\n    // 具体执行函数\n    const tickerHandler = this.tickerHandler;\n    const time = tickerHandler.getTime();\n    // 上一帧经过的时间\n    let delta = 0;\n    if (this.lastFrameTime >= 0) {\n      delta = time - this.lastFrameTime;\n    }\n    this.lastFrameTime = time;\n\n    if (this.status !== STATUS.RUNNING) {\n      return;\n    }\n    this.tickCounts++;\n\n    this.timelines.forEach(t => {\n      t.tick(delta);\n    });\n  };\n}\n\nexport class ManualTicker extends DefaultTicker implements ITicker {\n  protected declare interval: number;\n  protected declare tickerHandler: ITickHandler;\n  protected declare _mode: TickerMode;\n  protected declare status: STATUS;\n  protected declare lastFrameTime: number;\n  protected declare tickCounts: number;\n  protected declare timelines: ITimeline[];\n  declare autoStop: boolean;\n\n  set mode(m: TickerMode) {\n    m = 'manual';\n    this.setupTickHandler();\n  }\n  get mode(): TickerMode {\n    return this._mode;\n  }\n\n  protected initHandler(): ITickHandler | null {\n    this.mode = 'manual';\n    return null;\n  }\n\n  /**\n   * 设置tickHandler\n   * @returns 返回true表示设置成功，false表示设置失败\n   */\n  protected setupTickHandler(): boolean {\n    const handler: ITickHandler = new ManualTickHandler();\n    this._mode = 'manual';\n\n    // 销毁上一个tickerHandler\n    if (this.tickerHandler) {\n      this.tickerHandler.release();\n    }\n    this.tickerHandler = handler;\n    return true;\n  }\n\n  tickAt(time: number) {\n    this.tickerHandler.tick(time - this.lastFrameTime, (handler: ITickHandler) => {\n      this.handleTick(handler, { once: true });\n    });\n  }\n\n  ifCanStop(): boolean {\n    return false;\n  }\n}\n"]}