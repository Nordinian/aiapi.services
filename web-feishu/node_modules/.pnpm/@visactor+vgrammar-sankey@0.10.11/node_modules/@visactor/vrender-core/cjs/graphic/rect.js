"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.createRect = exports.Rect = void 0;

const graphic_1 = require("./graphic"), custom_path2d_1 = require("../common/custom-path2d"), utils_1 = require("../common/utils"), theme_1 = require("./theme"), application_1 = require("../application"), constants_1 = require("./constants"), rect_utils_1 = require("../common/rect-utils"), RECT_UPDATE_TAG_KEY = [ "width", "x1", "y1", "height", "cornerRadius", ...graphic_1.GRAPHIC_UPDATE_TAG_KEY ];

class Rect extends graphic_1.Graphic {
    constructor(params) {
        super(params), this.type = "rect", this.numberType = constants_1.RECT_NUMBER_TYPE;
    }
    isValid() {
        return super.isValid() && this._isValid();
    }
    _isValid() {
        return !0;
    }
    doUpdateAABBBounds() {
        const rectTheme = (0, theme_1.getTheme)(this).rect;
        this._AABBBounds.setValue(1 / 0, 1 / 0, -1 / 0, -1 / 0);
        const attribute = this.attribute, bounds = application_1.application.graphicService.updateRectAABBBounds(attribute, (0, 
        theme_1.getTheme)(this).rect, this._AABBBounds, this), {boundsPadding: boundsPadding = rectTheme.boundsPadding} = attribute, paddingArray = (0, 
        utils_1.parsePadding)(boundsPadding);
        return paddingArray && bounds.expand(paddingArray), this.clearUpdateBoundTag(), 
        bounds;
    }
    tryUpdateOBBBounds() {
        throw new Error("暂不支持");
    }
    getDefaultAttribute(name) {
        return (0, theme_1.getTheme)(this).rect[name];
    }
    needUpdateTags(keys) {
        return super.needUpdateTags(keys, RECT_UPDATE_TAG_KEY);
    }
    needUpdateTag(key) {
        return super.needUpdateTag(key, RECT_UPDATE_TAG_KEY);
    }
    toCustomPath() {
        const attribute = this.attribute, {x: x, y: y, width: width, height: height} = (0, 
        rect_utils_1.normalizeRectAttributes)(attribute), path = new custom_path2d_1.CustomPath2D;
        return path.moveTo(x, y), path.rect(x, y, width, height), path;
    }
    clone() {
        return new Rect(Object.assign({}, this.attribute));
    }
    getNoWorkAnimateAttr() {
        return Rect.NOWORK_ANIMATE_ATTR;
    }
}

function createRect(attributes) {
    return new Rect(attributes);
}

exports.Rect = Rect, Rect.NOWORK_ANIMATE_ATTR = graphic_1.NOWORK_ANIMATE_ATTR, exports.createRect = createRect;
//# sourceMappingURL=rect.js.map
