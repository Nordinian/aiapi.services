{"version":3,"sources":["../src/picker/contributions/canvas-picker/polygon-picker.ts"],"names":[],"mappings":"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","file":"polygon-picker.js","sourcesContent":["import {\n  inject,\n  injectable,\n  getTheme,\n  PolygonRender,\n  POLYGON_NUMBER_TYPE,\n  getScaledStroke\n} from '@visactor/vrender-core';\nimport type { IPoint } from '@visactor/vutils';\nimport type {\n  IContext2d,\n  IMarkAttribute,\n  IGraphicAttribute,\n  IThemeAttribute,\n  IPolygon,\n  IGraphicPicker,\n  IGraphicRender,\n  IPickParams\n} from '@visactor/vrender-core';\n\n@injectable()\nexport class DefaultCanvasPolygonPicker implements IGraphicPicker {\n  type: string = 'polygon';\n  numberType: number = POLYGON_NUMBER_TYPE;\n\n  constructor(@inject(PolygonRender) public readonly canvasRenderer: IGraphicRender) {}\n\n  contains(polygon: IPolygon, point: IPoint, params?: IPickParams): boolean {\n    if (!polygon.AABBBounds.contains(point.x, point.y)) {\n      return false;\n    }\n\n    if (polygon.attribute.pickMode === 'imprecise') {\n      return true;\n    }\n\n    const { pickContext } = params ?? {};\n    if (!pickContext) {\n      return false;\n    }\n\n    // const polygonAttribute = graphicService.themeService.getCurrentTheme().pathAttribute;\n    const polygonAttribute = getTheme(polygon).polygon;\n    let { x = polygonAttribute.x, y = polygonAttribute.y } = polygon.attribute;\n\n    pickContext.highPerformanceSave();\n    if (!polygon.transMatrix.onlyTranslate()) {\n      // 性能较差\n      x = 0;\n      y = 0;\n      pickContext.transformFromMatrix(polygon.transMatrix, true);\n    } else {\n      const point = polygon.getOffsetXY(polygonAttribute);\n      x += point.x;\n      y += point.y;\n      // 当前context有rotate/scale，重置matrix\n      pickContext.setTransformForCurrent();\n    }\n\n    // 详细形状判断\n    let picked = false;\n    this.canvasRenderer.drawShape(\n      polygon,\n      pickContext,\n      x,\n      y,\n      {} as any,\n      null,\n      (\n        context: IContext2d,\n        pathAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        picked = context.isPointInPath(point.x, point.y);\n        return picked;\n      },\n      (\n        context: IContext2d,\n        pathAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n        themeAttribute: IThemeAttribute\n      ) => {\n        // 选中后面就不需要再走逻辑了\n        if (picked) {\n          return true;\n        }\n        const lineWidth = pathAttribute.lineWidth || themeAttribute.lineWidth;\n        const pickStrokeBuffer = pathAttribute.pickStrokeBuffer || themeAttribute.pickStrokeBuffer;\n        pickContext.lineWidth = getScaledStroke(pickContext, lineWidth + pickStrokeBuffer, pickContext.dpr);\n        picked = context.isPointInStroke(point.x, point.y);\n        return picked;\n      }\n    );\n\n    pickContext.highPerformanceRestore();\n\n    return picked;\n  }\n}\n"]}