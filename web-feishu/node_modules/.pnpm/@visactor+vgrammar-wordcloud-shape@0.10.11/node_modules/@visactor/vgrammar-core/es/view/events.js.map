{"version":3,"sources":["../src/view/events.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAErD,OAAO,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAQrE,MAAM,UAAU,qBAAqB,CAAC,MAAW;IAC/C,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IAE7D,MAAM,MAAM,GAAG,CAAC,GAAQ,EAAE,IAAc,EAAE,EAAE;QAC1C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACf,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gBACnB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;oBAC5C,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;oBAChB,OAAO,GAAG,CAAC;gBACb,CAAC,EAAE,EAAE,CAAC,CAAC;aACR;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;IACpD,MAAM,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC,CAAC;IAE/D,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,WAA6B,EAAE,IAAY;IACjE,MAAM,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC;IACjC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IAC5B,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;IAExB,IAAI,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,EAAE;QACvC,OAAO,KAAK,CAAC;KACd;IAED,IAAI,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,EAAE;QACvC,OAAO,IAAI,CAAC;KACb;IAED,IAAI,OAAO,EAAE;QACX,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;KACtB;IAED,IAAI,KAAK,EAAE;QACT,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACrB;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,WAA6B,EAAE,GAAW,EAAE,IAAY;IAC7E,MAAM,IAAI,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAG,GAAG,CAAC,CAAC;IAEhC,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;QACrD,OAAO,KAAK,CAAC;KACd;IAED,OAAO,IAAI,CAAC;AACd,CAAC","file":"events.js","sourcesContent":["import { isArray, isObject } from '@visactor/vutils';\nimport type { IViewEventConfig } from '../types';\nimport { EVENT_SOURCE_VIEW, EVENT_SOURCE_WINDOW } from './constants';\n\n/**\n * 初始化事件配置，将所有配置转化为 {[key: string]: boolean } 格式。\n * Initialize event handling configuration.\n * @param {object} config - The configuration settings.\n * @return {object}\n */\nexport function initializeEventConfig(config: any) {\n  const eventsConfig = Object.assign({ defaults: {} }, config);\n\n  const unpack = (obj: any, keys: string[]) => {\n    keys.forEach(k => {\n      if (isArray(obj[k])) {\n        obj[k] = obj[k].reduce((set: any, key: any) => {\n          set[key] = true;\n          return set;\n        }, {});\n      }\n    });\n  };\n\n  unpack(eventsConfig.defaults, ['prevent', 'allow']);\n  unpack(eventsConfig, [EVENT_SOURCE_VIEW, EVENT_SOURCE_WINDOW]);\n\n  return eventsConfig;\n}\n\nexport function prevent(eventConfig: IViewEventConfig, type: string) {\n  const def = eventConfig.defaults;\n  const prevent = def.prevent;\n  const allow = def.allow;\n\n  if (prevent === false || allow === true) {\n    return false;\n  }\n\n  if (prevent === true || allow === false) {\n    return true;\n  }\n\n  if (prevent) {\n    return prevent[type];\n  }\n\n  if (allow) {\n    return !allow[type];\n  }\n\n  return false;\n}\n\nexport function permit(eventConfig: IViewEventConfig, key: string, type: string) {\n  const rule = eventConfig?.[key];\n\n  if (rule === false || (isObject(rule) && !rule[type])) {\n    return false;\n  }\n\n  return true;\n}\n"]}