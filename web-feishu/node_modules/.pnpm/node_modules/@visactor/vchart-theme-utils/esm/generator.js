import { getTokenValue } from "./utils";

export const generateDataScheme = (mode, tokenMap, baseDataScheme, chartContainer) => tokenMap.map(((item, i) => {
    const {scheme: scheme} = baseDataScheme[i];
    return Object.assign(Object.assign({}, item), {
        scheme: item.scheme.map(((token, j) => getTokenValue("object" == typeof token ? token[mode] : token, null == scheme ? void 0 : scheme[j], chartContainer)))
    });
}));

export const generatePalette = (mode, tokenMap, basePalette, chartContainer) => {
    const newPalette = {};
    return Object.keys(tokenMap).forEach((key => {
        const token = "object" == typeof tokenMap[key] ? tokenMap[key][mode] : tokenMap[key];
        newPalette[key] = getTokenValue(token, basePalette[key], chartContainer);
    })), newPalette;
};