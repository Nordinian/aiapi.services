{"version":3,"sources":["../src/canvas/contributions/taro/context.ts"],"names":[],"mappings":"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","file":"context.js","sourcesContent":["// 参考konva\nimport { injectable, createColor, getScaledStroke, getContextFont } from '@visactor/vrender-core';\nimport type {\n  ICommonStyleParams,\n  IContext2d,\n  ISetCommonStyleParams,\n  ISetStrokeStyleParams,\n  IStrokeStyleParams,\n  ITextStyleParams,\n  IConicalGradientData,\n  EnvType\n} from '@visactor/vrender-core';\nimport { BrowserContext2d } from '../browser';\n\n// 考虑taro-feishu等环境\ninterface ITTContext {\n  setFillStyle: (c: string | CanvasGradient) => void;\n  setStrokeStyle: (c: string | CanvasGradient) => void;\n  setGlobalAlpha: (alpha: number) => void;\n  setLineWidth: (width: number) => void;\n  setMiterLimit: (limit: number) => void;\n  setLineJoin: (lineJoin: string) => void;\n  setLineCap: (lineCap: string) => void;\n  setTextAlign: (align: string) => void;\n  setTextBaseline: (baseline: string) => void;\n  setLineDash: (lineDash: number[]) => void;\n  setFontSize: ((size: number) => void) & ((fontSize: number) => void);\n  font: string;\n}\n\n@injectable()\nexport class TaroContext2d extends BrowserContext2d implements IContext2d {\n  static env: EnvType = 'taro';\n\n  declare nativeContext: ITTContext;\n\n  declare _globalAlpha: number;\n\n  // feishu小程序无法正常获取到globalAlpha\n  get globalAlpha(): number {\n    return this._globalAlpha;\n  }\n  set globalAlpha(ga: number) {\n    this.nativeContext.setGlobalAlpha(ga);\n    this._globalAlpha = ga;\n  }\n\n  draw() {\n    const _context = this.nativeContext as any;\n    _context.draw();\n  }\n\n  strokeText(text: string, x: number, y: number) {\n    return;\n  }\n\n  _setCommonStyle(\n    params: ISetCommonStyleParams,\n    attribute: ICommonStyleParams,\n    // 用于渐变色\n    offsetX: number,\n    offsetY: number,\n    defaultParams?: ICommonStyleParams\n  ) {\n    const _context = this.nativeContext;\n    if (!defaultParams) {\n      defaultParams = this.fillAttributes;\n    }\n    const {\n      fillOpacity = defaultParams.fillOpacity,\n      opacity = defaultParams.opacity,\n      fill = defaultParams.fill\n    } = attribute;\n    if (fillOpacity > 1e-12 && opacity > 1e-12) {\n      _context.setGlobalAlpha(fillOpacity * opacity);\n      _context.setFillStyle(createColor(this, fill, params, offsetX, offsetY));\n      // todo 小程序\n    } else {\n      // _context.setGlobalAlpha(fillOpacity * opacity);\n    }\n  }\n\n  _setStrokeStyle(\n    params: ISetStrokeStyleParams,\n    attribute: IStrokeStyleParams,\n    // 用于渐变色\n    offsetX: number,\n    offsetY: number,\n    defaultParams?: IStrokeStyleParams\n  ) {\n    const _context = this.nativeContext;\n    if (!defaultParams) {\n      defaultParams = this.strokeAttributes;\n    }\n    const { strokeOpacity = defaultParams.strokeOpacity, opacity = defaultParams.opacity } = attribute;\n    if (strokeOpacity > 1e-12 && opacity > 1e-12) {\n      const {\n        lineWidth = defaultParams.lineWidth,\n        stroke = defaultParams.stroke,\n        lineJoin = defaultParams.lineJoin,\n        lineDash = defaultParams.lineDash,\n        lineCap = defaultParams.lineCap,\n        miterLimit = defaultParams.miterLimit\n      } = attribute;\n      _context.setGlobalAlpha(strokeOpacity * opacity);\n      _context.setLineWidth(getScaledStroke(this, lineWidth, this.dpr));\n      _context.setStrokeStyle(createColor(this, stroke as any, params, offsetX, offsetY));\n      _context.setLineJoin(lineJoin);\n      _context.setLineDash(lineDash);\n      _context.setLineCap(lineCap);\n      _context.setMiterLimit(miterLimit);\n    }\n  }\n  setTextStyleWithoutAlignBaseline(params: Partial<ITextStyleParams>, defaultParams?: ITextStyleParams) {\n    const _context = this.nativeContext;\n    if (!defaultParams) {\n      defaultParams = this.textAttributes;\n    }\n    if (params.font) {\n      _context.font = params.font;\n    } else {\n      _context.font = getContextFont(params, defaultParams);\n    }\n    _context.setFontSize(params.fontSize ?? defaultParams.fontSize);\n    // // 这里不使用defaultParams\n    // _context.textAlign = params.textAlign || 'left';\n    // _context.textBaseline = params.textBaseline || 'alphabetic';\n  }\n  setTextStyle(params: Partial<ITextStyleParams>, defaultParams?: ITextStyleParams) {\n    const _context = this.nativeContext;\n    if (!defaultParams) {\n      defaultParams = this.textAttributes;\n    }\n    if (params.font) {\n      _context.font = params.font;\n    } else {\n      _context.font = getContextFont(params, defaultParams);\n    }\n    _context.setTextAlign(params.textAlign ?? defaultParams.textAlign);\n    _context.setTextBaseline(params.textBaseline ?? defaultParams.textBaseline);\n  }\n  createConicGradient(x: number, y: number, startAngle: number, endAngle: number): IConicalGradientData {\n    return null;\n  }\n\n  createPattern(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, repetition: string): CanvasPattern {\n    return null;\n  }\n}\n"]}