{"version":3,"sources":["../src/env/contributions/lynx-contribution.ts"],"names":[],"mappings":"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","file":"lynx-contribution.js","sourcesContent":["import { injectable, BaseEnvContribution, rafBasedSto } from '@visactor/vrender-core';\n// import { loadFeishuContributions } from '../../../kits';\nimport type {\n  ICanvasLike,\n  EnvType,\n  ICreateCanvasParams,\n  IEnvContribution,\n  IGlobal,\n  ILynxCanvas\n} from '@visactor/vrender-core';\n\ndeclare const lynx: {\n  getSystemInfoSync: () => { pixelRatio: number };\n  createCanvas: (id: string) => any;\n  createCanvasNG: (id: string) => any;\n  createImage: (id: string) => any;\n};\ndeclare const SystemInfo: {\n  pixelRatio: number;\n};\n\nlet ng = false;\ntry {\n  ng = !!lynx.createCanvasNG;\n} catch (err) {\n  // do nothing\n}\n\n// 飞书小程序canvas的wrap\nfunction makeUpCanvas(\n  domref: any,\n  canvasIdLists: string[],\n  canvasMap: Map<string, ILynxCanvas>,\n  freeCanvasIdx: number,\n  freeCanvasList: ILynxCanvas[]\n) {\n  const dpr = SystemInfo.pixelRatio;\n\n  canvasIdLists.forEach((id, i) => {\n    const _canvas = ng ? lynx.createCanvasNG(id) : lynx.createCanvas(id);\n    _canvas.width = domref.width * dpr;\n    _canvas.height = domref.height * dpr;\n    ng && _canvas.attachToCanvasView(id);\n\n    const ctx = _canvas.getContext('2d');\n    ctx.draw = (a: any, b: any) => {\n      b();\n    };\n    // TODO: 这里是一个临时方案，向 ctx 内部构造一个 canvas，传递宽高\n    // ctx.canvas = {\n    //   width: domref.width * dpr,\n    //   height: domref.height * dpr\n    // };\n\n    const canvas = {\n      width: domref.width * dpr,\n      height: domref.height * dpr,\n      offsetWidth: domref.width,\n      offsetHeight: domref.height,\n      id: id ?? '',\n      getContext: () => ctx,\n      // 构造 getBoundingClientRect 方法\n      getBoundingClientRect: () => ({\n        height: domref.height,\n        width: domref.width\n      }),\n      nativeCanvas: _canvas\n    };\n\n    canvasMap.set(id, canvas);\n    if (i >= freeCanvasIdx) {\n      freeCanvasList.push(canvas);\n    }\n  });\n}\n\nexport function createImageElement(src: string, isSvg: boolean = false): Promise<HTMLImageElement> {\n  if (isSvg) {\n    return Promise.reject();\n  }\n  const img = lynx.createImage(src);\n  // if (img.complete) {\n  //   return Promise.resolve(img);\n  // }\n  const promise: Promise<HTMLImageElement> = new Promise((resolve, reject) => {\n    img.onload = () => {\n      resolve(img);\n    };\n    img.onerror = () => {\n      reject(new Error('加载失败'));\n    };\n  });\n  return promise;\n}\n\n@injectable()\nexport class LynxEnvContribution extends BaseEnvContribution implements IEnvContribution {\n  type: EnvType = 'lynx';\n  supportEvent: boolean = true;\n  // 所有添加进来的canvas\n  canvasMap: Map<string, ILynxCanvas> = new Map();\n  // 所有可用的canvasList\n  freeCanvasList: ILynxCanvas[] = [];\n  canvasIdx: number = 0;\n\n  constructor() {\n    super();\n    this.supportsTouchEvents = true;\n    try {\n      this.supportsPointerEvents = !!globalThis.PointerEvent;\n      this.supportsMouseEvents = !!globalThis.MouseEvent;\n    } catch (err) {\n      this.supportsPointerEvents = false;\n      this.supportsMouseEvents = false;\n    }\n    this.applyStyles = true;\n  }\n\n  // TODO：VGrammar在小程序环境会重复调用setEnv传入canvas，所以每次configure并不会释放\n  // 这里等待后续和VGrammar沟通\n  configure(service: IGlobal, params: { domref: any; canvasIdLists: string[]; freeCanvasIdx: number }) {\n    if (service.env === this.type) {\n      service.setActiveEnvContribution(this);\n      makeUpCanvas(params.domref, params.canvasIdLists, this.canvasMap, params.freeCanvasIdx, this.freeCanvasList);\n\n      // loadFeishuContributions();\n    }\n  }\n  /**\n   * 获取动态canvas的数量，offscreenCanvas或者framebuffer\n   */\n  getDynamicCanvasCount(): number {\n    return this.freeCanvasList.length;\n  }\n\n  /**\n   * 获取静态canvas的数量，纯粹canvas\n   */\n  getStaticCanvasCount(): number {\n    return 9999;\n  }\n\n  loadImage(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }> {\n    const imagePromise = createImageElement(url, false);\n    return imagePromise\n      .then((img: HTMLImageElement) => {\n        return {\n          data: img,\n          loadState: 'success' as const\n        };\n      })\n      .catch(() => {\n        return {\n          data: null,\n          loadState: 'fail'\n        };\n      });\n  }\n\n  loadSvg(url: string): Promise<{\n    loadState: 'success' | 'fail';\n    data: HTMLImageElement | ImageData | null;\n  }> {\n    // 飞书小组件不支持DOMParser和URL.createObjectURL，无法解析svg字符串，可以通过url使用svg资源\n    return Promise.reject();\n  }\n\n  createCanvas(params: ICreateCanvasParams): ILynxCanvas {\n    const result = this.freeCanvasList[this.canvasIdx] || this.freeCanvasList[this.freeCanvasList.length - 1];\n    this.canvasIdx++;\n    return result;\n  }\n\n  createOffscreenCanvas(params: ICreateCanvasParams) {\n    return;\n  }\n\n  releaseCanvas(canvas: ICanvasLike | string) {\n    return;\n  }\n\n  getDevicePixelRatio(): number {\n    return SystemInfo.pixelRatio;\n  }\n\n  getRequestAnimationFrame(): (callback: FrameRequestCallback) => number {\n    // return requestAnimationFrame;\n\n    // 飞书小组件，在云文档浏览器环境中，没有requestAnimationFrame\n    // 但是在小组件工作台环境和模拟器中正常\n    // 反馈飞书修改，目前先使用setTimeout模拟，进行测试，飞书修复后替换回requestAnimationFrame\n    // return function (callback: FrameRequestCallback) {\n    //   return setTimeout(callback, 1000 / 60, true);\n    // } as any;\n    return function (callback: FrameRequestCallback) {\n      return rafBasedSto.call(callback);\n    } as any;\n  }\n\n  getCancelAnimationFrame(): (h: number) => void {\n    return (h: number) => {\n      rafBasedSto.clear(h);\n    };\n  }\n\n  mapToCanvasPoint(event: any) {\n    if (event?.type?.startsWith('mouse')) {\n      return event;\n    }\n    return event;\n  }\n\n  addEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions | undefined\n  ): void;\n  addEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return null;\n  }\n\n  removeEventListener<K extends keyof DocumentEventMap>(\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions | undefined\n  ): void;\n  removeEventListener(type: unknown, listener: unknown, options?: unknown): void {\n    return null;\n  }\n\n  dispatchEvent(event: any): boolean {\n    return null;\n  }\n\n  // 只能索引canvas\n  getElementById(str: string): any | null {\n    return this.canvasMap.get(str);\n  }\n\n  getRootElement(): HTMLElement | null {\n    return null;\n  }\n\n  getDocument(): Document | null {\n    return null;\n  }\n\n  release(...params: any): void {\n    return;\n  }\n}\n"]}