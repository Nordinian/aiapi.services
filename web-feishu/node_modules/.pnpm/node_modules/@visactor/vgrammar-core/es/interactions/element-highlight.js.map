{"version":3,"sources":["../src/interactions/element-highlight.ts"],"names":[],"mappings":"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","file":"element-highlight.js","sourcesContent":["import { InteractionStateEnum } from '../graph/enums';\nimport type {\n  ElementHighlightOptions,\n  IElement,\n  IGlyphElement,\n  IMark,\n  IToggleStateMixin,\n  IView,\n  InteractionEvent\n} from '../types';\nimport { BaseInteraction } from './base';\nimport { groupMarksByState } from './utils';\n\nexport interface ElementHighlight extends IToggleStateMixin, BaseInteraction<ElementHighlightOptions> {}\n\nexport class ElementHighlight extends BaseInteraction<ElementHighlightOptions> {\n  static type: string = 'element-highlight';\n  type: string = ElementHighlight.type;\n\n  static defaultOptions: ElementHighlightOptions = {\n    highlightState: InteractionStateEnum.highlight,\n    blurState: InteractionStateEnum.blur,\n    trigger: 'pointerover',\n    resetTrigger: 'pointerout'\n  };\n  options: ElementHighlightOptions;\n  protected _marks?: IMark[];\n  protected _stateMarks: Record<string, IMark[]>;\n  protected _lastElement?: IElement;\n  protected _statedElements?: (IElement | IGlyphElement)[];\n\n  constructor(view: IView, options?: ElementHighlightOptions) {\n    super(view, options);\n    this.options = Object.assign({}, ElementHighlight.defaultOptions, options);\n\n    this._marks = view.getMarksBySelector(this.options.selector);\n    this._stateMarks = groupMarksByState(this._marks, [this.options.highlightState, this.options.blurState]);\n  }\n\n  protected getEvents() {\n    return [\n      {\n        type: this.options.trigger,\n        handler: this.handleStart\n      },\n      { type: this.options.resetTrigger, handler: this.handleReset }\n    ];\n  }\n\n  clearPrevElements() {\n    const { highlightState, blurState } = this.options;\n\n    if (this._lastElement) {\n      this.clearAllStates(highlightState, blurState);\n\n      this.dispatchEvent('reset', { elements: [this._lastElement], options: this.options });\n\n      this._lastElement = null;\n    }\n  }\n\n  handleStart = (e: InteractionEvent) => {\n    if (e.element && this._marks && this._marks.includes(e.element.mark)) {\n      const { highlightState, blurState } = this.options;\n\n      if (this._lastElement === e.element) {\n        return;\n      }\n      this._statedElements = [e.element];\n\n      this.updateStates(highlightState, blurState);\n\n      this._lastElement = e.element;\n\n      this.dispatchEvent('start', { elements: [e.element], options: this.options });\n    } else if (this._lastElement) {\n      this.clearPrevElements();\n    }\n  };\n\n  handleReset = (e: InteractionEvent) => {\n    const hasActiveElement = e.element && this._marks && this._marks.includes(e.element.mark);\n\n    if (hasActiveElement) {\n      this.clearPrevElements();\n    }\n  };\n}\n"]}