{"version":3,"sources":["../src/render/contributions/render/symbol-render.ts"],"names":[],"mappings":"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","file":"symbol-render.js","sourcesContent":["import { mat4Allocate } from '../../../allocator/matrix-allocate';\nimport { inject, injectable, named } from '../../../common/inversify-lite';\n// eslint-disable-next-line\nimport { ContributionProvider } from '../../../common/contribution-provider';\nimport { getTheme } from '../../../graphic/theme';\nimport { SYMBOL_NUMBER_TYPE } from '../../../graphic/constants';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  ISymbol,\n  IThemeAttribute,\n  ISymbolRenderContribution,\n  IDrawContext,\n  IRenderService,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  IContributionProvider\n} from '../../../interface';\nimport type {} from '../../render-service';\nimport { BaseRender } from './base-render';\nimport { BaseRenderContributionTime } from '../../../common/enums';\nimport { SymbolRenderContribution } from './contributions/constants';\nimport { drawPathProxy, fillVisible, runFill, runStroke, strokeVisible } from './utils';\nimport { isArray } from '@visactor/vutils';\nimport {\n  defaultSymbolBackgroundRenderContribution,\n  defaultSymbolRenderContribution,\n  defaultSymbolTextureRenderContribution\n} from './contributions';\n\n@injectable()\nexport class DefaultCanvasSymbolRender extends BaseRender<ISymbol> implements IGraphicRender {\n  type: 'symbol';\n  numberType: number = SYMBOL_NUMBER_TYPE;\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(SymbolRenderContribution)\n    protected readonly symbolRenderContribitions: IContributionProvider<ISymbolRenderContribution>\n  ) {\n    super();\n    this.builtinContributions = [\n      defaultSymbolRenderContribution,\n      defaultSymbolBackgroundRenderContribution,\n      defaultSymbolTextureRenderContribution\n    ];\n    this.init(symbolRenderContribitions);\n  }\n\n  drawShape(\n    symbol: ISymbol,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    // const symbolAttribute = graphicService.themeService.getCurrentTheme().symbolAttribute;\n    const symbolAttribute = getTheme(symbol, params?.theme).symbol;\n\n    const {\n      size = symbolAttribute.size,\n      x: originX = symbolAttribute.x,\n      y: originY = symbolAttribute.y,\n      scaleX = symbolAttribute.scaleX,\n      scaleY = symbolAttribute.scaleY\n    } = symbol.attribute;\n\n    const data = this.valid(symbol, symbolAttribute, fillCb, strokeCb);\n    if (!data) {\n      return;\n    }\n    const { fVisible, sVisible, doFill, doStroke } = data;\n\n    const parsedPath = symbol.getParsedPath();\n    // todo: 考虑使用path\n    if (!parsedPath) {\n      return;\n    }\n\n    const { keepDirIn3d = symbolAttribute.keepDirIn3d } = symbol.attribute;\n    const z = this.z ?? 0;\n    context.beginPath();\n    if (keepDirIn3d && context.camera && context.project) {\n      const p = context.project(x, y, z);\n      const camera = context.camera;\n      context.camera = null;\n      if (\n        parsedPath.draw(\n          context,\n          isArray(size) ? [size[0] * scaleX, size[1] * scaleY] : size * scaleX,\n          p.x,\n          p.y,\n          undefined,\n          (p, a) => {\n            // 如果是svg的话，合并一下fill和stroke\n            if (symbol._parsedPath.svgCache) {\n              const obj = Object.assign({}, a);\n              obj.fill = a.fill ?? symbol.attribute.fill;\n              obj.opacity = a.fill ?? symbol.attribute.opacity;\n              obj.fillOpacity = symbol.attribute.fillOpacity;\n              obj.stroke = a.stroke ?? symbol.attribute.stroke;\n              a = obj;\n            }\n            if (a.fill) {\n              if (fillCb) {\n                fillCb(context, symbol.attribute, symbolAttribute);\n              } else {\n                context.setCommonStyle(symbol, a, originX - x, originY - y, symbolAttribute);\n                context.fill();\n              }\n            }\n            if (a.stroke) {\n              if (strokeCb) {\n                strokeCb(context, symbol.attribute, symbolAttribute);\n              } else {\n                context.setStrokeStyle(symbol, a, (originX - x) / scaleX, (originY - y) / scaleY, symbolAttribute);\n                context.stroke();\n              }\n            }\n          }\n        ) === false\n      ) {\n        context.closePath();\n      }\n      context.camera = camera;\n    } else {\n      if (\n        parsedPath.draw(context, size, x, y, z, (p, a) => {\n          // 如果是svg的话，合并一下fill和stroke\n          if (symbol._parsedPath.svgCache) {\n            const obj = Object.assign({}, a);\n            obj.fill = a.fill ?? symbol.attribute.fill;\n            obj.opacity = a.opacity ?? symbol.attribute.opacity;\n            obj.fillOpacity = symbol.attribute.fillOpacity;\n            obj.stroke = a.stroke ?? symbol.attribute.stroke;\n            a = obj;\n          }\n          if (a.fill) {\n            if (fillCb) {\n              fillCb(context, symbol.attribute, symbolAttribute);\n            } else {\n              context.setCommonStyle(symbol, a, originX - x, originY - y, symbolAttribute);\n              context.fill();\n            }\n          }\n          if (a.stroke) {\n            if (strokeCb) {\n              strokeCb(context, symbol.attribute, symbolAttribute);\n            } else {\n              context.setStrokeStyle(symbol, a, (originX - x) / scaleX, (originY - y) / scaleY, symbolAttribute);\n              context.stroke();\n            }\n          }\n        }) === false\n      ) {\n        context.closePath();\n      }\n    }\n\n    // shadow\n    context.setShadowBlendStyle && context.setShadowBlendStyle(symbol, symbol.attribute, symbolAttribute);\n\n    this.beforeRenderStep(\n      symbol,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      symbolAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n\n    // if (fill !== false) {\n    //   context.setCommonStyle(symbol.attribute, symbolAttribute);\n    //   context.fill();\n    // }\n    // if (stroke !== false) {\n    //   context.setStrokeStyle(symbol.attribute, symbolAttribute);\n    //   context.stroke();\n    // }\n\n    // svg就不用fill和stroke了\n    if (doFill && !parsedPath.isSvg) {\n      if (fillCb) {\n        fillCb(context, symbol.attribute, symbolAttribute);\n      } else if (fVisible) {\n        context.setCommonStyle(symbol, symbol.attribute, originX - x, originY - y, symbolAttribute);\n        context.fill();\n      }\n    }\n    if (doStroke && !parsedPath.isSvg) {\n      if (strokeCb) {\n        strokeCb(context, symbol.attribute, symbolAttribute);\n      } else if (sVisible) {\n        context.setStrokeStyle(\n          symbol,\n          symbol.attribute,\n          (originX - x) / scaleX,\n          (originY - y) / scaleY,\n          symbolAttribute\n        );\n        context.stroke();\n      }\n    }\n\n    this.afterRenderStep(\n      symbol,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      symbolAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n  }\n\n  draw(symbol: ISymbol, renderService: IRenderService, drawContext: IDrawContext, params?: IGraphicRenderDrawParams) {\n    const symbolAttribute = getTheme(symbol, params?.theme).symbol;\n    this._draw(symbol, symbolAttribute, false, drawContext, params);\n  }\n}\n"]}