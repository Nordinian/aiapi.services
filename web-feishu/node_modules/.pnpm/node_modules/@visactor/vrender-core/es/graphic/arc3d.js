import { Arc } from "./arc";

import { getTheme } from "./theme";

import { application } from "../application";

import { parsePadding } from "../common/utils";

import { ARC3D_NUMBER_TYPE } from "./constants";

import { NOWORK_ANIMATE_ATTR } from "./graphic";

export class Arc3d extends Arc {
    constructor(params) {
        super(params), this.type = "arc3d", this.numberType = ARC3D_NUMBER_TYPE;
    }
    doUpdateAABBBounds() {
        const polygonTheme = getTheme(this).arc;
        this._AABBBounds.setValue(1 / 0, 1 / 0, -1 / 0, -1 / 0);
        const attribute = this.attribute, bounds = application.graphicService.updateArc3dAABBBounds(attribute, getTheme(this).polygon, this._AABBBounds, this), {boundsPadding: boundsPadding = polygonTheme.boundsPadding} = attribute, paddingArray = parsePadding(boundsPadding);
        return paddingArray && bounds.expand(paddingArray), this.clearUpdateBoundTag(), 
        this._AABBBounds;
    }
    getNoWorkAnimateAttr() {
        return Arc3d.NOWORK_ANIMATE_ATTR;
    }
}

Arc3d.NOWORK_ANIMATE_ATTR = Object.assign({
    cap: 1
}, NOWORK_ANIMATE_ATTR);

export function createArc3d(attributes) {
    return new Arc3d(attributes);
}
//# sourceMappingURL=arc3d.js.map
