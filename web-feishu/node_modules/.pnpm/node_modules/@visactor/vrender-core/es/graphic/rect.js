import { Graphic, GRAPHIC_UPDATE_TAG_KEY, NOWORK_ANIMATE_ATTR } from "./graphic";

import { CustomPath2D } from "../common/custom-path2d";

import { parsePadding } from "../common/utils";

import { getTheme } from "./theme";

import { application } from "../application";

import { RECT_NUMBER_TYPE } from "./constants";

import { normalizeRectAttributes } from "../common/rect-utils";

const RECT_UPDATE_TAG_KEY = [ "width", "x1", "y1", "height", "cornerRadius", ...GRAPHIC_UPDATE_TAG_KEY ];

export class Rect extends Graphic {
    constructor(params) {
        super(params), this.type = "rect", this.numberType = RECT_NUMBER_TYPE;
    }
    isValid() {
        return super.isValid() && this._isValid();
    }
    _isValid() {
        return !0;
    }
    doUpdateAABBBounds() {
        const rectTheme = getTheme(this).rect;
        this._AABBBounds.setValue(1 / 0, 1 / 0, -1 / 0, -1 / 0);
        const attribute = this.attribute, bounds = application.graphicService.updateRectAABBBounds(attribute, getTheme(this).rect, this._AABBBounds, this), {boundsPadding: boundsPadding = rectTheme.boundsPadding} = attribute, paddingArray = parsePadding(boundsPadding);
        return paddingArray && bounds.expand(paddingArray), this.clearUpdateBoundTag(), 
        bounds;
    }
    tryUpdateOBBBounds() {
        throw new Error("暂不支持");
    }
    getDefaultAttribute(name) {
        return getTheme(this).rect[name];
    }
    needUpdateTags(keys) {
        return super.needUpdateTags(keys, RECT_UPDATE_TAG_KEY);
    }
    needUpdateTag(key) {
        return super.needUpdateTag(key, RECT_UPDATE_TAG_KEY);
    }
    toCustomPath() {
        const attribute = this.attribute, {x: x, y: y, width: width, height: height} = normalizeRectAttributes(attribute), path = new CustomPath2D;
        return path.moveTo(x, y), path.rect(x, y, width, height), path;
    }
    clone() {
        return new Rect(Object.assign({}, this.attribute));
    }
    getNoWorkAnimateAttr() {
        return Rect.NOWORK_ANIMATE_ATTR;
    }
}

Rect.NOWORK_ANIMATE_ATTR = NOWORK_ANIMATE_ATTR;

export function createRect(attributes) {
    return new Rect(attributes);
}
//# sourceMappingURL=rect.js.map
