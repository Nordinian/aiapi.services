{
  "version": 3,
  "sources": ["../../@visactor/vchart-semi-theme/esm/src/common/constants.ts", "../../@visactor/vchart-theme-utils/esm/src/utils/get-token-value.ts", "../../@visactor/vchart-theme-utils/esm/src/utils/observe-attribute.ts", "../../@visactor/vchart-theme-utils/esm/generator.js", "../../@visactor/vchart-semi-theme/src/util.ts", "../../@visactor/vchart-semi-theme/esm/src/dark/color-scheme.ts", "../../@visactor/vchart-semi-theme/esm/src/dark/index.ts", "../../@visactor/vchart-semi-theme/esm/src/light/color-scheme.ts", "../../@visactor/vchart-semi-theme/esm/src/light/index.ts", "../../@visactor/vchart-semi-theme/esm/src/common/token-map.ts", "../../@visactor/vchart-semi-theme/esm/generator.js", "../../@visactor/vchart-semi-theme/src/theme-map.ts", "../../@visactor/vchart-semi-theme/src/index.ts"],
  "sourcesContent": ["export const SEMI_FONT_FAMILY =\n  // eslint-disable-next-line max-len\n  'Inter,-apple-system,BlinkMacSystemFont,Segoe UI,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif';\n\nexport const THEME_MODE_ATTRIBUTE = 'theme-mode';\n", "/** 从当前页面环境中读取 token 的值 */\nexport const getTokenValue = <T>(\n  token?: string,\n  defaultValue?: T,\n  chartContainer?: HTMLElement\n): T | string | undefined => {\n  const value = token\n    ? getComputedStyle(chartContainer ?? document.body).getPropertyValue(token) || defaultValue\n    : defaultValue;\n  if (value && !isNaN(value[0])) {\n    return `rgba(${value})`;\n  }\n  return value;\n};\n", "/** 监听 dom 元素 attribute 更新 */\nexport const observeAttribute = (\n  element: HTMLElement,\n  attribute: string,\n  callback: (mutation: MutationRecord) => void\n) => {\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.attributeName === attribute) {\n        callback(mutation);\n      }\n    });\n  });\n  observer.observe(element, { attributes: true });\n};\n", "import { getTokenValue } from \"./utils\";\n\nexport const generateDataScheme = (mode, tokenMap, baseDataScheme, chartContainer) => tokenMap.map(((item, i) => {\n    const {scheme: scheme} = baseDataScheme[i];\n    return Object.assign(Object.assign({}, item), {\n        scheme: item.scheme.map(((token, j) => getTokenValue(\"object\" == typeof token ? token[mode] : token, null == scheme ? void 0 : scheme[j], chartContainer)))\n    });\n}));\n\nexport const generatePalette = (mode, tokenMap, basePalette, chartContainer) => {\n    const newPalette = {};\n    return Object.keys(tokenMap).forEach((key => {\n        const token = \"object\" == typeof tokenMap[key] ? tokenMap[key][mode] : tokenMap[key];\n        newPalette[key] = getTokenValue(token, basePalette[key], chartContainer);\n    })), newPalette;\n};", "import { THEME_MODE_ATTRIBUTE } from './common/constants';\n\nexport * from '@visactor/vchart-theme-utils';\n\nexport const getCurrentMode = () =>\n  document.body.hasAttribute(THEME_MODE_ATTRIBUTE) && document.body.getAttribute(THEME_MODE_ATTRIBUTE) === 'dark'\n    ? 'dark'\n    : 'light';\n\nexport const generateThemeName = (mode: 'light' | 'dark') => `semiDesign${mode[0].toUpperCase()}${mode.slice(1)}`;\n\nexport const observeThemeSwitch = (callback: (mutation: MutationRecord, node: HTMLLinkElement) => void) => {\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.addedNodes.length === 1) {\n        const node = mutation.addedNodes[0] as HTMLLinkElement;\n        if (node.tagName === 'LINK' && node.getAttribute?.('semi-theme-switcher') === 'true') {\n          callback(mutation, node);\n        }\n      }\n    });\n  });\n  observer.observe(document.body, { childList: true });\n};\n", "import type { BuiltinColorPalette, IColorSchemeStruct, IThemeColorScheme } from '@visactor/vchart';\n// eslint-disable-next-line no-duplicate-imports\nimport { lightTheme } from '@visactor/vchart';\n\nexport const colorScheme: IThemeColorScheme = {\n  default: {\n    dataScheme: (lightTheme.colorScheme.default as IColorSchemeStruct).dataScheme,\n    palette: {\n      /** 背景色 */\n      backgroundColor: '#16161a',\n      /** 图表边框色 */\n      borderColor: 'rgba(255,255,255,0.08)',\n      /** 默认阴影颜色 */\n      shadowColor: 'rgba(0,0,0,0.25)',\n      /** 鼠标 hover 项背景颜色 */\n      hoverBackgroundColor: 'rgba(255,255,255,0.12)',\n      /** 滑块类组件背景条填充颜色 */\n      sliderRailColor: 'rgba(255,255,255,0.12)',\n      /** 滑块类组件滑块填充颜色 */\n      sliderHandleColor: '#e4e7f5',\n      /** 滑块类组件已选范围填充颜色 */\n      sliderTrackColor: 'rgba(84,169,255,1)',\n      /** 浮层背景区域颜色 */\n      popupBackgroundColor: '#43444a',\n\n      /** 主要字色 */\n      primaryFontColor: 'rgba(249,249,249,1)',\n      /** 次要字色 */\n      secondaryFontColor: 'rgba(249,249,249,0.8)',\n      /** 第三字色 */\n      tertiaryFontColor: 'rgba(249,249,249,0.6)',\n      /** 轴标签字色 */\n      axisLabelFontColor: 'rgba(249,249,249,0.6)',\n      /** 禁用字色 */\n      disableFontColor: 'rgba(249,249,249,0.35)',\n      /** 轴高亮标记字色 */\n      axisMarkerFontColor: '#16161a',\n\n      /** 轴网格线颜色 */\n      axisGridColor: 'rgba(255,255,255,0.08)',\n      /** 轴线颜色 */\n      axisDomainColor: 'rgba(255,255,255,0.08)',\n\n      /** 缩略轴滑块描边颜色 */\n      dataZoomHandleStrokeColor: 'rgba(46,50,56,0.13)',\n      /** 缩略轴图表区域颜色 */\n      dataZoomChartColor: 'rgba(255,255,255,0.16)',\n\n      /** 播放器控制器填充颜色 */\n      playerControllerColor: 'rgba(84,169,255,1)',\n\n      /** 轴高亮标记背景色 */\n      axisMarkerBackgroundColor: 'rgba(249,249,249,1)',\n      /** 标注标签背景颜色 */\n      markLabelBackgroundColor: 'rgba(255,255,255,0.08)',\n      /** 标注线颜色 */\n      markLineStrokeColor: 'rgba(249,249,249,0.8)',\n\n      /** 危险色 */\n      dangerColor: 'rgba(252,114,90,1)',\n      /** 警告色 */\n      warningColor: 'rgba(255,174,67,1)',\n      /** 成功色 */\n      successColor: 'rgba(93,194,100,1)',\n      /** 信息色 */\n      infoColor: 'rgba(84,169,255,1)'\n    } as Partial<BuiltinColorPalette>\n  }\n};\n", "import type { ITheme } from '@visactor/vchart';\nimport { colorScheme } from './color-scheme';\nimport { SEMI_FONT_FAMILY } from '../common/constants';\n\nexport const semiDesignDark: ITheme = {\n  name: 'semiDesignDark',\n  description: 'Semi Design - dark',\n  type: 'dark',\n  fontFamily: SEMI_FONT_FAMILY,\n  colorScheme\n};\n", "import type { BuiltinColorPalette, IColorSchemeStruct, IThemeColorScheme } from '@visactor/vchart';\n// eslint-disable-next-line no-duplicate-imports\nimport { lightTheme } from '@visactor/vchart';\n\nexport const colorScheme: IThemeColorScheme = {\n  default: {\n    dataScheme: (lightTheme.colorScheme.default as IColorSchemeStruct).dataScheme,\n    palette: {\n      /** 背景色 */\n      backgroundColor: 'rgba(255,255,255,1)',\n      /** 图表边框色 */\n      borderColor: 'rgba(28,31,35,0.08)',\n      /** 默认阴影颜色 */\n      shadowColor: 'rgba(0,0,0,0.1)',\n      /** 鼠标 hover 项背景颜色 */\n      hoverBackgroundColor: 'rgba(46,50,56,0.05)',\n      /** 滑块类组件背景条填充颜色 */\n      sliderRailColor: 'rgba(46,50,56,0.05)',\n      /** 滑块类组件滑块填充颜色 */\n      sliderHandleColor: 'rgba(255,255,255,1)',\n      /** 滑块类组件已选范围填充颜色 */\n      sliderTrackColor: 'rgba(0,100,250,1)',\n      /** 浮层背景区域颜色 */\n      popupBackgroundColor: 'rgba(255,255,255,1)',\n\n      /** 主要字色 */\n      primaryFontColor: 'rgba(28,31,35,1)',\n      /** 次要字色 */\n      secondaryFontColor: 'rgba(28,31,35,0.8)',\n      /** 第三字色 */\n      tertiaryFontColor: 'rgba(28,31,35,0.62)',\n      /** 轴标签字色 */\n      axisLabelFontColor: 'rgba(28,31,35,0.62)',\n      /** 禁用字色 */\n      disableFontColor: 'rgba(28,31,35,0.35)',\n      /** 轴高亮标记字色 */\n      axisMarkerFontColor: 'rgba(255,255,255,1)',\n\n      /** 轴网格线颜色 */\n      axisGridColor: 'rgba(28,31,35,0.08)',\n      /** 轴线颜色 */\n      axisDomainColor: 'rgba(28,31,35,0.15)',\n\n      /** 缩略轴滑块描边颜色 */\n      dataZoomHandleStrokeColor: 'rgba(46,50,56,0.13)',\n      /** 缩略轴图表区域颜色 */\n      dataZoomChartColor: 'rgba(46,50,56,0.09)',\n\n      /** 播放器控制器填充颜色 */\n      playerControllerColor: 'rgba(0,100,250,1)',\n\n      /** 轴高亮标记背景色 */\n      axisMarkerBackgroundColor: 'rgba(28,31,35,1)',\n      /** 标注标签背景颜色 */\n      markLabelBackgroundColor: 'rgba(28,31,35,0.08)',\n      /** 标注线颜色 */\n      markLineStrokeColor: 'rgba(28,31,35,0.8)',\n\n      /** 危险色 */\n      dangerColor: 'rgba(249,57,32,1)',\n      /** 警告色 */\n      warningColor: 'rgba(252,136,0,1)',\n      /** 成功色 */\n      successColor: 'rgba(59,179,70,1)',\n      /** 信息色 */\n      infoColor: 'rgba(0,100,250,1)'\n    } as Partial<BuiltinColorPalette>\n  }\n};\n", "import type { ITheme } from '@visactor/vchart';\nimport { colorScheme } from './color-scheme';\nimport { SEMI_FONT_FAMILY } from '../common/constants';\n\nexport const semiDesignLight: ITheme = {\n  name: 'semiDesignLight',\n  description: 'Semi Design - light',\n  type: 'light',\n  fontFamily: SEMI_FONT_FAMILY,\n  colorScheme\n};\n", "import type { DataSchemeTokenMap, PaletteTokenMap } from '@visactor/vchart-theme-utils/esm/interface';\n\nexport const paletteTokenMap: PaletteTokenMap = {\n  /** 背景色 */\n  backgroundColor: '--semi-color-bg-0',\n  /** 图表边框色 */\n  borderColor: '--semi-color-border',\n  /** 鼠标 hover 项背景颜色 */\n  hoverBackgroundColor: '--semi-color-fill-0',\n  /** 滑块类组件背景条填充颜色 */\n  sliderRailColor: '--semi-color-fill-0',\n  /** 滑块类组件滑块填充颜色 */\n  sliderHandleColor: '--semi-white',\n  /** 滑块类组件已选范围填充颜色 */\n  sliderTrackColor: '--semi-color-primary',\n  /** 浮层背景区域颜色 */\n  popupBackgroundColor: '--semi-color-bg-3',\n\n  /** 主要字色 */\n  primaryFontColor: '--semi-color-text-0',\n  /** 次要字色 */\n  secondaryFontColor: '--semi-color-text-1',\n  /** 第三字色 */\n  tertiaryFontColor: '--semi-color-text-2',\n  /** 轴标签字色 */\n  axisLabelFontColor: '--semi-color-text-0',\n  /** 禁用字色 */\n  disableFontColor: '--semi-color-disabled-text',\n  /** 轴高亮标记字色 */\n  axisMarkerFontColor: '--semi-color-bg-0',\n\n  /** 轴网格线颜色 */\n  axisGridColor: '--semi-color-border',\n  /** 轴线颜色 */\n  axisDomainColor: {\n    light: '--semi-grey-9',\n    dark: '--semi-color-border'\n  },\n\n  /** 缩略轴滑块描边颜色 */\n  dataZoomHandleStrokeColor: {\n    light: '--semi-color-fill-2'\n  },\n  /** 缩略轴图表区域颜色 */\n  dataZoomChartColor: '--semi-color-fill-1',\n\n  /** 播放器控制器填充颜色 */\n  playerControllerColor: '--semi-color-primary',\n\n  /** 轴高亮标记背景色 */\n  axisMarkerBackgroundColor: '--semi-color-text-0',\n  /** 标注标签背景颜色 */\n  markLabelBackgroundColor: '--semi-color-border',\n  /** 标注线颜色 */\n  markLineStrokeColor: '--semi-color-text-1',\n\n  /** 危险色 */\n  dangerColor: '--semi-color-danger',\n  /** 警告色 */\n  warningColor: '--semi-color-warning',\n  /** 成功色 */\n  successColor: '--semi-color-success',\n  /** 信息色 */\n  infoColor: '--semi-color-info'\n};\n\nexport const dataSchemeTokenMap: DataSchemeTokenMap = [\n  // 第一档颜色（数据项 <= 10）\n  {\n    maxDomainLength: 10,\n    scheme: [\n      '--semi-color-data-0',\n      '--semi-color-data-2',\n      '--semi-color-data-4',\n      '--semi-color-data-6',\n      '--semi-color-data-8',\n      '--semi-color-data-10',\n      '--semi-color-data-12',\n      '--semi-color-data-14',\n      '--semi-color-data-16',\n      '--semi-color-data-18'\n    ]\n  },\n  // 第二档颜色（数据项 > 10）\n  {\n    scheme: [\n      '--semi-color-data-0',\n      '--semi-color-data-1',\n      '--semi-color-data-2',\n      '--semi-color-data-3',\n      '--semi-color-data-4',\n      '--semi-color-data-5',\n      '--semi-color-data-6',\n      '--semi-color-data-7',\n      '--semi-color-data-8',\n      '--semi-color-data-9',\n      '--semi-color-data-10',\n      '--semi-color-data-11',\n      '--semi-color-data-12',\n      '--semi-color-data-13',\n      '--semi-color-data-14',\n      '--semi-color-data-15',\n      '--semi-color-data-16',\n      '--semi-color-data-17',\n      '--semi-color-data-18',\n      '--semi-color-data-19'\n    ]\n  }\n];\n", "import { semiDesignDark } from \"./dark\";\n\nimport { semiDesignLight } from \"./light\";\n\nimport { dataSchemeTokenMap, paletteTokenMap } from \"./common/token-map\";\n\nimport { generateDataScheme, generatePalette } from \"@visactor/vchart-theme-utils\";\n\nconst baseThemeMap = {\n    light: semiDesignLight,\n    dark: semiDesignDark\n};\n\nexport const generateVChartSemiTheme = (mode, chartContainer) => {\n    const baseTheme = baseThemeMap[mode], {dataScheme: dataScheme, palette: palette} = baseTheme.colorScheme.default, colorScheme = {\n        default: {\n            dataScheme: generateDataScheme(mode, dataSchemeTokenMap, dataScheme, chartContainer),\n            palette: generatePalette(mode, paletteTokenMap, palette, chartContainer)\n        }\n    };\n    return Object.assign(Object.assign({}, baseTheme), {\n        colorScheme: colorScheme\n    });\n};", "import type { ITheme } from '@visactor/vchart';\nimport { semiDesignLight } from './light';\nimport { semiDesignDark } from './dark';\n\nexport const allThemeMap = new Map([\n  // semi design 主题\n  [semiDesignLight.name, semiDesignLight],\n  [semiDesignDark.name, semiDesignDark]\n]) as Map<string, ITheme>;\n", "import type { ITheme } from '@visactor/vchart';\n// eslint-disable-next-line no-duplicate-imports\nimport VChart from '@visactor/vchart';\nimport type { IInitVChartSemiThemeOption } from './interface';\nimport { generateThemeName, getCurrentMode, observeAttribute, observeThemeSwitch } from './util';\nimport { generateVChartSemiTheme } from './generator';\nimport { THEME_MODE_ATTRIBUTE } from './common/constants';\n\nexport * from './theme-map';\nexport * from './generator';\nexport * from './light';\nexport * from './dark';\n\nexport const initVChartSemiTheme = (options?: IInitVChartSemiThemeOption) => {\n  const { defaultMode, isWatchingMode = true, isWatchingThemeSwitch = false } = options ?? {};\n\n  switchVChartSemiTheme(false, defaultMode);\n\n  if (isWatchingMode) {\n    observeAttribute(document.body, THEME_MODE_ATTRIBUTE, () => switchVChartSemiTheme());\n  }\n  if (isWatchingThemeSwitch) {\n    observeThemeSwitch(() => {\n      const mode = getCurrentMode();\n      const cacheColorScheme = JSON.stringify(generateVChartSemiTheme(mode).colorScheme);\n      // 轮询直到监测到主题变化\n      let times = 0;\n      const timer = setInterval(() => {\n        const theme = generateVChartSemiTheme(mode);\n        if (times > 50 || cacheColorScheme !== JSON.stringify(theme.colorScheme)) {\n          switchVChartSemiTheme(true, mode, theme);\n          clearInterval(timer);\n        }\n        times++;\n      }, 100);\n    });\n  }\n};\n\nexport const switchVChartSemiTheme = (force?: boolean, mode?: 'light' | 'dark', theme?: ITheme) => {\n  if (!mode) {\n    mode = getCurrentMode();\n  }\n  const themeName = generateThemeName(mode);\n  if (!force && VChart.ThemeManager.getCurrentTheme() === themeName) {\n    return;\n  } else if (force) {\n    VChart.ThemeManager.removeTheme(themeName);\n  }\n  if (!VChart.ThemeManager.themeExist(themeName)) {\n    VChart.ThemeManager.registerTheme(themeName, theme ?? generateVChartSemiTheme(mode));\n  }\n  VChart.ThemeManager.setCurrentTheme(themeName);\n};\n"],
  "mappings": "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",
  "names": ["colorScheme", "colorScheme"]
}
