{
  "version": 3,
  "sources": ["../../react-fireworks/react-fireworks.js"],
  "sourcesContent": ["//创建变量\r\nlet fireworksField = \"\",\r\n  opt = {},\r\n  particles = [],\r\n  rockets = [],\r\n  //最大爆炸粒子数量，与每颗烟花爆炸的粒子数关联，影响爆炸后粒子的消失时间\r\n  MAX_PARTICLES = 0,\r\n  SCREEN_WIDTH = 0,\r\n  SCREEN_HEIGHT = 0,\r\n  SCREEN_TOP,\r\n  SCREEN_BOTTOM,\r\n  SCREEN_LEFT,\r\n  SCREEN_RIGHT,\r\n  Z_INDEX,\r\n  canvas,\r\n  context;\r\n\r\nlet reloadTimer;\r\nlet loopTimer;\r\n\r\n//粒子类\r\nclass Particle{\r\n  constructor(pos){\r\n    this.pos = {\r\n      x: pos ? pos.x : 0,\r\n      y: pos ? pos.y : 0\r\n    };\r\n    this.vel = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.shrink = 0.97;\r\n    this.size = 2;\r\n    this.resistance = 1;\r\n    this.gravity = 0;\r\n    this.flick = false;\r\n    this.alpha = 1;\r\n    this.fade = 0;\r\n    this.color = 0;\r\n  }\r\n\r\n  update(){\r\n    // apply resistance\r\n    this.vel.x *= this.resistance;\r\n    this.vel.y *= this.resistance;\r\n    // gravity down\r\n    this.vel.y += this.gravity;\r\n    // update position based on speed\r\n    this.pos.x += this.vel.x;\r\n    this.pos.y += this.vel.y;\r\n    // shrink\r\n    this.size *= this.shrink;\r\n    // fade out\r\n    this.alpha -= this.fade;\r\n  }\r\n\r\n  render(c){\r\n    if (!this.exists()) {\r\n      return;\r\n    }\r\n    c.save();\r\n    c.globalCompositeOperation = 'lighter';\r\n    let x = this.pos.x,\r\n      y = this.pos.y,\r\n      r = this.size / 2;\r\n    let gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\r\n    gradient.addColorStop(0.1, \"rgba(255,255,255,\" + this.alpha + \")\");\r\n    gradient.addColorStop(0.8, \"hsla(\" + this.color + \", 100%, 50%, \" + this.alpha + \")\");\r\n    gradient.addColorStop(1, \"hsla(\" + this.color + \", 100%, 50%, 0.1)\");\r\n    c.fillStyle = gradient;\r\n    c.beginPath();\r\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size : this.size, 0, Math.PI * 2, true);\r\n    c.closePath();\r\n    c.fill();\r\n    c.restore();\r\n  }\r\n\r\n  exists(){\r\n    return this.alpha >= 0.1 && this.size >= 1;\r\n  }\r\n}\r\n\r\n//装弹类\r\nclass Rocket extends Particle{\r\n  constructor(x) {\r\n    super({\r\n      x: x,\r\n      y: SCREEN_HEIGHT\r\n    });\r\n    this.explosionColor = 0;\r\n  }\r\n\r\n  explode(){\r\n    //爆炸的粒子数量\r\n    for (let i = 0; i < opt.explode_debris_num; i++) {\r\n      let particle = new Particle(this.pos);\r\n      let angle = Math.random() * Math.PI * 2;\r\n      // emulate 3D effect by using cosine and put more particles in the middle\r\n      let speed = Math.cos(Math.random() * Math.PI / 2) * 15;\r\n      particle.vel.x = Math.cos(angle) * speed;\r\n      particle.vel.y = Math.sin(angle) * speed;\r\n      //爆炸的粒子大小\r\n      particle.size = opt.explode_particles_size;\r\n      particle.gravity = 0.2;\r\n      particle.resistance =  0.9 + opt.explode_particles_resistance * 0.01;\r\n      particle.shrink = Math.random() * 0.05 + 0.95;\r\n      particle.flick = true;\r\n      particle.color = this.explosionColor;\r\n      particles.push(particle);\r\n    }\r\n  }\r\n\r\n  render(c){\r\n    if (!this.exists()) {\r\n      return;\r\n    }\r\n    c.save();\r\n    c.globalCompositeOperation = 'lighter';\r\n    let x = this.pos.x,\r\n      y = this.pos.y,\r\n      r = this.size / 2;\r\n    let gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\r\n    gradient.addColorStop(0.1, \"rgba(255, 255, 255 ,\" + this.alpha + \")\");\r\n    gradient.addColorStop(1, \"rgba(0, 0, 0, \" + this.alpha + \")\");\r\n    c.fillStyle = gradient;\r\n    c.beginPath();\r\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size / 2 + this.size / 2 : this.size, 0, Math.PI * 2, true);\r\n    c.closePath();\r\n    c.fill();\r\n    c.restore();\r\n  }\r\n}\r\n\r\nexport default  {\r\n  /**\r\n   * 初始化烟花\r\n   * @param dom\r\n   * @param options：\r\n   * 1、width 宽度 单位px\r\n   * 2、height 高度 单位px\r\n   * 3、top，bottom，left，right 绝对布局参数\r\n   * 2、frequency 烟花发射频率 单位：毫秒\r\n   * 3、launch_speed 烟花发射速度 （推荐值：5-10）\r\n   * 4、launch_particles_size 烟花发射粒子大小（推荐值：0-10）\r\n   * 5、explode_particles_resistance 爆炸粒子半径 （推荐值：4-10）\r\n   * 6、explode_debris_num 爆炸粒子个数\r\n   * 7、explode_particles_size 爆炸粒子大小\r\n   * 8、z_index canvas层级\r\n   * @returns {string}\r\n   */\r\n  init:function (dom,options) {\r\n    if (!dom || typeof(dom) !== \"string\" || document.getElementById(dom) == null){\r\n      console.log(\"id对象不存在\");\r\n    }\r\n    else{\r\n      fireworksField = document.getElementById(dom);\r\n      //配置默认\r\n      opt.frequency = options.frequency || 200;\r\n      opt.launch_speed = options.launch_speed || 12;\r\n      opt.launch_particles_size = options.launch_particles_size || 0;\r\n      opt.explode_debris_num =  Math.random() * 10 + (options.debris_num || 150);\r\n      opt.explode_particles_resistance = options.explode_particles_resistance || 5;\r\n      opt.explode_particles_size = options.explode_particles_resistance || 10;\r\n      SCREEN_WIDTH = options.width || document.body.clientWidth + \"px\";\r\n      SCREEN_HEIGHT = options.height || document.body.clientHeight+ \"px\";\r\n      SCREEN_TOP = options.top || '0px';\r\n      SCREEN_BOTTOM = options.bottom || '0px';\r\n      SCREEN_LEFT = options.left || '0px';\r\n      SCREEN_RIGHT = options.right || '0px';\r\n      Z_INDEX = options.zIndex || 100;\r\n      MAX_PARTICLES = opt.explode_debris_num * 10;\r\n\r\n      //创建canvas\r\n      canvas = document.createElement('canvas');\r\n      canvas.id = 'fireworksField';\r\n      canvas.style.width = SCREEN_WIDTH;\r\n      canvas.style.height = SCREEN_HEIGHT;\r\n      canvas.style.position = 'absolute';\r\n      canvas.style.top = SCREEN_TOP;\r\n      canvas.style.bottom = SCREEN_BOTTOM;\r\n      canvas.style.left = SCREEN_LEFT;\r\n      canvas.style.right = SCREEN_RIGHT;\r\n      canvas.style.opacity = 1;\r\n      canvas.style.zIndex = Z_INDEX;\r\n      context = canvas.getContext('2d');\r\n\r\n      fireworksField.appendChild(canvas);\r\n      //XX毫秒执行一次装弹\r\n      reloadTimer = setInterval(this.reload, opt.frequency);\r\n\r\n      loopTimer = setInterval(this.loop, 50);\r\n    }\r\n  },\r\n\r\n  reload:function () {\r\n    if (rockets.length < 100) {\r\n      let rocket = new Rocket(Math.random() * SCREEN_WIDTH);\r\n      rocket.explosionColor = Math.floor(Math.random() * 360 / 10) * 10;\r\n      rocket.vel.y = -1 * opt.launch_speed;\r\n      rocket.vel.x = Math.random() * 2 - 1;\r\n      //发射轨迹的大小 0：无轨迹\r\n      rocket.size = opt.launch_particles_size;\r\n      //发射轨迹从发射到爆炸的逐渐放大或缩小指数，呈指数增长\r\n      rocket.shrink = 1.008;\r\n      //发射轨迹的重力\r\n      rocket.gravity = 0.005;\r\n      rockets.push(rocket);\r\n    }\r\n  },\r\n\r\n  loop:function () {\r\n    //调整宽高\r\n    if (SCREEN_WIDTH !== window.innerWidth) {\r\n      canvas.width = SCREEN_WIDTH = window.innerWidth;\r\n    }\r\n    if (SCREEN_HEIGHT !== window.innerHeight) {\r\n      canvas.height = SCREEN_HEIGHT = window.innerHeight;\r\n    }\r\n    // clear canvas\r\n    context.fillStyle = \"rgba(0, 0, 0, 0.05)\";\r\n    context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n    //设置存在的Rockets数组\r\n    let existingRockets = [];\r\n\r\n    for (let i = 0; i < rockets.length; i++) {\r\n      //更新渲染\r\n      rockets[i].update();\r\n      rockets[i].render(context);\r\n      // calculate distance with Pythagoras\r\n      let distance = Math.sqrt(Math.pow(SCREEN_WIDTH - rockets[i].pos.x, 2) + Math.pow(SCREEN_HEIGHT - rockets[i].pos.y, 2));\r\n      // random chance of 1% if rockets is above the middle\r\n      let randomChance = rockets[i].pos.y < (SCREEN_HEIGHT * 2 / 3) ? (Math.random() * 100 <= 1) : false;\r\n      /* Explosion rules\r\n       - 80% of screen\r\n       - going down\r\n       - close to the mouse\r\n       - 1% chance of random explosion\r\n       */\r\n      if (rockets[i].pos.y < SCREEN_HEIGHT / 5 || rockets[i].vel.y >= 0 || distance < 50 || randomChance) {\r\n        rockets[i].explode();\r\n      } else {\r\n        existingRockets.push(rockets[i]);\r\n      }\r\n    }\r\n    rockets = existingRockets;\r\n    let existingParticles = [];\r\n    for (let j = 0; j < particles.length; j++) {\r\n      particles[j].update();\r\n      // render and save particles that can be rendered\r\n      if (particles[j].exists()) {\r\n        particles[j].render(context);\r\n        existingParticles.push(particles[j]);\r\n      }\r\n    }\r\n    // update array with existing particles - old particles should be garbage collected\r\n    particles = existingParticles;\r\n    while (particles.length > MAX_PARTICLES) {\r\n      particles.shift();\r\n    }\r\n  },\r\n\r\n  start:function () {\r\n    if (reloadTimer){\r\n      clearInterval(reloadTimer);\r\n    }\r\n    if(loopTimer){\r\n      clearInterval(loopTimer);\r\n    }\r\n    reloadTimer = setInterval(this.reload, opt.frequency);\r\n    //XX毫秒执行一次刷新canvas\r\n    loopTimer = setInterval(this.loop, 50);\r\n  },\r\n\r\n  stop:function () {\r\n    clearInterval(reloadTimer);\r\n    //20秒后清除loop定时器\r\n    setTimeout(function () {\r\n      clearInterval(loopTimer);\r\n    },20000)\r\n  },\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": []
}
