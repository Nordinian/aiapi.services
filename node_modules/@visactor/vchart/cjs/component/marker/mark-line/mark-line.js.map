{"version":3,"sources":["../src/component/marker/mark-line/mark-line.ts"],"names":[],"mappings":"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","file":"mark-line.js","sourcesContent":["import { DataView } from '@visactor/vdataset';\nimport type {\n  IMarkLine,\n  IMarkLineSpec,\n  IMarkLineXYSpec,\n  IMarkLineXYY1Spec,\n  IMarkLineYXX1Spec,\n  IStepMarkLineSpec\n} from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../../interface/type';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IOptionAggr } from '../../../data/transforms/aggregation';\n// eslint-disable-next-line no-duplicate-imports\nimport { markerAggregation } from '../../../data/transforms/aggregation';\nimport { computeClipRange, coordinateLayout, positionLayout, transformLabelAttributes, xyLayout } from '../utils';\nimport { registerDataSetInstanceTransform } from '../../../data/register';\nimport type { MarkLineAttrs } from '@visactor/vrender-components';\nimport { MarkLine as MarkLineComponent } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport type { Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { isEmpty, isValid, isArray } from '@visactor/vutils';\nimport { transformToGraphic } from '../../../util/style';\nimport { BaseMarker } from '../base-marker';\nimport type { IGroup } from '@visactor/vrender-core';\nimport type { IDataPos, IMarkerSymbol } from '../interface';\nimport type { IOptionRegr } from '../../../data/transforms/regression';\n// eslint-disable-next-line no-duplicate-imports\nimport { markerRegression } from '../../../data/transforms/regression';\nimport { LayoutZIndex } from '../../../constant';\nimport { getInsertPoints, getTextOffset } from './util';\nimport { Factory } from '../../../core/factory';\nimport { isPercent } from '../../../util';\nimport type { IPoint } from '../../../typings';\nimport type { IModelSpecInfo } from '../../../model/interface';\nimport { markerFilter } from '../../../data/transforms/marker-filter';\n\nexport class MarkLine extends BaseMarker<IMarkLineSpec> implements IMarkLine {\n  static type = ComponentTypeEnum.markLine;\n  type = ComponentTypeEnum.markLine;\n  name: string = ComponentTypeEnum.markLine;\n\n  static specKey = 'markLine';\n  specKey = 'markLine';\n\n  layoutZIndex: number = LayoutZIndex.MarkLine;\n\n  protected declare _markerComponent: MarkLineComponent;\n\n  private _isXYLayout: boolean;\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    const markLineSpec = chartSpec[this.specKey];\n    if (isEmpty(markLineSpec)) {\n      return undefined;\n    }\n    if (!isArray(markLineSpec) && markLineSpec.visible !== false) {\n      return [\n        {\n          spec: markLineSpec,\n          specPath: [this.specKey],\n          type: ComponentTypeEnum.markLine\n        }\n      ];\n    }\n    const specInfos: IModelSpecInfo[] = [];\n    markLineSpec.forEach((m: any, i: number) => {\n      if (m.visible !== false) {\n        specInfos.push({\n          spec: m,\n          specIndex: i,\n          specPath: [this.specKey, i],\n          type: ComponentTypeEnum.markLine\n        });\n      }\n    });\n    return specInfos;\n  }\n\n  protected _createMarkerComponent() {\n    const {\n      label = {},\n      startSymbol = {} as IMarkerSymbol,\n      endSymbol = {} as IMarkerSymbol\n    } = this._spec as IMarkLineSpec;\n\n    const markLineAttrs: MarkLineAttrs = {\n      zIndex: this.layoutZIndex,\n      interactive: this._spec.interactive ?? false,\n      points: [\n        { x: 0, y: 0 },\n        { x: 0, y: 0 }\n      ],\n      lineStyle: this._spec.line?.style as unknown as any,\n      clipInRange: this._spec.clip ?? false,\n      label: transformLabelAttributes(label)\n    };\n\n    if (startSymbol.visible) {\n      markLineAttrs.startSymbol = {\n        ...startSymbol,\n        visible: true,\n        style: transformToGraphic(startSymbol.style)\n      };\n    } else {\n      markLineAttrs.startSymbol = {\n        visible: false\n      };\n    }\n\n    if (endSymbol.visible) {\n      markLineAttrs.endSymbol = {\n        ...endSymbol,\n        visible: true,\n        style: transformToGraphic(endSymbol.style)\n      };\n    } else {\n      markLineAttrs.endSymbol = {\n        visible: false\n      };\n    }\n\n    const markLine = new MarkLineComponent(markLineAttrs);\n    return markLine as unknown as IGroup;\n  }\n\n  protected _markerLayout() {\n    const spec = this._spec as any;\n    const data = this._markerData;\n    const startRelativeSeries = this._startRelativeSeries;\n    const endRelativeSeries = this._endRelativeSeries;\n    const relativeSeries = this._relativeSeries;\n\n    const isValidCoordinates = isValid(spec.coordinates);\n    const isValidProcess = isValid(spec.process);\n    const isValidProcessX = isValidProcess && isValid(spec.process.x);\n    const isValidProcessY = isValidProcess && isValid(spec.process.y);\n    const isCoordinateLayout = isValidCoordinates && (!isValidProcess || ('process' in spec && 'xy' in spec.process));\n    const isPositionLayout = isValid(spec.positions);\n    const autoRange = spec.autoRange ?? false;\n\n    let points: IPoint[] = [];\n    if (this._isXYLayout || (isValidCoordinates && isValidProcessX) || (isValidCoordinates && isValidProcessY)) {\n      const xyPoints = xyLayout(data, startRelativeSeries, endRelativeSeries, relativeSeries, autoRange);\n      // 这里不同的场景返回的值不同，如果同时声明了 x x1 y y1，会返回两个数值的数组（如 [[{}], [{}]]），所以需要分别处理下\n      points = (xyPoints.length === 1 ? xyPoints[0] : xyPoints.map(point => point[0])) as IPoint[];\n    } else if (isCoordinateLayout) {\n      points = coordinateLayout(data, relativeSeries, autoRange, spec.coordinatesOffset);\n    } else if (isPositionLayout) {\n      points = positionLayout(spec.positions, relativeSeries, spec.regionRelative);\n    }\n\n    const seriesData = this._relativeSeries.getViewData().latestData;\n    const dataPoints =\n      data.latestData[0] && data.latestData[0].latestData ? data.latestData[0].latestData : data.latestData;\n\n    let limitRect;\n    if (spec.clip || spec.label?.confine) {\n      const { minX, maxX, minY, maxY } = computeClipRange([\n        startRelativeSeries.getRegion(),\n        endRelativeSeries.getRegion(),\n        relativeSeries.getRegion()\n      ]);\n      limitRect = {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n    const markerComponentAttr = this._markerComponent?.attribute ?? {};\n    const labelAttrs = {\n      ...markerComponentAttr.label,\n      text: this._spec.label.formatMethod\n        ? this._spec.label.formatMethod(dataPoints, seriesData)\n        : markerComponentAttr.label?.text\n    };\n\n    if ((this._spec as IStepMarkLineSpec).type === 'type-step') {\n      const { multiSegment, mainSegmentIndex } = (this._spec as IStepMarkLineSpec).line || {};\n      const { connectDirection, expandDistance = 0 } = this._spec as IStepMarkLineSpec;\n\n      let expandDistanceValue: number;\n      if (isPercent(expandDistance)) {\n        const regionStart = startRelativeSeries.getRegion();\n        const regionStartLayoutStartPoint = regionStart.getLayoutStartPoint();\n        const regionEnd = endRelativeSeries.getRegion();\n        const regionEndLayoutStartPoint = regionEnd.getLayoutStartPoint();\n\n        if (connectDirection === 'bottom' || connectDirection === 'top') {\n          const regionHeight = Math.abs(\n            Math.min(regionStartLayoutStartPoint.y, regionEndLayoutStartPoint.y) -\n              Math.max(\n                regionStartLayoutStartPoint.y + regionStart.getLayoutRect().height,\n                regionEndLayoutStartPoint.y + regionEnd.getLayoutRect().height\n              )\n          );\n          expandDistanceValue = (Number(expandDistance.substring(0, expandDistance.length - 1)) * regionHeight) / 100;\n        } else {\n          const regionWidth = Math.abs(\n            Math.min(regionStartLayoutStartPoint.x, regionEndLayoutStartPoint.x) -\n              Math.max(\n                regionStartLayoutStartPoint.x + regionStart.getLayoutRect().width,\n                regionEndLayoutStartPoint.x + regionEnd.getLayoutRect().width\n              )\n          );\n          expandDistanceValue = (Number(expandDistance.substring(0, expandDistance.length - 1)) * regionWidth) / 100;\n        }\n      } else {\n        expandDistanceValue = expandDistance as number;\n      }\n\n      const joinPoints = getInsertPoints(points[0], points[1], connectDirection, expandDistanceValue);\n\n      let labelPositionAttrs: any;\n      if (multiSegment && isValid(mainSegmentIndex)) {\n        // 如果用户配置了主线段，则不进行 label 的偏移处理，直接显示在主线段中间\n        labelPositionAttrs = {\n          position: 'middle',\n          autoRotate: false,\n          refX: 0,\n          refY: 0\n        };\n      } else {\n        labelPositionAttrs = {\n          position: 'start',\n          autoRotate: false,\n          ...getTextOffset(points[0], points[1], connectDirection, expandDistanceValue),\n          refX: 0,\n          refY: 0\n        };\n      }\n\n      this._markerComponent?.setAttributes({\n        points: multiSegment\n          ? [\n              [joinPoints[0], joinPoints[1]],\n              [joinPoints[1], joinPoints[2]],\n              [joinPoints[2], joinPoints[3]]\n            ]\n          : joinPoints,\n        label: {\n          ...labelAttrs,\n          ...labelPositionAttrs,\n          textStyle: {\n            ...markerComponentAttr.label.textStyle,\n            textAlign: 'center',\n            textBaseline: 'middle'\n          }\n        },\n        limitRect,\n        multiSegment,\n        mainSegmentIndex,\n        dx: this._layoutOffsetX,\n        dy: this._layoutOffsetY\n      });\n    } else {\n      this._markerComponent?.setAttributes({\n        points: points,\n        label: labelAttrs,\n        limitRect,\n        dx: this._layoutOffsetX,\n        dy: this._layoutOffsetY\n      });\n    }\n  }\n\n  protected _initDataView(): void {\n    const spec = this._spec;\n    const relativeSeries = this._relativeSeries;\n    const isXProcess = 'x' in spec;\n    const isYProcess = 'y' in spec;\n    const isX1Process = 'x1' in spec;\n    const isY1Process = 'y1' in spec;\n    const isCoordinateProcess = 'coordinates' in spec;\n\n    const doXProcess = isXProcess && !isYProcess && !isY1Process;\n    const doXYY1Process = isXProcess && isYProcess && isY1Process;\n    const doYProcess = isYProcess && !isXProcess && !isX1Process;\n    const doYXX1Process = isYProcess && isXProcess && isX1Process;\n    const doXYProcess = isXProcess && isYProcess && isX1Process && isY1Process;\n\n    this._markerData = relativeSeries.getViewData();\n\n    if (!doXProcess && !doYProcess && !doXYY1Process && !doYXX1Process && !doXYProcess && !isCoordinateProcess) {\n      return;\n    }\n\n    registerDataSetInstanceTransform(this._option.dataSet, 'markerAggregation', markerAggregation);\n    registerDataSetInstanceTransform(this._option.dataSet, 'markerRegression', markerRegression);\n    registerDataSetInstanceTransform(this._option.dataSet, 'markerFilter', markerFilter);\n\n    this._isXYLayout = doXProcess || doXYY1Process || doYProcess || doYXX1Process || doXYProcess;\n\n    let options: IOptionAggr[] | IOptionRegr;\n    let processData: DataView = relativeSeries.getViewData();\n    let needAggr: boolean = true;\n    let needRegr: boolean = false;\n\n    if (doXYProcess) {\n      const { x, x1, y, y1 } = spec as IMarkLineXYSpec;\n      options = [this._processSpecXY(x, y), this._processSpecXY(x1, y1)];\n    } else if (doXProcess) {\n      options = [this._processSpecX(spec.x)];\n    } else if (doYProcess) {\n      options = [this._processSpecY(spec.y)];\n    } else if (doXYY1Process) {\n      const { x, y, y1 } = spec as IMarkLineXYY1Spec;\n      options = [this._processSpecXY(x, y), this._processSpecXY(x, y1)];\n    } else if (doYXX1Process) {\n      const { x, x1, y } = spec as IMarkLineYXX1Spec;\n      options = [this._processSpecXY(x, y), this._processSpecXY(x1, y)];\n    } else if (isCoordinateProcess) {\n      options = this._processSpecCoo(spec);\n      needAggr = false;\n      processData = new DataView(this._option.dataSet, { name: `${this.type}_${this.id}_data` })\n        .parse([relativeSeries.getViewData()], {\n          type: 'dataview'\n        })\n        .transform({\n          type: 'markerAggregation',\n          options\n        });\n      if (spec.process && 'x' in spec.process) {\n        options = [this._processSpecX(spec.process.x as unknown as IDataPos)] as unknown as any;\n        needAggr = true;\n      }\n      if (spec.process && 'y' in spec.process) {\n        options = [this._processSpecY(spec.process.y as unknown as IDataPos)] as unknown as any;\n        needAggr = true;\n      }\n      if (spec.process && 'xy' in spec.process) {\n        const { xField, yField } = relativeSeries.getSpec();\n        options = {\n          fieldX: xField,\n          fieldY: yField\n        };\n        needRegr = true;\n      }\n    } else {\n      needAggr = false;\n    }\n\n    const data = new DataView(this._option.dataSet);\n    data.parse([processData], {\n      type: 'dataview'\n    });\n    if (needAggr) {\n      data.transform({\n        type: 'markerAggregation',\n        options\n      });\n    }\n    if (needRegr) {\n      data.transform({\n        type: 'markerRegression',\n        options\n      });\n    }\n\n    if (needAggr || needRegr) {\n      data.transform({\n        type: 'markerFilter',\n        options: this._getAllRelativeSeries()\n      });\n    }\n\n    data.target.on('change', () => {\n      this._markerLayout();\n    });\n    this._markerData = data;\n  }\n}\n\nexport const registerMarkLine = () => {\n  Factory.registerComponent(MarkLine.type, MarkLine);\n};\n"]}