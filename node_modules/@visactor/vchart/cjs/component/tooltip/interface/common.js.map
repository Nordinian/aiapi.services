{"version":3,"sources":["../src/component/tooltip/interface/common.ts"],"names":[],"mappings":";;;AAoBA,IAAY,aAKX;AALD,WAAY,aAAa;IAEvB,uDAAW,CAAA;IAEX,qDAAU,CAAA;AACZ,CAAC,EALW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAKxB","file":"common.js","sourcesContent":["import type { DimensionEventParams } from '../../../event/events/dimension/interface';\nimport type { BaseEventParams } from '../../../event/interface';\nimport type { DimensionTooltipInfo, MarkTooltipInfo } from '../processor/interface';\nimport type { Datum, IShowTooltipOption } from '../../../typings';\nimport type { IComponent } from '../../interface';\n\nexport type TooltipHandlerParams = (BaseEventParams | DimensionEventParams) & {\n  changePositionOnly?: boolean;\n};\n\nexport interface ITooltipActiveTypeAsKeys<T, K> {\n  mark: T;\n  dimension: K;\n}\n\nexport type TotalMouseEventData = {\n  tooltipInfo: Partial<ITooltipActiveTypeAsKeys<MarkTooltipInfo, DimensionTooltipInfo>>;\n  ignore: Partial<ITooltipActiveTypeAsKeys<boolean, boolean>>;\n};\n\nexport enum TooltipResult {\n  /** tooltip 显示成功 */\n  success = 0,\n  /** tooltip 未成功显示 */\n  failed = 1\n}\n\nexport interface ITooltip extends IComponent {\n  getVisible: () => boolean;\n  showTooltip: (datum: Datum, options: IShowTooltipOption) => void;\n}\n"]}