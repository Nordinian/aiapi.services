{"version":3,"sources":["../src/component/tooltip/handler/dom/model/base-tooltip-model.ts"],"names":[],"mappings":"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","file":"base-tooltip-model.js","sourcesContent":["import type { Maybe } from '@visactor/vutils';\nimport type { IToolTipLineActual } from '../../../../../typings';\nimport type { ITooltipModelOption } from './interface';\nimport { domDocument } from '../../../../../util/env';\n\nexport class BaseTooltipModel {\n  static type = 'tooltipModel';\n  static isInstance(obj: any): obj is BaseTooltipModel {\n    if (!obj) {\n      return false;\n    }\n    return obj.type === BaseTooltipModel.type;\n  }\n  readonly type = BaseTooltipModel.type;\n\n  readonly parent: BaseTooltipModel | HTMLElement;\n  readonly childIndex: number;\n\n  protected _option: ITooltipModelOption;\n  setOption(option: ITooltipModelOption) {\n    this._option = option;\n    Object.values(this.children).forEach(c => c.setOption(option));\n  }\n\n  protected _renderContentCache: IToolTipLineActual[] | null = null;\n\n  children: Record<number, BaseTooltipModel> = {};\n\n  product: Maybe<HTMLElement>;\n\n  getParentEl() {\n    if (BaseTooltipModel.isInstance(this.parent)) {\n      return this.parent.product;\n    }\n    return this.parent;\n  }\n\n  constructor(parent: BaseTooltipModel | HTMLElement, option: ITooltipModelOption, childIndex?: number) {\n    this.parent = parent;\n    this._option = option;\n    this.childIndex = childIndex ?? 0;\n  }\n\n  init(classList?: string[], id?: string) {\n    // do nothing\n  }\n\n  initAll() {\n    this.init();\n    Object.values(this.children).forEach(c => c.initAll());\n  }\n\n  setStyle(style?: Partial<CSSStyleDeclaration>) {\n    if (!this.product || !style) {\n      return;\n    }\n    Object.keys(style).forEach(key => {\n      if (this.product!.style[key] !== style[key]) {\n        this.product!.style[key] = style[key];\n      }\n    });\n  }\n\n  setContent(content?: any) {\n    // do nothing\n  }\n\n  setVisibility(visibility: boolean) {\n    if (!this.product) {\n      return;\n    }\n    const { style } = this.product;\n    if (visibility) {\n      style.visibility = 'visible';\n    } else {\n      style.visibility = 'hidden';\n    }\n    Object.values(this.children).forEach(c => c.setVisibility(visibility));\n  }\n\n  getVisibility() {\n    if (!this.product?.style?.visibility) {\n      return false;\n    }\n    return this.product.style.visibility !== 'hidden';\n  }\n\n  release() {\n    Object.values(this.children).forEach(c => c.release());\n    this.children = {};\n    if (this.product) {\n      try {\n        this.getParentEl()?.removeChild(this.product);\n      } catch {}\n      this.product = null;\n    }\n  }\n\n  protected createElement(\n    tag: keyof HTMLElementTagNameMap,\n    classList?: string[],\n    style?: Partial<CSSStyleDeclaration>,\n    id?: string\n  ) {\n    const element = domDocument?.createElement(tag);\n    const parentEl = this.getParentEl();\n    if (!element || !parentEl) {\n      return undefined;\n    }\n\n    if (classList) {\n      element.classList.add(...classList);\n    }\n    if (style) {\n      Object.keys(style).forEach(key => {\n        element.style[key] = style[key];\n      });\n    }\n    if (id) {\n      element.id = id;\n    }\n\n    let ptr = this.childIndex;\n    if (BaseTooltipModel.isInstance(this.parent)) {\n      // 按照自身 childIndex 插入对应位置\n      let nextChildIndex = Number.MAX_VALUE;\n      for (let i = 0; i < parentEl.children.length; i++) {\n        const childModel = Object.values(this.parent.children).find(c => c.product === parentEl.children[i])!;\n        if (childModel.childIndex > this.childIndex && childModel.childIndex < nextChildIndex) {\n          nextChildIndex = childModel.childIndex;\n          ptr = i;\n        }\n      }\n    }\n    if (ptr >= parentEl.children.length) {\n      parentEl.appendChild(element);\n    } else {\n      parentEl.insertBefore(element, parentEl.children[ptr]);\n    }\n    return element;\n  }\n}\n"]}