{"version":3,"sources":["../src/series/polar/animation.ts"],"names":[],"mappings":"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","file":"animation.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport type { EasingType } from '@visactor/vrender-core';\nimport type { IPointLike } from '@visactor/vutils';\nimport { ACustomAnimate, TagPointsUpdate } from '@visactor/vrender-core';\nimport { Point, isFunction, isValidNumber } from '@visactor/vutils';\nimport type { IPolarAxisHelper } from '../../component/axis';\n\nexport class PolarPointUpdate extends ACustomAnimate<{ x: number; y: number }> {\n  declare valid: boolean;\n\n  private _fromAngle: number;\n  private _fromRadius: number;\n\n  private _toAngle: number;\n  private _toRadius: number;\n\n  private _pointToCoord: IPolarAxisHelper['pointToCoord'];\n  private _coordToPoint: IPolarAxisHelper['coordToPoint'];\n\n  constructor(\n    from: { x: number; y: number },\n    to: { x: number; y: number },\n    duration: number,\n    easing: EasingType,\n    params: {\n      pointToCoord: IPolarAxisHelper['pointToCoord'];\n      coordToPoint: IPolarAxisHelper['coordToPoint'];\n    }\n  ) {\n    super(from, to, duration, easing, params);\n\n    const pointToCoord = this.params.pointToCoord as IPolarAxisHelper['pointToCoord'];\n    const coordToPoint = this.params.coordToPoint as IPolarAxisHelper['coordToPoint'];\n\n    if (!isFunction(pointToCoord) || !isFunction(coordToPoint)) {\n      this.valid = false;\n    }\n    this._pointToCoord = pointToCoord;\n    this._coordToPoint = coordToPoint;\n  }\n\n  getEndProps(): Record<string, any> {\n    if (this.valid === false) {\n      return {};\n    }\n\n    return this._coordToPoint({ angle: this._toAngle, radius: this._toRadius });\n  }\n\n  onBind(): void {\n    const { angle: fromAngle, radius: fromRadius } = this._pointToCoord(this.from);\n    if (!isValidNumber(fromAngle * fromRadius)) {\n      this.valid = false;\n    }\n    this._fromAngle = fromAngle;\n    this._fromRadius = fromRadius;\n\n    const { angle: toAngle, radius: toRadius } = this._pointToCoord(this.to);\n    if (!isValidNumber(toAngle * toRadius)) {\n      this.valid = false;\n    }\n    this._toAngle = toAngle;\n    this._toRadius = toRadius;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.valid === false) {\n      return;\n    }\n    if (end) {\n      const { x, y } = this.getEndProps();\n      out.x = x;\n      out.y = y;\n    } else {\n      const { x, y } = this._coordToPoint({\n        angle: this._fromAngle + (this._toAngle - this._fromAngle) * ratio,\n        radius: this._fromRadius + (this._toRadius - this._fromRadius) * ratio\n      });\n      out.x = x;\n      out.y = y;\n    }\n  }\n}\n\n// @ts-ignore\n// FIXME: some private attribute should be changed to protected for better inheritance\nexport class PolarTagPointsUpdate extends TagPointsUpdate {\n  private declare points: IPointLike[];\n  private declare interpolatePoints: [IPointLike, IPointLike][];\n\n  private _pointToCoord: IPolarAxisHelper['pointToCoord'];\n  private _coordToPoint: IPolarAxisHelper['coordToPoint'];\n\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params?: {\n      newPointAnimateType?: 'grow' | 'appear';\n      pointToCoord: IPolarAxisHelper['pointToCoord'];\n      coordToPoint: IPolarAxisHelper['coordToPoint'];\n    }\n  ) {\n    super(from, to, duration, easing, params);\n    const pointToCoord = this.params.pointToCoord as IPolarAxisHelper['pointToCoord'];\n    const coordToPoint = this.params.coordToPoint as IPolarAxisHelper['coordToPoint'];\n    this._pointToCoord = pointToCoord;\n    this._coordToPoint = coordToPoint;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // if not create new points, multi points animation might not work well.\n    this.points = this.points.map((point, index) => {\n      const newPoint = this.polarPointInterpolation(\n        this.interpolatePoints[index][0],\n        this.interpolatePoints[index][1],\n        ratio\n      );\n\n      newPoint.context = point.context;\n      return newPoint;\n    });\n    out.points = this.points;\n  }\n\n  private polarPointInterpolation(pointA: IPointLike, pointB: IPointLike, ratio: number): IPointLike {\n    const polarPointA0 = this._pointToCoord(pointA);\n    const polarPointA1 = this._pointToCoord({ x: pointA.x1, y: pointA.y1 });\n\n    const polarPointB0 = this._pointToCoord(pointB);\n    const polarPointB1 = this._pointToCoord({ x: pointB.x1, y: pointB.y1 });\n\n    const angle0 = polarPointA0.angle + (polarPointB0.angle - polarPointA0.angle) * ratio;\n    const radius0 = polarPointA0.radius + (polarPointB0.radius - polarPointA0.radius) * ratio;\n\n    const angle1 = polarPointA1.angle + (polarPointB1.angle - polarPointA1.angle) * ratio;\n    const radius1 = polarPointA1.radius + (polarPointB1.radius - polarPointA1.radius) * ratio;\n\n    const { x, y } = this._coordToPoint({ angle: angle0, radius: radius0 });\n    const { x: x1, y: y1 } = this._coordToPoint({ angle: angle1, radius: radius1 });\n\n    const point = new Point(x as number, y as number, x1, y1);\n    point.defined = pointB.defined;\n    return point;\n  }\n}\n"]}