{"version":3,"sources":["../src/series/progress/linear/tooltip-helper.ts"],"names":[],"mappings":";;;AAAA,8DAAoE;AAKpE,MAAa,iCAAkC,SAAQ,wCAAuB;IAE5E,wBAAwB,CAAC,UAA6B,EAAE,aAAgC;QACtF,MAAM,MAAM,GAAG,KAAK,CAAC,wBAAwB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QACzE,IAAI,UAAU,KAAK,MAAM,EAAE;YACzB,OAAO,MAAM,CAAC;SACf;QACD,IAAI,UAAU,KAAK,WAAW,EAAE;YAC9B,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,OAAO,MAAM,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAbD,8EAaC","file":"tooltip-helper.js","sourcesContent":["import { BaseSeriesTooltipHelper } from '../../base/tooltip-helper';\nimport type { ISeriesTooltipHelper } from '../../interface';\nimport type { ITooltipPattern, TooltipActiveType } from '../../../typings';\nimport type { IDimensionInfo } from '../../../event/events/dimension/interface';\n\nexport class LinearProgressSeriesTooltipHelper extends BaseSeriesTooltipHelper implements ISeriesTooltipHelper {\n  /** 获取默认的tooltip pattern */\n  getDefaultTooltipPattern(activeType: TooltipActiveType, dimensionInfo?: IDimensionInfo[]): ITooltipPattern | null {\n    const result = super.getDefaultTooltipPattern(activeType, dimensionInfo);\n    if (activeType === 'mark') {\n      return result;\n    }\n    if (activeType === 'dimension') {\n      result.visible = false;\n      return result;\n    }\n    return null;\n  }\n}\n"]}