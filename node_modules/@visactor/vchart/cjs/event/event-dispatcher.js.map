{"version":3,"sources":["../src/event/event-dispatcher.ts"],"names":[],"mappings":"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","file":"event-dispatcher.js","sourcesContent":["import { Bubble } from './bubble';\nimport { isValid, debounce, throttle, get, isFunction } from '@visactor/vutils';\nimport { BASE_EVENTS, ChartEvent, Event_Bubble_Level, Event_Source_Type, VGRAMMAR_HOOK_EVENT } from '../constant/event';\nimport type {\n  EventType,\n  EventQuery,\n  EventHandler,\n  EventParamsDefinition,\n  IEventDispatcher,\n  EventBubbleLevel,\n  BaseEventParams,\n  EventParams,\n  EventFilter,\n  EventSourceType\n} from './interface';\nimport type { VChart } from '../core/vchart';\nimport type { CompilerListenerParameters } from '../compile/interface';\nimport type { Compiler } from '../compile/compiler';\nimport type { StringOrNumber } from '../typings';\n\nconst componentTypeMap = {\n  cartesianAxis: 'axis',\n  'cartesianAxis-band': 'axis',\n  'cartesianAxis-linear': 'axis',\n  'cartesianAxis-time': 'axis',\n  polarAxis: 'axis',\n  'polarAxis-band': 'axis',\n  'polarAxis-linear': 'axis',\n  discreteLegend: 'legend',\n  continuousLegend: 'legend',\n  colorLegend: 'legend',\n  sizeLegend: 'legend',\n  label: 'label'\n};\n\nexport class EventDispatcher implements IEventDispatcher {\n  globalInstance: VChart;\n\n  // view 事件与 window 事件视作为不同类型的事件信息，进行独立的冒泡处理\n  private _viewBubbles: Map<EventType, Bubble> = new Map<EventType, Bubble>();\n  private _windowBubbles: Map<EventType, Bubble> = new Map<EventType, Bubble>();\n  private _canvasBubbles: Map<EventType, Bubble> = new Map<EventType, Bubble>();\n\n  private _viewListeners: Map<string, (params: CompilerListenerParameters) => void> = new Map<\n    string,\n    (params: CompilerListenerParameters) => void\n  >();\n  private _windowListeners: Map<string, (params: CompilerListenerParameters) => void> = new Map<\n    string,\n    (params: CompilerListenerParameters) => void\n  >();\n  private _canvasListeners: Map<string, (params: CompilerListenerParameters) => void> = new Map<\n    string,\n    (params: CompilerListenerParameters) => void\n  >();\n\n  private _compiler: Compiler;\n\n  constructor(vchart: VChart, compiler: Compiler) {\n    this.globalInstance = vchart;\n    this._compiler = compiler;\n  }\n\n  register<Evt extends EventType>(eType: Evt, handler: EventHandler<EventParamsDefinition[Evt]>): this {\n    // 解析 query 配置并生成最终 handler 内容\n    this._parseQuery(handler);\n    // view/window 事件做独立的处理\n    const bubbles = this.getEventBubble(handler.filter?.source || Event_Source_Type.chart);\n    const listeners = this.getEventListeners(handler.filter?.source || Event_Source_Type.chart);\n\n    if (!bubbles.get(eType)) {\n      bubbles.set(eType, new Bubble());\n    }\n\n    // 挂载事件监听\n    const bubble = bubbles.get(eType) as Bubble;\n    bubble.addHandler(handler, handler.filter?.level as EventBubbleLevel);\n    if (this._isValidEvent(eType) && !listeners.has(eType)) {\n      const callback = this._onDelegate.bind(this);\n      this._compiler.addEventListener(handler.filter?.source as EventSourceType, eType, callback);\n      listeners.set(eType, callback);\n    }\n    return this;\n  }\n\n  unregister<Evt extends EventType>(eType: Evt, handler?: EventHandler<EventParamsDefinition[Evt]>): this {\n    let clean: boolean = false;\n    // view/window 事件做独立的处理\n    const bubbles = this.getEventBubble(handler?.filter?.source || Event_Source_Type.chart);\n    const listeners = this.getEventListeners(handler?.filter?.source || Event_Source_Type.chart);\n\n    if (!handler) {\n      const bubble = bubbles.get(eType);\n      bubble?.release();\n      bubbles.delete(eType);\n      clean = true;\n    } else {\n      const bubble = bubbles.get(eType);\n      bubble?.removeHandler(handler);\n      if (bubble?.getCount() === 0) {\n        bubble?.release();\n        bubbles.delete(eType);\n        clean = true;\n      }\n\n      if ((handler?.wrappedCallback as any)?.cancel) {\n        // 取消debounce/throttle事件，释放闭包内部的上下文对象\n        (handler.wrappedCallback as any).cancel();\n      }\n    }\n    // 某个事件下所有的监听取消之后删除语法层事件的代理\n    if (clean && this._isValidEvent(eType)) {\n      const callback = listeners.get(eType) as (params: CompilerListenerParameters) => void;\n      this._compiler.removeEventListener(handler?.filter?.source || Event_Source_Type.chart, eType, callback);\n      listeners.delete(eType);\n    }\n    return this;\n  }\n\n  dispatch<Evt extends EventType>(eType: Evt, params: EventParamsDefinition[Evt], level?: EventBubbleLevel): this {\n    // 默认事件类别为 view\n    const bubble = this.getEventBubble((params as BaseEventParams).source || Event_Source_Type.chart).get(\n      eType\n    ) as Bubble;\n    // 没有任何监听事件时，bubble 不存在\n    if (!bubble) {\n      return this;\n    }\n\n    // 事件冒泡逻辑：Mark -> Model -> Chart -> VChart\n    let stopBubble: boolean = false;\n\n    if (level) {\n      // 如果指定了 level，则直接处理，不进行冒泡\n      const handlers = bubble.getHandlers(level);\n      stopBubble = this._invoke(handlers, eType, params);\n    } else {\n      // Mark 级别的事件只包含对语法层代理的基础事件\n      const handlers = bubble.getHandlers(Event_Bubble_Level.mark);\n      stopBubble = this._invoke(handlers, eType, params);\n\n      if (!stopBubble) {\n        const handlers = bubble.getHandlers(Event_Bubble_Level.model);\n        stopBubble = this._invoke(handlers, eType, params);\n      }\n      if (!stopBubble) {\n        const handlers = bubble.getHandlers(Event_Bubble_Level.chart);\n        stopBubble = this._invoke(handlers, eType, params);\n      }\n      if (!stopBubble) {\n        const handlers = bubble.getHandlers(Event_Bubble_Level.vchart);\n        stopBubble = this._invoke(handlers, eType, params);\n      }\n    }\n\n    return this;\n  }\n\n  release(): void {\n    for (const entry of this._viewListeners.entries()) {\n      this._compiler.removeEventListener(Event_Source_Type.chart, entry[0], entry[1]);\n    }\n    this._viewListeners.clear();\n    for (const entry of this._windowListeners.entries()) {\n      this._compiler.removeEventListener(Event_Source_Type.window, entry[0], entry[1]);\n    }\n    this._windowListeners.clear();\n    for (const entry of this._canvasListeners.entries()) {\n      this._compiler.removeEventListener(Event_Source_Type.canvas, entry[0], entry[1]);\n    }\n    this._canvasListeners.clear();\n    for (const bubble of this._viewBubbles.values()) {\n      bubble.release();\n    }\n    this._viewBubbles.clear();\n    for (const bubble of this._windowBubbles.values()) {\n      bubble.release();\n    }\n    this._windowBubbles.clear();\n    for (const bubble of this._canvasBubbles.values()) {\n      bubble.release();\n    }\n    this._canvasBubbles.clear();\n  }\n\n  /**\n   * 基于转换后的事件筛选配置过滤需要调用的 handler\n   */\n  private _filter<Evt extends EventType>(filter: EventFilter, evt: Evt, params: EventParamsDefinition[Evt]): boolean {\n    if (isFunction(filter.filter) && !filter.filter(params)) {\n      return false;\n    }\n\n    // 事件 level 不需要筛选，在冒泡流程中已经处理了 level 的逻辑\n    if (filter.nodeName && get(params, 'node.name') !== filter.nodeName) {\n      return false;\n    }\n\n    if (filter.markName && (params as BaseEventParams)?.mark?.name !== filter.markName) {\n      // 对于 markName 的筛选需要包含所有父级 mark 的 name\n      return false;\n    }\n\n    let modelType = params.model?.type;\n    if (componentTypeMap[modelType]) {\n      modelType = componentTypeMap[modelType];\n    }\n    if (filter.type && modelType !== filter.type) {\n      return false;\n    }\n\n    // 如果配置了 level 为 'mark' 并且没有配置 type，则只在事件参数中包含了 mark 时才触发\n    if (filter.level === 'mark' && !filter.type && !(params as BaseEventParams)?.mark) {\n      return false;\n    }\n\n    // 如果配置了 level 为 'model' 并且没有配置 type，则只在事件参数中包含了 model 时才触发\n    if (filter.level === 'model' && !filter.type && !(params as BaseEventParams)?.model) {\n      return false;\n    }\n\n    if (isValid(filter.userId) && params.model?.userId !== filter.userId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private _prepareParams<Evt extends EventType>(\n    filter: EventFilter,\n    params: EventParamsDefinition[Evt]\n  ): EventParamsDefinition[Evt] {\n    // 如果针对于 mark 做了筛选，则事件参数转为筛选器制定的父级 mark\n    if (filter.markName && params.mark && (params as BaseEventParams).itemMap) {\n      const markId = params.mark.getProductId();\n      const item = (params as BaseEventParams).itemMap.get(markId);\n      const datum = item?.getDatum();\n      return { ...params, item, datum };\n    }\n    return { ...params };\n  }\n\n  /**\n   * 代理语法层事件的监听回调\n   */\n  private _onDelegate(listenerParams: CompilerListenerParameters) {\n    const chart = this.globalInstance.getChart();\n    const model = (isValid(listenerParams.modelId) && chart?.getModelById(listenerParams.modelId)) || undefined;\n    const mark = (isValid(listenerParams.markId) && chart?.getMarkById(listenerParams.markId)) || null;\n\n    // FIXME: 这里操作的应当是场景树结构，与 vgrammar 结构无关\n    // 遍历取到所有父级的 mark 以支持子元素响应父元素事件\n    const itemMap = new Map<string, any>();\n    let targetMark: any = listenerParams.item?.mark;\n    if (targetMark && isValid(targetMark.id())) {\n      itemMap.set(targetMark.id(), listenerParams.item);\n    }\n    while (targetMark?.elements) {\n      const id = targetMark.id();\n      // 由于父级的 markName 可能重复，因此只取最近的父级 mark\n      if (isValid(id) && !itemMap.has(id)) {\n        itemMap.set(id, targetMark.elements[0]);\n      }\n      targetMark = targetMark.group;\n    }\n\n    const params: BaseEventParams = {\n      event: listenerParams.event,\n      item: listenerParams.item,\n      datum: listenerParams.datum,\n      source: listenerParams.source,\n      itemMap,\n      chart,\n      model,\n      mark: mark ?? undefined,\n      node: get(listenerParams.event, 'target')\n    };\n    this.dispatch(listenerParams.type, params);\n  }\n\n  /**\n   * 调用相应事件监听下的 handlers\n   */\n  private _invoke<Evt extends EventType>(\n    handlers: EventHandler<EventParams>[],\n    type: EventType,\n    params: EventParamsDefinition[Evt]\n  ): boolean {\n    const result = handlers.map(handler => {\n      const filter = handler.filter as EventFilter;\n      if (!handler.query || this._filter(filter, type, params)) {\n        const callback = handler.wrappedCallback || handler.callback;\n        const stopBubble = callback.call(null, this._prepareParams(filter, params));\n        const doStopBubble = stopBubble ?? handler.query?.consume;\n        if (doStopBubble) {\n          (params as BaseEventParams).event?.stopPropagation();\n          (params as BaseEventParams).event?.preventDefault();\n        }\n        return !!doStopBubble;\n      }\n      return undefined;\n    });\n    // 如果某个事件回调阻止了冒泡，则阻止更高级别事件的调用过程\n    return result.some(r => r === true);\n  }\n\n  /**\n   * 依据事件 query 得到事件冒泡层级\n   */\n  private _getQueryLevel(query: EventQuery | null): EventBubbleLevel {\n    // 事件默认监听在 vchart 层\n    if (!query) {\n      return Event_Bubble_Level.vchart;\n    }\n    if (query.level) {\n      return query.level;\n    }\n    if (isValid(query.id)) {\n      return Event_Bubble_Level.model;\n    }\n\n    return Event_Bubble_Level.vchart;\n  }\n\n  /**\n   * 将用户 query 配置转换为最终事件筛选参数\n   */\n  private _parseQuery(handler: EventHandler<EventParams>): EventHandler<EventParams> {\n    const query = handler.query;\n    // 处理 query 带来的函数封装\n    if (query?.throttle) {\n      handler.wrappedCallback = throttle(handler.callback, query.throttle);\n    } else if (query?.debounce) {\n      handler.wrappedCallback = debounce(handler.callback, query.debounce);\n    }\n    let level = this._getQueryLevel(query);\n    let type: string | null = null;\n    let source: EventSourceType = Event_Source_Type.chart;\n    let nodeName: string | null = null;\n    let markName: string | null = null;\n    let userId: StringOrNumber | null = null;\n\n    if (query?.nodeName) {\n      nodeName = query.nodeName;\n    }\n\n    if (query?.markName) {\n      markName = query.markName;\n    }\n\n    if (query?.type && (level === Event_Bubble_Level.model || level === Event_Bubble_Level.mark)) {\n      type = query.type;\n    }\n    if (query?.source) {\n      source = query.source;\n    }\n\n    if (isValid(query?.id)) {\n      userId = query?.id;\n      level = Event_Bubble_Level.model; // 如果用户配置了 id，那么默认 level 为 model\n    }\n    handler.filter = {\n      level,\n      markName,\n      type,\n      source,\n      nodeName,\n      userId,\n      filter: query?.filter ?? null\n    };\n    return handler;\n  }\n\n  private getEventBubble(source: EventSourceType) {\n    switch (source) {\n      case Event_Source_Type.chart:\n        return this._viewBubbles;\n      case Event_Source_Type.window:\n        return this._windowBubbles;\n      case Event_Source_Type.canvas:\n        return this._canvasBubbles;\n      default:\n        return this._viewBubbles;\n    }\n  }\n\n  private getEventListeners(source: EventSourceType) {\n    switch (source) {\n      case Event_Source_Type.chart:\n        return this._viewListeners;\n      case Event_Source_Type.window:\n        return this._windowListeners;\n      case Event_Source_Type.canvas:\n        return this._canvasListeners;\n      default:\n        return this._viewListeners;\n    }\n  }\n\n  private _isValidEvent(eType: string) {\n    return (\n      BASE_EVENTS.includes(eType) ||\n      (Object.values(VGRAMMAR_HOOK_EVENT) as string[]).includes(eType) ||\n      (Object.values(ChartEvent) as string[]).includes(eType)\n    );\n  }\n}\n"]}