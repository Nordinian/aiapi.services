import { CartesianChartSpecTransformer } from "../cartesian";

import { setDefaultCrosshairForCartesianChart } from "../util";

export class BoxPlotChartSpecTransformer extends CartesianChartSpecTransformer {
    _getDefaultSeriesSpec(spec) {
        var _a;
        const dataFields = [ spec.maxField, spec.medianField, spec.q1Field, spec.q3Field, spec.minField, spec.outliersField ], seriesSpec = Object.assign(Object.assign({}, super._getDefaultSeriesSpec(spec)), {
            boxPlot: spec.boxPlot,
            direction: null !== (_a = spec.direction) && void 0 !== _a ? _a : "vertical",
            minField: spec.minField,
            maxField: spec.maxField,
            q1Field: spec.q1Field,
            medianField: spec.medianField,
            q3Field: spec.q3Field,
            outliersField: spec.outliersField,
            outliersStyle: spec.outliersStyle
        });
        return seriesSpec["vertical" === seriesSpec.direction ? "yField" : "xField"] = dataFields, 
        seriesSpec;
    }
    transformSpec(spec) {
        super.transformSpec(spec), spec.axes || (spec.axes = [ {
            orient: "bottom"
        }, {
            orient: "left"
        } ]), setDefaultCrosshairForCartesianChart(spec);
    }
}
//# sourceMappingURL=box-plot-transformer.js.map
