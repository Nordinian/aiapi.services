{"version":3,"sources":["../src/chart/funnel/funnel-transformer.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAC;AAGnD,MAAM,OAAO,0BAAuD,SAAQ,wBAA2B;IAC3F,QAAQ;QAChB,OAAO,KAAK,CAAC;IACf,CAAC;IAES,qBAAqB,CAAC,IAAO;QACrC,MAAM,MAAM,mCACP,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAEpC,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,EAE7B,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,YAAY,EAAE,IAAI,CAAC,YAAY,EAE/B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,cAAc,EAAE,IAAI,CAAC,cAAc,EAEnC,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,KAAK,EAAE,IAAI,CAAC,KAAK,GAClB,CAAC;QACF,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,UAAU,EAAE;YACd,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;YACzB,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;SACvC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,MAAM,GAAG,CAAC,iBAAiB,CAAC,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;oBAChC,OAAO;iBACR;gBACD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACzC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;wBACb,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;qBAC7B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF","file":"funnel-transformer.js","sourcesContent":["import type { IFunnelSeriesSpec } from '../../series';\nimport type { ISeriesSpec } from '../../typings';\nimport { BaseChartSpecTransformer } from '../base';\nimport type { IFunnelChartSpec } from './interface';\n\nexport class FunnelChartSpecTransformer<T extends IFunnelChartSpec> extends BaseChartSpecTransformer<T> {\n  protected needAxes(): boolean {\n    return false;\n  }\n\n  protected _getDefaultSeriesSpec(spec: T): IFunnelSeriesSpec {\n    const series: any = {\n      ...super._getDefaultSeriesSpec(spec),\n\n      categoryField: spec.categoryField,\n      valueField: spec.valueField,\n      seriesField: spec.seriesField,\n\n      funnelAlign: spec.funnelAlign,\n      funnelOrient: spec.funnelOrient,\n\n      shape: spec.shape,\n      funnel: spec.funnel,\n      transform: spec.transform,\n      outerLabel: spec.outerLabel,\n      transformLabel: spec.transformLabel,\n\n      isTransform: spec.isTransform,\n      maxSize: spec.maxSize,\n      minSize: spec.minSize,\n      gap: spec.gap,\n      isCone: spec.isCone,\n      range: spec.range\n    };\n    const seriesType = this.seriesType;\n    if (seriesType) {\n      series.type = seriesType;\n      series[seriesType] = spec[seriesType];\n    }\n\n    return series;\n  }\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n\n    const defaultSeriesSpec = this._getDefaultSeriesSpec(spec);\n    if (!spec.series || spec.series.length === 0) {\n      spec.series = [defaultSeriesSpec];\n    } else {\n      spec.series.forEach((s: ISeriesSpec) => {\n        if (!this._isValidSeries(s.type)) {\n          return;\n        }\n        Object.keys(defaultSeriesSpec).forEach(k => {\n          if (!(k in s)) {\n            s[k] = defaultSeriesSpec[k];\n          }\n        });\n      });\n    }\n  }\n}\n"]}