{"version":3,"sources":["../src/model/tooltip-helper.ts"],"names":[],"mappings":"AAuBA,MAAM,OAAgB,iBAAiB;IAAvC;QAIE,qBAAgB,GAAG;YACjB,IAAI,EAAE,IAAI,GAAG,EAAkB;YAC/B,SAAS,EAAE,IAAI,GAAG,EAAkB;SACrC,CAAC;QACF,qBAAgB,GAAG;YACjB,IAAI,EAAE,IAAI,GAAG,EAAkB;YAC/B,SAAS,EAAE,IAAI,GAAG,EAAkB;SACrC,CAAC;IAGJ,CAAC;CAAA","file":"tooltip-helper.js","sourcesContent":["import type { ITooltipActiveTypeAsKeys, ITooltipSpec } from '../component/tooltip/interface';\nimport type { TooltipActiveType } from '../typings';\nimport type { IModel } from './interface';\nimport type { IMark } from '../mark/interface';\n\nexport type TooltipTrigger = IModel | IMark;\n\nexport interface ITooltipHelper {\n  /** tooltip对应spec */\n  spec: ITooltipSpec | undefined;\n\n  /** 实际生效的tooltip activeType */\n  activeType: TooltipActiveType[];\n\n  /** 可以响应mark tooltip或者dimension tooltip的对象 */\n  activeTriggerSet: ITooltipActiveTypeAsKeys<Set<TooltipTrigger>, Set<TooltipTrigger>>;\n  /** 不响应tooltip且不会影响已有tooltip的对象 */\n  ignoreTriggerSet: ITooltipActiveTypeAsKeys<Set<TooltipTrigger>, Set<TooltipTrigger>>;\n\n  /** 更新spec */\n  updateTooltipSpec: () => void;\n}\n\nexport abstract class BaseTooltipHelper implements ITooltipHelper {\n  spec: ITooltipSpec | undefined;\n  activeType: TooltipActiveType[];\n\n  activeTriggerSet = {\n    mark: new Set<TooltipTrigger>(),\n    dimension: new Set<TooltipTrigger>()\n  };\n  ignoreTriggerSet = {\n    mark: new Set<TooltipTrigger>(),\n    dimension: new Set<TooltipTrigger>()\n  };\n\n  abstract updateTooltipSpec(): void;\n}\n"]}