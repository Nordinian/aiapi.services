import { DataView } from "@visactor/vdataset";

import { ThemeManager } from "../../theme";

import { isObject, isString } from "@visactor/vutils";

export function isDataView(obj) {
    return obj instanceof DataView;
}

export function isHTMLElement(obj) {
    try {
        return obj instanceof Element;
    } catch (_a) {
        const htmlElementKeys = [ "children", "innerHTML", "classList", "setAttribute", "tagName", "getBoundingClientRect" ], keys = Object.keys(obj);
        return htmlElementKeys.every((key => keys.includes(key)));
    }
}

export function getThemeObject(theme, transformed) {
    return isString(theme) ? ThemeManager.themeExist(theme) ? ThemeManager.getTheme(theme, transformed) : {} : isObject(theme) ? theme : {};
}
//# sourceMappingURL=common.js.map
