{"version":3,"sources":["../src/series/cartesian/cartesian.ts"],"names":[],"mappings":"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","file":"cartesian.js","sourcesContent":["import type { DataView } from '@visactor/vdataset';\nimport type { ICartesianSeries } from '../interface';\nimport { BaseSeries } from '../base/base-series';\nimport type { IPoint } from '../../typings/coordinate';\nimport type { IBaseScale } from '@visactor/vscale';\nimport {\n  STACK_FIELD_END,\n  STACK_FIELD_END_PERCENT,\n  STACK_FIELD_END_OffsetSilhouette,\n  STACK_FIELD_START,\n  STACK_FIELD_START_PERCENT,\n  STACK_FIELD_START_OffsetSilhouette,\n  PREFIX\n} from '../../constant';\nimport type { IAxisHelper } from '../../component/axis/cartesian/interface';\nimport type { DirectionType } from '../../typings/space';\n// eslint-disable-next-line no-duplicate-imports\nimport { Direction } from '../../typings/space';\nimport type { Datum, StringOrNumber } from '../../typings';\nimport { couldBeValidNumber } from '../../util/type';\nimport { array, isValid } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { isContinuous } from '@visactor/vscale';\nimport type { StatisticOperations } from '../../data/transforms/dimension-statistics';\nimport type { ICartesianSeriesSpec } from './interface';\nimport { sortDataInAxisHelper } from '../util/utils';\nimport type { IAxisLocationCfg } from '../../component/axis';\n\nexport abstract class CartesianSeries<T extends ICartesianSeriesSpec = ICartesianSeriesSpec>\n  extends BaseSeries<T>\n  implements ICartesianSeries\n{\n  readonly coordinate: 'cartesian' = 'cartesian';\n  protected _bandPosition = 0.5;\n  protected _scaleConfig: IAxisLocationCfg = {\n    bandPosition: this._bandPosition\n  };\n  protected _buildScaleConfig() {\n    this._scaleConfig = {\n      bandPosition: this._bandPosition\n    };\n  }\n\n  protected _fieldX!: string[];\n  get fieldX() {\n    return this._fieldX;\n  }\n  setFieldX(f: string | string[]) {\n    this._fieldX = array(f);\n  }\n\n  protected _fieldY!: string[];\n  get fieldY() {\n    return this._fieldY;\n  }\n  setFieldY(f: string | string[]) {\n    this._fieldY = array(f);\n  }\n\n  protected _fieldZ?: string[];\n  get fieldZ(): string[] | undefined {\n    return this._fieldZ;\n  }\n  setFieldZ(f?: string | string[]) {\n    this._fieldZ = f && array(f);\n  }\n\n  protected _fieldX2!: string;\n  get fieldX2() {\n    return this._fieldX2;\n  }\n  setFieldX2(f: string) {\n    this._fieldX2 = f;\n  }\n\n  protected _fieldY2!: string;\n  get fieldY2() {\n    return this._fieldY2;\n  }\n  setFieldY2(f: string) {\n    this._fieldY2 = f;\n  }\n\n  protected _specXField: string[];\n  protected _specYField: string[];\n\n  protected _direction: DirectionType = Direction.vertical;\n  get direction() {\n    return this._direction;\n  }\n\n  protected _scaleX!: IBaseScale;\n  get scaleX() {\n    return this._scaleX;\n  }\n  setScaleX(s: IBaseScale) {\n    this._scaleX = s;\n  }\n\n  protected _scaleY!: IBaseScale;\n  get scaleY() {\n    return this._scaleY;\n  }\n  setScaleY(s: IBaseScale) {\n    this._scaleY = s;\n  }\n\n  protected _scaleZ?: IBaseScale;\n  get scaleZ() {\n    return this._scaleZ;\n  }\n  setScaleZ(s: IBaseScale) {\n    this._scaleZ = s;\n  }\n\n  _xAxisHelper!: IAxisHelper;\n  getXAxisHelper() {\n    return this._xAxisHelper;\n  }\n  setXAxisHelper(h: IAxisHelper) {\n    this._xAxisHelper = h;\n    this.onXAxisHelperUpdate();\n  }\n\n  _yAxisHelper!: IAxisHelper;\n  getYAxisHelper() {\n    return this._yAxisHelper;\n  }\n  setYAxisHelper(h: IAxisHelper) {\n    this._yAxisHelper = h;\n    this.onYAxisHelperUpdate();\n  }\n\n  _zAxisHelper?: IAxisHelper;\n  getZAxisHelper() {\n    return this._zAxisHelper;\n  }\n  setZAxisHelper(h: IAxisHelper) {\n    this._zAxisHelper = h;\n    this.onYAxisHelperUpdate();\n  }\n\n  protected _sortDataByAxis: boolean = false;\n  get sortDataByAxis() {\n    return this._sortDataByAxis;\n  }\n\n  getStatisticFields() {\n    const fields: { key: string; operations: StatisticOperations }[] = [];\n    if (this.getXAxisHelper()?.getScale) {\n      (this._fieldX2 ? [...this._fieldX, this._fieldX2] : this._fieldX).forEach(f => {\n        const result: { key: string; operations: Array<'max' | 'min' | 'values'> } = { key: f, operations: [] };\n        if (isContinuous(this.getXAxisHelper().getScale(0).type)) {\n          result.operations = ['max', 'min'];\n        } else {\n          result.operations = ['values'];\n        }\n        fields.push(result);\n      });\n    }\n    if (this.getYAxisHelper()?.getScale) {\n      (this._fieldY2 ? [...this._fieldY, this._fieldY2] : this._fieldY).forEach(f => {\n        const result: { key: string; operations: Array<'max' | 'min' | 'values'> } = { key: f, operations: [] };\n        if (isContinuous(this.getYAxisHelper().getScale(0).type)) {\n          result.operations = ['max', 'min'];\n        } else {\n          result.operations = ['values'];\n        }\n        fields.push(result);\n      });\n    }\n    if (this._fieldZ && this.getZAxisHelper()?.getScale) {\n      this._fieldZ.forEach(f => {\n        const result: { key: string; operations: Array<'max' | 'min' | 'values'> } = { key: f, operations: [] };\n        if (isContinuous(this.getZAxisHelper().getScale(0).type)) {\n          result.operations = ['max', 'min'];\n        } else {\n          result.operations = ['values'];\n        }\n        fields.push(result);\n      });\n    }\n    if (this.getStack()) {\n      fields.push({\n        key: this.getStackValueField(),\n        operations: ['allValid']\n      });\n    }\n    return fields;\n  }\n\n  getGroupFields() {\n    return this.direction === 'vertical' ? this._fieldX : this._fieldY;\n  }\n\n  getStackGroupFields(): string[] {\n    return this.getGroupFields();\n  }\n\n  getStackValue() {\n    return (\n      this._spec.stackValue ??\n      `${PREFIX}_series_${this.type}_${(this.direction === Direction.horizontal\n        ? this.getXAxisHelper()\n        : this.getYAxisHelper()\n      ).getAxisId()}`\n    );\n  }\n\n  getStackValueField() {\n    // TODO: hack\n    if (this.direction === Direction.vertical) {\n      return array(this._spec.yField)[0];\n    }\n    return array(this._spec.xField)[0];\n  }\n\n  setValueFieldToStack(): void {\n    if (this.direction === Direction.vertical) {\n      this.setFieldY(STACK_FIELD_END);\n      this.setFieldY2(STACK_FIELD_START);\n    } else {\n      this.setFieldX(STACK_FIELD_END);\n      this.setFieldX2(STACK_FIELD_START);\n    }\n  }\n\n  setValueFieldToPercent(): void {\n    if (this.direction === Direction.vertical) {\n      this.setFieldY(STACK_FIELD_END_PERCENT);\n      this.setFieldY2(STACK_FIELD_START_PERCENT);\n    } else {\n      this.setFieldX(STACK_FIELD_END_PERCENT);\n      this.setFieldX2(STACK_FIELD_START_PERCENT);\n    }\n  }\n\n  setValueFieldToStackOffsetSilhouette(): void {\n    if (this.direction === Direction.vertical) {\n      this.setFieldY(STACK_FIELD_END_OffsetSilhouette);\n      this.setFieldY2(STACK_FIELD_START_OffsetSilhouette);\n    } else {\n      this.setFieldX(STACK_FIELD_END_OffsetSilhouette);\n      this.setFieldX2(STACK_FIELD_START_OffsetSilhouette);\n    }\n  }\n\n  onXAxisHelperUpdate(): void {\n    this.onMarkPositionUpdate();\n  }\n\n  onYAxisHelperUpdate(): void {\n    this.onMarkPositionUpdate();\n  }\n\n  onZAxisHelperUpdate(): void {\n    this.onMarkPositionUpdate();\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    this.setFieldX(this._spec.xField);\n    this.setFieldY(this._spec.yField);\n    this.setFieldZ(this._spec.zField);\n    this._specXField = array(this._spec.xField);\n    this._specYField = array(this._spec.yField);\n    if (isValid(this._spec.direction)) {\n      this._direction = this._spec.direction;\n    }\n\n    this.setFieldX2(this._spec?.x2Field);\n    this.setFieldY2(this._spec?.y2Field);\n\n    if (this._stack) {\n      this.setValueFieldToStack();\n    }\n    if (this._percent) {\n      this.setValueFieldToPercent();\n    }\n    if (this._stackOffsetSilhouette) {\n      this.setValueFieldToStackOffsetSilhouette();\n    }\n\n    if (isValid(this._spec.sortDataByAxis)) {\n      this._sortDataByAxis = this._spec.sortDataByAxis === true;\n    }\n  }\n\n  dataToPosition(datum: Datum): IPoint | null {\n    if (!datum) {\n      return null;\n    }\n    return {\n      x: this.dataToPositionX(datum),\n      y: this.dataToPositionY(datum)\n    } as IPoint;\n  }\n\n  protected _buildMarkAttributeContext() {\n    super._buildMarkAttributeContext();\n    // position\n    this._markAttributeContext.valueToX = this.valueToPositionX.bind(this);\n    this._markAttributeContext.valueToY = this.valueToPositionY.bind(this);\n    this._markAttributeContext.xBandwidth = (depth: number = 0) => this.getXAxisHelper().getBandwidth?.(depth) ?? 0;\n    this._markAttributeContext.yBandwidth = (depth: number = 0) => this.getYAxisHelper().getBandwidth?.(depth) ?? 0;\n    this._markAttributeContext.valueToPosition = this.valueToPosition.bind(this);\n  }\n\n  valueToPosition(xValue: StringOrNumber | StringOrNumber[], yValue: StringOrNumber | StringOrNumber[]) {\n    return {\n      x: this.valueToPositionX(xValue),\n      y: this.valueToPositionY(yValue)\n    };\n  }\n\n  protected _axisPosition(helper: IAxisHelper, value: StringOrNumber | StringOrNumber[], datum?: any) {\n    this._scaleConfig.datum = datum;\n    if (helper.isContinuous) {\n      return helper.valueToPosition(value, this._scaleConfig);\n    }\n    return helper.dataToPosition(array(value), this._scaleConfig);\n  }\n\n  valueToPositionX(value: StringOrNumber | StringOrNumber[], datum?: any) {\n    return this._axisPosition(this._xAxisHelper, value, datum);\n  }\n  valueToPositionY(value: StringOrNumber | StringOrNumber[], datum?: any) {\n    return this._axisPosition(this._yAxisHelper, value, datum);\n  }\n\n  protected _positionXEncoder?: (datum: Datum) => number;\n\n  dataToPositionX(datum: Datum): number {\n    if (this._positionXEncoder) {\n      return this._positionXEncoder(datum);\n    }\n\n    if (!this._xAxisHelper) {\n      this._positionXEncoder = (datum: Datum) => Number.NaN;\n\n      return Number.NaN;\n    }\n    const fields = this._xAxisHelper.getFields ? this._xAxisHelper.getFields() : this._fieldX;\n    if (!fields || fields.length === 0) {\n      this._positionXEncoder = (datum: Datum) => null;\n      return null;\n    }\n\n    if (this._xAxisHelper.isContinuous) {\n      this._positionXEncoder = (datum: Datum) => {\n        this._scaleConfig.datum = datum;\n        return this._xAxisHelper.valueToPosition(this.getDatumPositionValue(datum, fields[0]), this._scaleConfig);\n      };\n    } else {\n      this._positionXEncoder = (datum: Datum) => {\n        this._scaleConfig.datum = datum;\n        return this._xAxisHelper.dataToPosition(array(this.getDatumPositionValues(datum, fields)), this._scaleConfig);\n      };\n    }\n\n    return this._positionXEncoder(datum);\n  }\n\n  protected _positionYEncoder?: (datum: Datum) => number;\n\n  dataToPositionY(datum: Datum): number {\n    if (this._positionYEncoder) {\n      return this._positionYEncoder(datum);\n    }\n\n    if (!this._yAxisHelper) {\n      this._positionYEncoder = (datum: Datum) => Number.NaN;\n      return Number.NaN;\n    }\n    const fields = this._yAxisHelper.getFields ? this._yAxisHelper.getFields() : this._fieldY;\n    if (!fields || fields.length === 0) {\n      this._positionYEncoder = (datum: Datum) => null;\n      return null;\n    }\n\n    if (this._yAxisHelper.isContinuous) {\n      this._positionYEncoder = (datum: Datum) => {\n        this._scaleConfig.datum = datum;\n        return this._yAxisHelper.valueToPosition(this.getDatumPositionValue(datum, fields[0]), this._scaleConfig);\n      };\n    } else {\n      this._positionYEncoder = (datum: Datum) => {\n        this._scaleConfig.datum = datum;\n        return this._yAxisHelper.dataToPosition(array(this.getDatumPositionValues(datum, fields)), this._scaleConfig);\n      };\n    }\n\n    return this._positionYEncoder(datum);\n  }\n\n  dataToPositionZ(datum: Datum): number {\n    if (!this._zAxisHelper) {\n      return Number.NaN;\n    }\n    const { dataToPosition } = this._zAxisHelper;\n\n    return dataToPosition(this.getDatumPositionValues(datum, this._fieldZ), {\n      bandPosition: this._bandPosition\n    });\n  }\n\n  dataToPositionX1(datum: Datum): number {\n    if (!this._xAxisHelper) {\n      return Number.NaN;\n    }\n    return this._fieldX2 && this._fieldX2 in datum\n      ? this.valueToPositionX(this.getDatumPositionValues(datum, this._fieldX2))\n      : this.valueToPositionX(0);\n  }\n\n  dataToPositionY1(datum: Datum): number {\n    if (!this._yAxisHelper) {\n      return Number.NaN;\n    }\n    return this._fieldY2 && this._fieldY2 in datum\n      ? this.valueToPositionY(this.getDatumPositionValues(datum, this._fieldY2))\n      : this.valueToPositionY(0);\n  }\n\n  positionToData(p: IPoint): IPoint | null {\n    if (!p) {\n      return null;\n    }\n    return {\n      x: this.positionToDataX(p.x),\n      y: this.positionToDataY(p.y)\n    };\n  }\n\n  positionToDataX(xPos: number): any | null {\n    if (!this._scaleX) {\n      return null;\n    }\n    return this._scaleX.invert(xPos);\n  }\n\n  positionToDataY(yPos: number): any | null {\n    if (!this._scaleY) {\n      return null;\n    }\n    return this._scaleY.invert(yPos);\n  }\n\n  getRegionRectLeft(): number {\n    if (!this._xAxisHelper) {\n      return Number.NaN;\n    }\n    const { getScale } = this._xAxisHelper;\n    return getScale(0).range()[0];\n  }\n\n  getRegionRectRight(): number {\n    if (!this._xAxisHelper) {\n      return Number.NaN;\n    }\n    const { getScale } = this._xAxisHelper;\n    return getScale(0).range()[1];\n  }\n\n  afterInitMark(): void {\n    super.afterInitMark();\n    this.setFieldX(this._fieldX);\n    this.setFieldY(this._fieldY);\n    this._trigger.setStateKeys([...this._fieldX, ...this._fieldY]);\n    this._buildScaleConfig();\n  }\n\n  getDimensionField(): string[] {\n    if (this._direction === Direction.vertical) {\n      return this._specXField;\n    }\n    return this._specYField;\n  }\n\n  getMeasureField(): string[] {\n    if (this._direction === Direction.vertical) {\n      return this._specYField;\n    }\n    return this._specXField;\n  }\n\n  viewDataUpdate(d: DataView): void {\n    super.viewDataUpdate(d);\n    if (this.sortDataByAxis) {\n      this._sortDataInAxisDomain();\n    }\n  }\n\n  _sortDataInAxisDomain() {\n    if (this.getViewData()?.latestData?.length) {\n      sortDataInAxisHelper(\n        this._direction === Direction.horizontal ? this._yAxisHelper : this._xAxisHelper,\n        this._direction === Direction.horizontal ? this._fieldY[0] : this._fieldX[0],\n        this.getViewData().latestData\n      );\n      this._data?.updateData(true);\n    }\n  }\n\n  protected _getInvalidDefined = (datum: Datum) => {\n    if (this._xAxisHelper?.isContinuous) {\n      if (!couldBeValidNumber(datum[this._specXField[0]])) {\n        return false;\n      }\n    }\n    if (this._yAxisHelper?.isContinuous) {\n      if (!couldBeValidNumber(datum[this._specYField[0]])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  reInit(spec: T) {\n    if (this._positionXEncoder) {\n      this._positionXEncoder = null;\n    }\n    if (this._positionYEncoder) {\n      this._positionYEncoder = null;\n    }\n\n    super.reInit(spec);\n  }\n}\n"]}