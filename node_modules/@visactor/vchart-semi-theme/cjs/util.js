"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    void 0 === k2 && (k2 = k);
    var desc = Object.getOwnPropertyDescriptor(m, k);
    desc && !("get" in desc ? !m.__esModule : desc.writable || desc.configurable) || (desc = {
        enumerable: !0,
        get: function() {
            return m[k];
        }
    }), Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    void 0 === k2 && (k2 = k), o[k2] = m[k];
}), __exportStar = this && this.__exportStar || function(m, exports) {
    for (var p in m) "default" === p || Object.prototype.hasOwnProperty.call(exports, p) || __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.observeThemeSwitch = exports.generateThemeName = exports.getCurrentMode = void 0;

const constants_1 = require("./common/constants");

__exportStar(require("@visactor/vchart-theme-utils"), exports);

const getCurrentMode = () => document.body.hasAttribute(constants_1.THEME_MODE_ATTRIBUTE) && "dark" === document.body.getAttribute(constants_1.THEME_MODE_ATTRIBUTE) ? "dark" : "light";

exports.getCurrentMode = getCurrentMode;

const generateThemeName = mode => `semiDesign${mode[0].toUpperCase()}${mode.slice(1)}`;

exports.generateThemeName = generateThemeName;

const observeThemeSwitch = callback => {
    new MutationObserver((mutations => {
        mutations.forEach((mutation => {
            var _a;
            if (1 === mutation.addedNodes.length) {
                const node = mutation.addedNodes[0];
                "LINK" === node.tagName && "true" === (null === (_a = node.getAttribute) || void 0 === _a ? void 0 : _a.call(node, "semi-theme-switcher")) && callback(mutation, node);
            }
        }));
    })).observe(document.body, {
        childList: !0
    });
};

exports.observeThemeSwitch = observeThemeSwitch;
//# sourceMappingURL=util.js.map