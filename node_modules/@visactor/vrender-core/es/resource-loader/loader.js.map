{"version":3,"sources":["../src/resource-loader/loader.ts"],"names":[],"mappings":"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","file":"loader.js","sourcesContent":["import type { IImage, ImagePayload, ResourceData } from '../interface';\nimport { application } from '../application';\n\nexport class ResourceLoader {\n  private static cache: Map<string, ResourceData> = new Map();\n\n  static GetImage(url: string, mark: ImagePayload) {\n    let data = ResourceLoader.cache.get(url);\n    if (data) {\n      // 存在缓存\n      if (data.loadState === 'fail') {\n        // 资源请求失败，修改mark状态\n        application.global.getRequestAnimationFrame()(() => {\n          mark.imageLoadFail(url);\n        });\n      } else if (data.loadState === 'init' || data.loadState === 'loading') {\n        // 资源padding队列加入mark信息\n        data.waitingMark?.push(mark);\n      } else if (mark) {\n        mark.imageLoadSuccess(url, data.data as HTMLImageElement);\n      }\n    } else {\n      data = { type: 'image', loadState: 'init' };\n      ResourceLoader.cache.set(url, data);\n\n      data.dataPromise = application.global.loadImage(url);\n      if (!data.dataPromise) {\n        // 无法获取资源，修改缓存和mark状态\n        data.loadState = 'fail';\n        mark.imageLoadFail(url);\n      } else {\n        // 资源padding队列加入mark信息\n        data.waitingMark = [mark];\n\n        data.dataPromise.then(res => {\n          data.loadState = res?.data ? 'success' : 'fail';\n          data.data = res?.data;\n          // 遍历资源padding队列，更新mark信息\n          data.waitingMark?.map((mark: IImage, index) => {\n            if (res?.data) {\n              data.loadState = 'success';\n              data.data = res.data;\n              mark.imageLoadSuccess(url, res.data as HTMLImageElement);\n            } else {\n              data.loadState = 'fail';\n              mark.imageLoadFail(url);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  static GetSvg(svgStr: string, mark: IImage) {\n    let data = ResourceLoader.cache.get(svgStr);\n    if (data) {\n      // 存在缓存\n      if (data.loadState === 'fail') {\n        // 资源请求失败，修改mark状态\n        application.global.getRequestAnimationFrame()(() => {\n          mark.imageLoadFail(svgStr);\n        });\n      } else if (data.loadState === 'init' || data.loadState === 'loading') {\n        // 资源padding队列加入mark信息\n        data.waitingMark?.push(mark);\n      } else if (mark) {\n        application.global.getRequestAnimationFrame()(() => {\n          mark.imageLoadSuccess(svgStr, data.data as HTMLImageElement);\n        });\n      }\n    } else {\n      data = { type: 'image', loadState: 'init' };\n      ResourceLoader.cache.set(svgStr, data);\n\n      data.dataPromise = application.global.loadSvg(svgStr);\n      if (!data.dataPromise) {\n        // 无法获取资源，修改缓存和mark状态\n        data.loadState = 'fail';\n        mark.imageLoadFail(svgStr);\n      } else {\n        // 资源padding队列加入mark信息\n        data.waitingMark = [mark];\n\n        data.dataPromise.then(res => {\n          data.loadState = res?.data ? 'success' : 'fail';\n          data.data = res?.data;\n          // 遍历资源padding队列，更新mark信息\n          data.waitingMark?.map((mark: IImage, index) => {\n            if (res?.data) {\n              data.loadState = 'success';\n              data.data = res.data;\n              mark.imageLoadSuccess(svgStr, res.data as HTMLImageElement);\n            } else {\n              data.loadState = 'fail';\n              mark.imageLoadFail(svgStr);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  static GetFile(url: string, type: 'json' | 'arrayBuffer' | 'blob') {\n    let data = ResourceLoader.cache.get(url);\n    if (data) {\n      // 存在缓存\n      if (data.loadState === 'init' || data.loadState === 'fail') {\n        return Promise.reject();\n      } else if (data.loadState === 'loading') {\n        return data.dataPromise.then(data => data.data);\n      }\n      return Promise.resolve(data.data);\n    }\n    data = { type, loadState: 'init' };\n    ResourceLoader.cache.set(url, data);\n\n    if (type === 'arrayBuffer') {\n      data.dataPromise = application.global.loadArrayBuffer(url);\n    } else if (type === 'blob') {\n      data.dataPromise = application.global.loadBlob(url);\n    } else if (type === 'json') {\n      data.dataPromise = application.global.loadJson(url);\n    }\n\n    return data.dataPromise.then(data => data.data);\n  }\n}\n"]}