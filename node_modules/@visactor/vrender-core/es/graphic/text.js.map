{"version":3,"sources":["../src/graphic/text.ts"],"names":[],"mappings":"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","file":"text.js","sourcesContent":["import { max, type AABBBounds, type OBBBounds, isArray } from '@visactor/vutils';\nimport { getContextFont, textDrawOffsetX, textLayoutOffsetY } from '../common/text';\nimport { CanvasTextLayout } from '../core/contributions/textMeasure/layout';\nimport { application } from '../application';\nimport type { IText, ITextCache, ITextGraphicAttribute, LayoutItemType, LayoutType } from '../interface';\nimport { Graphic, GRAPHIC_UPDATE_TAG_KEY, NOWORK_ANIMATE_ATTR } from './graphic';\nimport { getTheme } from './theme';\nimport { calculateLineHeight, parsePadding } from '../common/utils';\nimport { TEXT_NUMBER_TYPE } from './constants';\nimport { TextDirection, verticalLayout } from './tools';\n\nconst TEXT_UPDATE_TAG_KEY = [\n  'text',\n  'maxLineWidth',\n  // 'textAlign',\n  // 'textBaseline',\n  'heightLimit',\n  'lineClamp',\n  'fontSize',\n  'fontFamily',\n  'fontWeight',\n  'ellipsis',\n  'lineHeight',\n  'direction',\n  'wordBreak',\n  'heightLimit',\n  'lineClamp',\n  ...GRAPHIC_UPDATE_TAG_KEY\n];\n\nexport class Text extends Graphic<ITextGraphicAttribute> implements IText {\n  type: 'text' = 'text';\n\n  static NOWORK_ANIMATE_ATTR = {\n    ellipsis: 1,\n    wordBreak: 1,\n    direction: 1,\n    textAlign: 1,\n    textBaseline: 1,\n    fontFamily: 1,\n    fontWeight: 1,\n    ...NOWORK_ANIMATE_ATTR\n  };\n\n  cache: ITextCache;\n  _font: string;\n\n  get font(): string {\n    const textTheme = getTheme(this).text;\n    if (!this._font) {\n      this._font = getContextFont(this.attribute, textTheme);\n    }\n    return this._font as string;\n  }\n\n  get clipedText(): string | undefined {\n    const attribute = this.attribute;\n    const textTheme = getTheme(this).text;\n    if (!this.isSimplify()) {\n      return undefined;\n    }\n    const { maxLineWidth = textTheme.maxLineWidth } = attribute;\n    if (!Number.isFinite(maxLineWidth)) {\n      return (attribute.text ?? textTheme.text).toString();\n    }\n    this.tryUpdateAABBBounds();\n    return this.cache.clipedText;\n  }\n  get clipedWidth(): number | undefined {\n    if (!this.isSimplify()) {\n      return undefined;\n    }\n    this.tryUpdateAABBBounds();\n    return this.cache.clipedWidth;\n  }\n  get cliped(): boolean | undefined {\n    const textTheme = getTheme(this).text;\n    const attribute = this.attribute;\n    if (this.isMultiLine) {\n      return undefined;\n    }\n    const { maxLineWidth = textTheme.maxLineWidth } = attribute;\n    if (!Number.isFinite(maxLineWidth)) {\n      return false;\n    }\n    this.tryUpdateAABBBounds();\n    if (attribute.direction === 'vertical' && this.cache.verticalList && this.cache.verticalList[0]) {\n      return this.cache.verticalList[0].map(item => item.text).join('') !== attribute.text.toString();\n    }\n    if (this.clipedText == null) {\n      return false;\n    }\n    return this.clipedText !== attribute.text.toString();\n  }\n  get multilineLayout(): LayoutType | undefined {\n    if (!this.isMultiLine) {\n      return undefined;\n    }\n    this.tryUpdateAABBBounds();\n    return this.cache.layoutData;\n  }\n\n  // 是否是简单文字\n  // 单行，横排\n  private isSimplify(): boolean {\n    return !this.isMultiLine && this.attribute.direction !== 'vertical';\n  }\n  get isMultiLine(): boolean {\n    return Array.isArray(this.attribute.text) || this.attribute.whiteSpace === 'normal';\n  }\n\n  constructor(params: ITextGraphicAttribute = { text: '', fontSize: 16 }) {\n    super(params);\n    this.numberType = TEXT_NUMBER_TYPE;\n    this.cache = {};\n  }\n\n  isValid(): boolean {\n    return super.isValid() && this._isValid();\n  }\n  protected _isValid(): boolean {\n    const { text } = this.attribute;\n    if (isArray(text)) {\n      return !(text as any[]).every((t: any) => t == null || t === '');\n    }\n    return text != null && text !== '';\n  }\n\n  protected doUpdateAABBBounds(): AABBBounds {\n    const textTheme = getTheme(this).text;\n    this._AABBBounds.setValue(Infinity, Infinity, -Infinity, -Infinity);\n    const attribute = this.attribute;\n    const bounds = application.graphicService.updateTextAABBBounds(\n      attribute,\n      textTheme,\n      this._AABBBounds,\n      this\n    ) as AABBBounds;\n\n    const { boundsPadding = textTheme.boundsPadding } = this.attribute;\n    const paddingArray = parsePadding(boundsPadding);\n    if (paddingArray) {\n      bounds.expand(paddingArray);\n    }\n\n    this.clearUpdateBoundTag();\n    return bounds;\n  }\n\n  /**\n   * 计算多行文字的bounds，缓存每行文字的布局位置\n   * 自动折行params.text是数组，因此只重新updateMultilineAABBBounds\n   * @param text\n   */\n  updateWrapAABBBounds(text: (number | string) | (number | string)[]) {\n    const textTheme = getTheme(this).text;\n    const {\n      fontFamily = textTheme.fontFamily,\n      textAlign = textTheme.textAlign,\n      textBaseline = textTheme.textBaseline,\n      fontSize = textTheme.fontSize,\n      ellipsis = textTheme.ellipsis,\n      maxLineWidth,\n      stroke = textTheme.stroke,\n      lineWidth = textTheme.lineWidth,\n      wordBreak = textTheme.wordBreak,\n      fontWeight = textTheme.fontWeight,\n      // widthLimit,\n      ignoreBuf = textTheme.ignoreBuf,\n      suffixPosition = textTheme.suffixPosition,\n      heightLimit = 0,\n      lineClamp\n    } = this.attribute;\n    const lineHeight =\n      calculateLineHeight(this.attribute.lineHeight, this.attribute.fontSize || textTheme.fontSize) ??\n      (this.attribute.fontSize || textTheme.fontSize);\n    const buf = ignoreBuf ? 0 : 2;\n    if (!this.shouldUpdateShape() && this.cache?.layoutData) {\n      const bbox = this.cache.layoutData.bbox;\n      this._AABBBounds.set(bbox.xOffset, bbox.yOffset, bbox.xOffset + bbox.width, bbox.yOffset + bbox.height);\n      if (stroke) {\n        this._AABBBounds.expand(lineWidth / 2);\n      }\n      return this._AABBBounds;\n    }\n\n    const textMeasure = application.graphicUtil.textMeasure;\n    const layoutObj = new CanvasTextLayout(fontFamily, { fontSize, fontWeight, fontFamily }, textMeasure as any) as any;\n\n    // layoutObj内逻辑\n    const lines = isArray(text) ? (text.map(l => l.toString()) as string[]) : [text.toString()];\n    const linesLayout: LayoutItemType[] = [];\n    const bboxWH: [number, number] = [0, 0];\n\n    let lineCountLimit = Infinity;\n    if (heightLimit > 0) {\n      lineCountLimit = Math.max(Math.floor(heightLimit / lineHeight), 1);\n    }\n    if (lineClamp) {\n      // 处理行数限制\n      lineCountLimit = Math.min(lineCountLimit, lineClamp);\n    }\n\n    if (typeof maxLineWidth === 'number' && maxLineWidth !== Infinity) {\n      // widthLimit > 0\n      if (maxLineWidth > 0) {\n        for (let i = 0; i < lines.length; i++) {\n          const str = lines[i] as string;\n          let needCut = true;\n          // // 测量当前行宽度\n          // width = Math.min(\n          //   layoutObj.textMeasure.measureTextWidth(str, layoutObj.textOptions),\n          //   maxLineWidth\n          // );\n\n          // 判断是否超过高度限制\n          if (i === lineCountLimit - 1) {\n            // 当前行为最后一行\n            const clip = layoutObj.textMeasure.clipTextWithSuffix(\n              str,\n              layoutObj.textOptions,\n              maxLineWidth,\n              ellipsis,\n              false,\n              suffixPosition\n            );\n            linesLayout.push({\n              str: clip.str,\n              width: clip.width\n            });\n            break; // 不处理后续行\n          }\n\n          // 测量截断位置\n          const clip = layoutObj.textMeasure.clipText(\n            str,\n            layoutObj.textOptions,\n            maxLineWidth,\n            wordBreak === 'break-word'\n          );\n          if (str !== '' && clip.str === '') {\n            if (ellipsis) {\n              const clipEllipsis = layoutObj.textMeasure.clipTextWithSuffix(\n                str,\n                layoutObj.textOptions,\n                maxLineWidth,\n                ellipsis,\n                false,\n                suffixPosition\n              );\n              clip.str = clipEllipsis.str ?? '';\n              clip.width = clipEllipsis.width ?? 0;\n            } else {\n              // 宽度限制不足一个字符，不显示\n              clip.str = '';\n              clip.width = 0;\n            }\n            needCut = false;\n          }\n\n          linesLayout.push({\n            str: clip.str,\n            width: clip.width\n          });\n          if (clip.str.length === str.length) {\n            // 不需要截断\n          } else if (needCut) {\n            const newStr = str.substring(clip.str.length);\n            lines.splice(i + 1, 0, newStr);\n          }\n        }\n      }\n      // bboxWH[0] = maxLineWidth;\n      let maxWidth = 0;\n      linesLayout.forEach(layout => {\n        maxWidth = Math.max(maxWidth, layout.width);\n      });\n      bboxWH[0] = maxWidth;\n    } else {\n      // 使用所有行中最长的作为lineWidth\n      let lineWidth = 0;\n      let width: number;\n      let text: string;\n      for (let i = 0, len = lines.length; i < len; i++) {\n        // 判断是否超过高度限制\n        if (i === lineCountLimit - 1) {\n          // 当前行为最后一行\n          const clip = layoutObj.textMeasure.clipTextWithSuffix(\n            lines[i],\n            layoutObj.textOptions,\n            maxLineWidth,\n            ellipsis,\n            false,\n            suffixPosition\n          );\n          linesLayout.push({\n            str: clip.str,\n            width: clip.width\n          });\n          lineWidth = Math.max(lineWidth, clip.width);\n          break; // 不处理后续行\n        }\n\n        text = lines[i] as string;\n        width = layoutObj.textMeasure.measureTextWidth(text, layoutObj.textOptions, wordBreak === 'break-word');\n        lineWidth = Math.max(lineWidth, width);\n        linesLayout.push({ str: text, width });\n      }\n      bboxWH[0] = lineWidth;\n    }\n    bboxWH[1] = linesLayout.length * (lineHeight + buf);\n\n    const bbox = {\n      xOffset: 0,\n      yOffset: 0,\n      width: bboxWH[0],\n      height: bboxWH[1]\n    };\n\n    layoutObj.LayoutBBox(bbox, textAlign, textBaseline as any);\n\n    const layoutData = layoutObj.layoutWithBBox(bbox, linesLayout, textAlign, textBaseline as any, lineHeight);\n\n    // const layoutData = layoutObj.GetLayoutByLines(\n    //   text,\n    //   textAlign,\n    //   textBaseline as any,\n    //   lineHeight,\n    //   ellipsis === true ? (DefaultTextAttribute.ellipsis as string) : ellipsis || undefined,\n    //   maxLineWidth\n    // );\n    // const { bbox } = layoutData;\n    this.cache.layoutData = layoutData;\n    this.clearUpdateShapeTag();\n    this._AABBBounds.set(bbox.xOffset, bbox.yOffset, bbox.xOffset + bbox.width, bbox.yOffset + bbox.height);\n\n    if (stroke) {\n      this._AABBBounds.expand(lineWidth / 2);\n    }\n\n    return this._AABBBounds;\n  }\n\n  /**\n   * 计算单行文字的bounds，可以缓存长度以及截取的文字\n   * @param text\n   */\n  updateSingallineAABBBounds(text: number | string): AABBBounds {\n    const textTheme = getTheme(this).text;\n    const { direction = textTheme.direction } = this.attribute;\n\n    return direction === 'horizontal'\n      ? this.updateHorizontalSinglelineAABBBounds(text)\n      : this.updateVerticalSinglelineAABBBounds(text);\n  }\n\n  /**\n   * 计算单行文字的bounds，可以缓存长度以及截取的文字\n   * @param text\n   */\n  updateMultilineAABBBounds(text: (number | string)[]): AABBBounds {\n    const textTheme = getTheme(this).text;\n    const { direction = textTheme.direction } = this.attribute;\n\n    return direction === 'horizontal'\n      ? this.updateHorizontalMultilineAABBBounds(text)\n      : this.updateVerticalMultilineAABBBounds(text);\n  }\n\n  /**\n   * 计算单行文字的bounds，可以缓存长度以及截取的文字\n   * @param text\n   */\n  updateHorizontalSinglelineAABBBounds(text: number | string): AABBBounds {\n    const textTheme = getTheme(this).text;\n    const { wrap = textTheme.wrap } = this.attribute;\n    if (wrap) {\n      return this.updateWrapAABBBounds([text]);\n    }\n\n    const textMeasure = application.graphicUtil.textMeasure;\n    let width: number;\n    let str: string;\n    const attribute = this.attribute;\n    const {\n      maxLineWidth = textTheme.maxLineWidth,\n      ellipsis = textTheme.ellipsis,\n      textAlign = textTheme.textAlign,\n      textBaseline = textTheme.textBaseline,\n      fontFamily = textTheme.fontFamily,\n      fontSize = textTheme.fontSize,\n      fontWeight = textTheme.fontWeight,\n      stroke = textTheme.stroke,\n      lineWidth = textTheme.lineWidth,\n      // wordBreak = textTheme.wordBreak,\n      ignoreBuf = textTheme.ignoreBuf,\n      whiteSpace = textTheme.whiteSpace,\n      suffixPosition = textTheme.suffixPosition\n    } = attribute;\n    if (whiteSpace === 'normal') {\n      return this.updateWrapAABBBounds(text);\n    }\n    const buf = ignoreBuf ? 0 : Math.max(2, fontSize * 0.075);\n    const textFontSize = attribute.fontSize || textTheme.fontSize;\n    const lineHeight = calculateLineHeight(attribute.lineHeight, textFontSize) ?? textFontSize + buf;\n    if (!this.shouldUpdateShape() && this.cache) {\n      width = this.cache.clipedWidth ?? 0;\n      const dx = textDrawOffsetX(textAlign, width);\n      const dy = textLayoutOffsetY(textBaseline, lineHeight, fontSize);\n      this._AABBBounds.set(dx, dy, dx + width, dy + lineHeight);\n      if (stroke) {\n        this._AABBBounds.expand(lineWidth / 2);\n      }\n      return this._AABBBounds;\n    }\n\n    if (Number.isFinite(maxLineWidth)) {\n      if (ellipsis) {\n        const strEllipsis = (ellipsis === true ? textTheme.ellipsis : ellipsis) as string;\n        const data = textMeasure.clipTextWithSuffix(\n          text.toString(),\n          { fontSize, fontWeight, fontFamily },\n          maxLineWidth,\n          strEllipsis,\n          false,\n          suffixPosition\n        );\n        str = data.str;\n        width = data.width;\n      } else {\n        const data = textMeasure.clipText(text.toString(), { fontSize, fontWeight, fontFamily }, maxLineWidth, false);\n        str = data.str;\n        width = data.width;\n      }\n      this.cache.clipedText = str;\n      this.cache.clipedWidth = width;\n      // todo 计算原本的宽度\n    } else {\n      width = textMeasure.measureTextWidth(text.toString(), { fontSize, fontWeight, fontFamily });\n      this.cache.clipedText = text.toString();\n      this.cache.clipedWidth = width;\n    }\n    this.clearUpdateShapeTag();\n\n    const dx = textDrawOffsetX(textAlign, width);\n    let lh = lineHeight;\n    if (application.global && application.global.isSafari()) {\n      // 如果是safari，那么需要额外增加高度\n      lh += fontSize * 0.2;\n    }\n    const dy = textLayoutOffsetY(textBaseline, lh, fontSize, buf);\n    this._AABBBounds.set(dx, dy, dx + width, dy + lh);\n\n    if (stroke) {\n      this._AABBBounds.expand(lineWidth / 2);\n    }\n\n    return this._AABBBounds;\n  }\n\n  getBaselineMapAlign(): Record<string, string> {\n    return Text.baselineMapAlign;\n  }\n\n  getAlignMapBaseline(): Record<string, string> {\n    return Text.alignMapBaseline;\n  }\n\n  static baselineMapAlign = {\n    top: 'left',\n    bottom: 'right',\n    middle: 'center'\n  };\n\n  static alignMapBaseline = {\n    left: 'top',\n    right: 'bottom',\n    center: 'middle'\n  };\n\n  /**\n   * 计算垂直布局的单行文字的bounds，可以缓存长度以及截取的文字\n   * @param text\n   */\n  updateVerticalSinglelineAABBBounds(text: number | string): AABBBounds {\n    const textTheme = getTheme(this).text;\n    const textMeasure = application.graphicUtil.textMeasure;\n    let width: number;\n    let str: string;\n    const attribute = this.attribute;\n    const { ignoreBuf = textTheme.ignoreBuf } = attribute;\n    const buf = ignoreBuf ? 0 : 2;\n    const {\n      maxLineWidth = textTheme.maxLineWidth,\n      ellipsis = textTheme.ellipsis,\n      fontSize = textTheme.fontSize,\n      fontWeight = textTheme.fontWeight,\n      fontFamily = textTheme.fontFamily,\n      stroke = textTheme.stroke,\n      lineWidth = textTheme.lineWidth,\n      verticalMode = textTheme.verticalMode,\n      suffixPosition = textTheme.suffixPosition\n    } = attribute;\n\n    const lineHeight =\n      calculateLineHeight(attribute.lineHeight, attribute.fontSize || textTheme.fontSize) ??\n      (attribute.fontSize || textTheme.fontSize) + buf;\n\n    let { textAlign = textTheme.textAlign, textBaseline = textTheme.textBaseline } = attribute;\n    if (!verticalMode) {\n      const t = textAlign;\n      textAlign = Text.baselineMapAlign[textBaseline] ?? 'left';\n      textBaseline = Text.alignMapBaseline[t] ?? 'top';\n    }\n    if (!this.shouldUpdateShape() && this.cache) {\n      width = this.cache.clipedWidth;\n      const dx = textDrawOffsetX(textAlign, width);\n      const dy = textLayoutOffsetY(textBaseline, lineHeight, fontSize);\n      this._AABBBounds.set(dy, dx, dy + lineHeight, dx + width);\n      if (stroke) {\n        this._AABBBounds.expand(lineWidth / 2);\n      }\n      return this._AABBBounds;\n    }\n\n    let verticalList: { text: string; width?: number; direction: TextDirection }[][] = [\n      verticalLayout(text.toString())\n    ];\n    if (Number.isFinite(maxLineWidth)) {\n      if (ellipsis) {\n        const strEllipsis = (ellipsis === true ? textTheme.ellipsis : ellipsis) as string;\n        const data = textMeasure.clipTextWithSuffixVertical(\n          verticalList[0],\n          { fontSize, fontWeight, fontFamily },\n          maxLineWidth,\n          strEllipsis,\n          false,\n          suffixPosition\n        );\n        verticalList = [data.verticalList];\n        width = data.width;\n      } else {\n        const data = textMeasure.clipTextVertical(\n          verticalList[0],\n          { fontSize, fontWeight, fontFamily },\n          maxLineWidth,\n          false\n        );\n        verticalList = [data.verticalList];\n        width = data.width;\n      }\n      this.cache.verticalList = verticalList;\n      this.cache.clipedWidth = width;\n      // todo 计算原本的宽度\n    } else {\n      width = 0;\n      verticalList[0].forEach(t => {\n        const w =\n          t.direction === TextDirection.HORIZONTAL\n            ? fontSize\n            : textMeasure.measureTextWidth(t.text, { fontSize, fontWeight, fontFamily });\n\n        width += w;\n        t.width = w;\n      });\n      this.cache.verticalList = verticalList;\n      this.cache.clipedWidth = width;\n    }\n    this.clearUpdateShapeTag();\n\n    const dx = textDrawOffsetX(textAlign, width);\n    const dy = textLayoutOffsetY(textBaseline, lineHeight, fontSize);\n    this._AABBBounds.set(dy, dx, dy + lineHeight, dx + width);\n\n    if (stroke) {\n      this._AABBBounds.expand(lineWidth / 2);\n    }\n\n    return this._AABBBounds;\n  }\n\n  /**\n   * 计算多行文字的bounds，缓存每行文字的布局位置\n   * @param text\n   */\n  updateHorizontalMultilineAABBBounds(text: (number | string)[]): AABBBounds {\n    const textTheme = getTheme(this).text;\n    const { wrap = textTheme.wrap } = this.attribute;\n    if (wrap) {\n      return this.updateWrapAABBBounds(text);\n    }\n\n    const attribute = this.attribute;\n    const {\n      fontFamily = textTheme.fontFamily,\n      textAlign = textTheme.textAlign,\n      textBaseline = textTheme.textBaseline,\n      fontSize = textTheme.fontSize,\n      fontWeight = textTheme.fontWeight,\n      ellipsis = textTheme.ellipsis,\n      maxLineWidth,\n      stroke = textTheme.stroke,\n      lineWidth = textTheme.lineWidth,\n      whiteSpace = textTheme.whiteSpace,\n      suffixPosition = textTheme.suffixPosition\n    } = attribute;\n    const lineHeight =\n      calculateLineHeight(attribute.lineHeight, attribute.fontSize || textTheme.fontSize) ??\n      (attribute.fontSize || textTheme.fontSize);\n    if (whiteSpace === 'normal') {\n      return this.updateWrapAABBBounds(text);\n    }\n    if (!this.shouldUpdateShape() && this.cache?.layoutData) {\n      const bbox = this.cache.layoutData.bbox;\n      this._AABBBounds.set(bbox.xOffset, bbox.yOffset, bbox.xOffset + bbox.width, bbox.yOffset + bbox.height);\n      if (stroke) {\n        this._AABBBounds.expand(lineWidth / 2);\n      }\n      return this._AABBBounds;\n    }\n    const textMeasure = application.graphicUtil.textMeasure;\n    const layoutObj = new CanvasTextLayout(fontFamily, { fontSize, fontWeight, fontFamily }, textMeasure);\n    const layoutData = layoutObj.GetLayoutByLines(\n      text,\n      textAlign,\n      textBaseline as any,\n      lineHeight,\n      ellipsis === true ? (textTheme.ellipsis as string) : ellipsis || undefined,\n      false,\n      maxLineWidth,\n      suffixPosition\n    );\n    const { bbox } = layoutData;\n    this.cache.layoutData = layoutData;\n    this.clearUpdateShapeTag();\n\n    this._AABBBounds.set(bbox.xOffset, bbox.yOffset, bbox.xOffset + bbox.width, bbox.yOffset + bbox.height);\n\n    if (stroke) {\n      this._AABBBounds.expand(lineWidth / 2);\n    }\n\n    return this._AABBBounds;\n  }\n\n  /**\n   * 计算垂直布局的多行文字的bounds，可以缓存长度以及截取的文字\n   * @param text\n   */\n  updateVerticalMultilineAABBBounds(text: (number | string)[]): AABBBounds {\n    const textTheme = getTheme(this).text;\n    const textMeasure = application.graphicUtil.textMeasure;\n    let width: number;\n    const attribute = this.attribute;\n    const { ignoreBuf = textTheme.ignoreBuf } = attribute;\n    const buf = ignoreBuf ? 0 : 2;\n    const {\n      maxLineWidth = textTheme.maxLineWidth,\n      ellipsis = textTheme.ellipsis,\n      fontFamily = textTheme.fontFamily,\n      fontSize = textTheme.fontSize,\n      fontWeight = textTheme.fontWeight,\n      stroke = textTheme.stroke,\n      lineWidth = textTheme.lineWidth,\n      // wordBreak = textTheme.wordBreak,\n      verticalMode = textTheme.verticalMode,\n      suffixPosition = textTheme.suffixPosition\n    } = attribute;\n    const lineHeight =\n      calculateLineHeight(attribute.lineHeight, attribute.fontSize || textTheme.fontSize) ??\n      (attribute.fontSize || textTheme.fontSize) + buf;\n    let { textAlign = textTheme.textAlign, textBaseline = textTheme.textBaseline } = attribute;\n    if (!verticalMode) {\n      const t = textAlign;\n      textAlign = Text.baselineMapAlign[textBaseline] ?? 'left';\n      textBaseline = Text.alignMapBaseline[t] ?? 'top';\n    }\n    width = 0;\n    if (!this.shouldUpdateShape() && this.cache) {\n      this.cache.verticalList.forEach(item => {\n        const w = item.reduce((a, b) => a + b.width, 0);\n        width = max(w, width);\n      });\n      const dx = textDrawOffsetX(textAlign, width);\n      const height = this.cache.verticalList.length * lineHeight;\n      const dy = textLayoutOffsetY(textBaseline, height, fontSize);\n      this._AABBBounds.set(dy, dx, dy + height, dx + width);\n      if (stroke) {\n        this._AABBBounds.expand(lineWidth / 2);\n      }\n      return this._AABBBounds;\n    }\n\n    const verticalLists: { text: string; width?: number; direction: TextDirection }[][] = text.map(str => {\n      return verticalLayout(str.toString());\n    });\n    verticalLists.forEach((verticalData, i) => {\n      if (Number.isFinite(maxLineWidth)) {\n        if (ellipsis) {\n          const strEllipsis = (ellipsis === true ? textTheme.ellipsis : ellipsis) as string;\n          const data = textMeasure.clipTextWithSuffixVertical(\n            verticalData,\n            { fontSize, fontWeight, fontFamily },\n            maxLineWidth,\n            strEllipsis,\n            false,\n            suffixPosition\n          );\n          verticalLists[i] = data.verticalList;\n          width = data.width;\n        } else {\n          const data = textMeasure.clipTextVertical(\n            verticalData,\n            { fontSize, fontWeight, fontFamily },\n            maxLineWidth,\n            false\n          );\n          verticalLists[i] = data.verticalList;\n          width = data.width;\n        }\n        // this.cache.clipedWidth = width;\n        // todo 计算原本的宽度\n      } else {\n        width = 0;\n        verticalData.forEach(t => {\n          const w =\n            t.direction === TextDirection.HORIZONTAL\n              ? fontSize\n              : textMeasure.measureTextWidth(t.text, { fontSize, fontWeight, fontFamily });\n\n          width += w;\n          t.width = w;\n        });\n      }\n    });\n    this.cache.verticalList = verticalLists;\n    this.clearUpdateShapeTag();\n\n    this.cache.verticalList.forEach(item => {\n      const w = item.reduce((a, b) => a + b.width, 0);\n      width = max(w, width);\n    });\n\n    const dx = textDrawOffsetX(textAlign, width);\n    const height = this.cache.verticalList.length * lineHeight;\n    const dy = textLayoutOffsetY(textBaseline, height, fontSize);\n    this._AABBBounds.set(dy, dx, dy + height, dx + width);\n\n    if (stroke) {\n      this._AABBBounds.expand(lineWidth / 2);\n    }\n\n    return this._AABBBounds;\n  }\n\n  protected tryUpdateOBBBounds(): OBBBounds {\n    throw new Error('暂不支持');\n  }\n\n  getDefaultAttribute(name: string) {\n    const textTheme = getTheme(this).text;\n    return textTheme[name];\n  }\n\n  protected needUpdateTags(keys: string[], k = TEXT_UPDATE_TAG_KEY): boolean {\n    return super.needUpdateTags(keys, k);\n  }\n  protected needUpdateTag(key: string, k = TEXT_UPDATE_TAG_KEY): boolean {\n    return super.needUpdateTag(key, k);\n  }\n\n  clone(): Text {\n    return new Text({ ...this.attribute });\n  }\n\n  getNoWorkAnimateAttr(): Record<string, number> {\n    return Text.NOWORK_ANIMATE_ATTR;\n  }\n}\n\nexport function createText(attributes: ITextGraphicAttribute): IText {\n  return new Text(attributes);\n}\n\n// addAttributeToPrototype(DefaultLineStyle, Text, PURE_STYLE_KEY);\n"]}