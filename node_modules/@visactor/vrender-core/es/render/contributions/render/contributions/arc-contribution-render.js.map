{"version":3,"sources":["../src/render/contributions/render/contributions/arc-contribution-render.ts"],"names":[],"mappings":"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","file":"arc-contribution-render.js","sourcesContent":["import type {\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  IArc,\n  IArcGraphicAttribute,\n  IThemeAttribute,\n  IArcRenderContribution,\n  IDrawContext\n} from '../../../../interface';\nimport { getScaledStroke } from '../../../../common/canvas-utils';\nimport { defaultBaseBackgroundRenderContribution } from './base-contribution-render';\nimport { drawArcPath } from '../utils';\nimport { BaseRenderContributionTime } from '../../../../common/enums';\nimport { defaultBaseTextureRenderContribution } from './base-texture-contribution-render';\n\nexport class DefaultArcRenderContribution implements IArcRenderContribution {\n  time: BaseRenderContributionTime = BaseRenderContributionTime.afterFillStroke;\n  useStyle: boolean = true;\n  order: number = 0;\n  drawShape(\n    arc: IArc,\n    context: IContext2d,\n    x: number,\n    y: number,\n    doFill: boolean,\n    doStroke: boolean,\n    fVisible: boolean,\n    sVisible: boolean,\n    arcAttribute: Required<IArcGraphicAttribute>,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    const { outerBorder, innerBorder } = arc.attribute;\n    const doOuterBorder = outerBorder && outerBorder.visible !== false;\n    const doInnerBorder = innerBorder && innerBorder.visible !== false;\n    if (!(doOuterBorder || doInnerBorder)) {\n      return;\n    }\n    const {\n      innerRadius = arcAttribute.innerRadius,\n      outerRadius = arcAttribute.outerRadius,\n      startAngle = arcAttribute.startAngle,\n      endAngle = arcAttribute.endAngle,\n      opacity = arcAttribute.opacity,\n      x: originX = arcAttribute.x,\n      y: originY = arcAttribute.y,\n      scaleX = arcAttribute.scaleX,\n      scaleY = arcAttribute.scaleY\n    } = arc.attribute;\n    const doStrokeOuter = !!(outerBorder && outerBorder.stroke);\n    const doStrokeInner = !!(innerBorder && innerBorder.stroke);\n\n    if (doOuterBorder) {\n      const { distance = arcAttribute.outerBorder.distance } = outerBorder;\n      const d = getScaledStroke(context, distance as number, context.dpr);\n      const deltaAngle = (distance as number) / outerRadius;\n      arc.setAttributes({\n        outerRadius: outerRadius + d,\n        innerRadius: innerRadius - d,\n        startAngle: startAngle - deltaAngle,\n        endAngle: endAngle + deltaAngle\n      } as any);\n      context.beginPath();\n      drawArcPath(arc, context, x, y, outerRadius + d, innerRadius - d);\n      // shadow\n      context.setShadowBlendStyle && context.setShadowBlendStyle(arc, arc.attribute, arcAttribute);\n\n      if (strokeCb) {\n        strokeCb(context, outerBorder, arcAttribute.outerBorder);\n      } else if (doStrokeOuter) {\n        // 存在stroke\n        const lastOpacity = (arcAttribute.outerBorder as any).opacity;\n        (arcAttribute.outerBorder as any).opacity = opacity;\n        context.setStrokeStyle(\n          arc,\n          outerBorder,\n          (originX - x) / scaleX,\n          (originY - y) / scaleY,\n          arcAttribute.outerBorder as any\n        );\n        (arcAttribute.outerBorder as any).opacity = lastOpacity;\n        context.stroke();\n      }\n    }\n\n    if (doInnerBorder) {\n      const { distance = arcAttribute.innerBorder.distance } = innerBorder;\n      const d = getScaledStroke(context, distance as number, context.dpr);\n      const deltaAngle = (distance as number) / outerRadius;\n      arc.setAttributes({\n        outerRadius: outerRadius - d,\n        innerRadius: innerRadius + d,\n        startAngle: startAngle + deltaAngle,\n        endAngle: endAngle - deltaAngle\n      } as any);\n      context.beginPath();\n      drawArcPath(arc, context, x, y, outerRadius - d, innerRadius + d);\n      // arc.setAttributes({ outerRadius: outerRadius, innerRadius: innerRadius });\n\n      // shadow\n      context.setShadowBlendStyle && context.setShadowBlendStyle(arc, arc.attribute, arcAttribute);\n\n      if (strokeCb) {\n        strokeCb(context, innerBorder, arcAttribute.innerBorder);\n      } else if (doStrokeInner) {\n        // 存在stroke\n        const lastOpacity = (arcAttribute.innerBorder as any).opacity;\n        (arcAttribute.innerBorder as any).opacity = opacity;\n        context.setStrokeStyle(\n          arc,\n          innerBorder,\n          (originX - x) / scaleX,\n          (originY - y) / scaleY,\n          arcAttribute.innerBorder as any\n        );\n        (arcAttribute.innerBorder as any).opacity = lastOpacity;\n        context.stroke();\n      }\n    }\n\n    arc.setAttributes({ outerRadius: outerRadius, innerRadius: innerRadius, startAngle, endAngle } as any);\n  }\n}\n\nexport const defaultArcRenderContribution = new DefaultArcRenderContribution();\nexport const defaultArcTextureRenderContribution = defaultBaseTextureRenderContribution;\nexport const defaultArcBackgroundRenderContribution = defaultBaseBackgroundRenderContribution;\n"]}