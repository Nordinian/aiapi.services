import { InteractionStateEnum } from "../graph/enums";

import { BrushBase } from "./brush-base";

import { IOperateType } from "@visactor/vrender-components";

export class BrushHighlight extends BrushBase {
    constructor(view, option) {
        super(view, Object.assign({}, BrushHighlight.defaultOptions, option)), this.type = BrushHighlight.type, 
        this.handleBrushUpdate = event => {
            const elements = [];
            event.type === IOperateType.brushClear ? this._marks.forEach((mark => {
                mark.elements.forEach((el => {
                    el.removeState(this.options.blurState), el.removeState(this.options.highlightState);
                }));
            })) : this._marks.forEach((mark => {
                mark.elements.forEach((el => {
                    this.isBrushContainGraphicItem(event.detail.operateMask, el.getGraphicItem()) ? (elements.push(el), 
                    el.removeState(this.options.blurState), el.addState(this.options.highlightState)) : (el.removeState(this.options.highlightState), 
                    el.addState(this.options.blurState));
                }));
            })), this._dispatchEvent(event, elements);
        };
    }
}

BrushHighlight.type = "brush-highlight", BrushHighlight.defaultOptions = {
    highlightState: InteractionStateEnum.highlight,
    blurState: InteractionStateEnum.blur
};
//# sourceMappingURL=brush-highlight.js.map