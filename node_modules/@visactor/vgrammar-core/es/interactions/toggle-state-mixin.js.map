{"version":3,"sources":["../src/interactions/toggle-state-mixin.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,gBAAgB;IAK3B,YAAY,CAAC,KAAc,EAAE,YAAqB;QAChD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACzB,MAAM,UAAU,GACd,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClG,MAAM,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAE5F,IAAI,CAAC,UAAU,IAAI,CAAC,QAAQ,EAAE;gBAC5B,OAAO;aACR;YAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAE3E,IAAI,QAAQ,EAAE;oBACZ,IAAI,QAAQ,EAAE;wBACZ,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACpB;oBAED,IAAI,UAAU,EAAE;wBACd,EAAE,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;qBAC9B;iBACF;qBAAM;oBACL,IAAI,QAAQ,EAAE;wBACZ,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;qBACvB;oBAED,IAAI,UAAU,EAAE;wBACd,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;qBAC3B;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,KAAc,EAAE,YAAqB;QAClD,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YACzD,OAAO;SACR;QAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACzB,IAAI,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACnG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;oBACzB,EAAE,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;aACJ;YAED,IAAI,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC9E,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;oBACzB,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF","file":"toggle-state-mixin.js","sourcesContent":["import type { IElement, IGlyphElement, IMark, IToggleStateMixin } from '../types';\n\nexport class ToggleStateMixin implements IToggleStateMixin {\n  protected _statedElements?: (IElement | IGlyphElement)[];\n  protected _marks?: IMark[];\n  protected _stateMarks: Record<string, IMark[]>;\n\n  updateStates(state?: string, reverseState?: string) {\n    this._marks.forEach(mark => {\n      const hasReverse =\n        reverseState && this._stateMarks[reverseState] && this._stateMarks[reverseState].includes(mark);\n      const hasState = state && this._stateMarks[state] && this._stateMarks[state].includes(mark);\n\n      if (!hasReverse && !hasState) {\n        return;\n      }\n\n      mark.elements.forEach(el => {\n        const isStated = this._statedElements && this._statedElements.includes(el);\n\n        if (isStated) {\n          if (hasState) {\n            el.addState(state);\n          }\n\n          if (hasReverse) {\n            el.removeState(reverseState);\n          }\n        } else {\n          if (hasState) {\n            el.removeState(state);\n          }\n\n          if (hasReverse) {\n            el.addState(reverseState);\n          }\n        }\n      });\n    });\n  }\n\n  clearAllStates(state?: string, reverseState?: string) {\n    if (!this._statedElements || !this._statedElements.length) {\n      return;\n    }\n\n    this._marks.forEach(mark => {\n      if (reverseState && this._stateMarks[reverseState] && this._stateMarks[reverseState].includes(mark)) {\n        mark.elements.forEach(el => {\n          el.removeState(reverseState);\n        });\n      }\n\n      if (state && this._stateMarks[state] && this._stateMarks[state].includes(mark)) {\n        mark.elements.forEach(el => {\n          el.removeState(state);\n        });\n      }\n    });\n  }\n}\n"]}