{"version":3,"sources":["../src/utils/text.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAEvD,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,QAAyC,EACzC,MAAoC,EACpC,cAAwB,EACxB,iBAAkD,EACd,EAAE;IACtC,OAAO,IAAI,WAAW,iBAElB,iBAAiB,kBACf,UAAU,EAER,gKAAgK,EAClK,QAAQ,EAAE,EAAE,IACT,iBAAiB,GAEtB,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,EACzD,cAAc,EAAE,cAAc,GAAG,WAAW,CAAC,iBAAiB,GAAG,WAAW,CAAC,iBAAiB,CAAC,WAAW,EAAE,IACzG,CAAC,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,EAAE,CAAC,GAEnB,QAAQ,CACT,CAAC;AACJ,CAAC,CAAC","file":"text.js","sourcesContent":["import type { ITextMeasureOption } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { TextMeasure } from '@visactor/vutils';\nimport { ITextGraphicAttribute } from '@visactor/vrender-core';\nimport { getTextBounds } from '@visactor/vrender-core';\n\nexport const initTextMeasure = (\n  textSpec?: Partial<ITextGraphicAttribute>,\n  option?: Partial<ITextMeasureOption>,\n  useNaiveCanvas?: boolean,\n  defaultFontParams?: Partial<ITextGraphicAttribute>\n): TextMeasure<ITextGraphicAttribute> => {\n  return new TextMeasure<ITextGraphicAttribute>(\n    {\n      defaultFontParams: {\n        fontFamily:\n          // eslint-disable-next-line max-len\n          'PingFang SC,Helvetica Neue,Microsoft Yahei,system-ui,-apple-system,segoe ui,Roboto,Helvetica,Arial,sans-serif,apple color emoji,segoe ui emoji,segoe ui symbol',\n        fontSize: 14,\n        ...defaultFontParams\n      },\n      getTextBounds: useNaiveCanvas ? undefined : getTextBounds,\n      specialCharSet: '-/: .,@%\\'\"~' + TextMeasure.ALPHABET_CHAR_SET + TextMeasure.ALPHABET_CHAR_SET.toUpperCase(),\n      ...(option ?? {})\n    },\n    textSpec\n  );\n};\n"]}