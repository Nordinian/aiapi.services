import type { IGroup, IPolygon } from '@visactor/vrender-core';
import { Tag } from '../tag';
import { Marker } from './base';
import type { MarkAreaAttrs } from './type';
import type { ComponentOptions } from '../interface';
export declare class MarkArea extends Marker<MarkAreaAttrs> {
    name: string;
    static defaultAttributes: {
        label: {
            position: import("./type").IMarkAreaLabelPosition;
            textStyle: {
                fill: string;
                stroke: string;
                lineWidth: number;
                fontSize: number;
                fontWeight: string;
                fontStyle: string;
            };
            padding: number[];
            panel: {
                visible: boolean;
                cornerRadius: number;
                fill: string;
                fillOpacity: number;
            };
        };
        areaStyle: {
            fill: string;
            visible: boolean;
        };
    };
    private _area;
    getArea(): IPolygon;
    getLabel(): Tag;
    constructor(attributes: MarkAreaAttrs, options?: ComponentOptions);
    private _getPositionByDirection;
    protected setLabelPos(): void;
    protected initMarker(container: IGroup): void;
    protected updateMarker(): void;
    protected isValidPoints(): boolean;
}
