import type { IGraphicAttribute, IGroupGraphicAttribute, ILineGraphicAttribute, ISymbolGraphicAttribute, SymbolType } from '@visactor/vrender-core';
import type { Point, State } from '../core/type';
export type SymbolAttributes = {
    visible: boolean;
    symbolType?: SymbolType;
    size?: number;
    autoRotate?: boolean;
    refX?: number;
    refY?: number;
    refAngle?: number;
    clip?: boolean;
    style?: Partial<IGraphicAttribute>;
};
export interface SegmentAttributes extends IGroupGraphicAttribute {
    visible?: boolean;
    multiSegment?: boolean;
    mainSegmentIndex?: number;
    points: Point[] | Point[][];
    startSymbol?: SymbolAttributes;
    endSymbol?: SymbolAttributes;
    lineStyle?: ILineGraphicWithCornerRadius | Partial<ILineGraphicAttribute>[];
    state?: {
        line?: State<ILineGraphicWithCornerRadius | Partial<ILineGraphicAttribute>[]>;
        symbol?: State<Partial<ISymbolGraphicAttribute>>;
    };
}
interface ILineGraphicWithCornerRadius extends Partial<ILineGraphicAttribute> {
    cornerRadius?: number;
}
export {};
