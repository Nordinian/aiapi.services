import type { IGroup, IImage, ISymbol, IImageGraphicAttribute, IRichText, IRichTextGraphicAttribute } from '@visactor/vrender-core';
import { Tag } from '../tag';
import { Marker } from './base';
import type { IItemContent, IItemLine, MarkPointAttrs } from './type';
import { IMarkPointItemPosition } from './type';
import type { Point } from '../core/type';
import type { ComponentOptions } from '../interface';
export declare class MarkPoint extends Marker<MarkPointAttrs> {
    name: string;
    static defaultAttributes: {
        itemLine: {
            visible: boolean;
            decorativeLine: {
                visible: boolean;
                length: number;
            };
            startSymbol: {
                visible: boolean;
                clip: boolean;
                symbolType: string;
                size: number;
                style: {
                    fill: boolean;
                    stroke: string;
                };
            };
            endSymbol: {
                visible: boolean;
                clip: boolean;
                symbolType: string;
                size: number;
                style: {
                    fill: boolean;
                    stroke: string;
                };
            };
            lineStyle: {
                stroke: string;
                lineWidth: number;
            };
        };
        itemContent: {
            type: string;
            position: string;
            refX: number;
            symbolStyle: {
                symbolType: string;
                fill: string;
                fillOpacity: number;
                size: number;
            };
            textStyle: {
                dx: number;
                dy: number;
            };
            imageStyle: {
                width: number;
                height: number;
            };
            richTextStyle: {
                width: number;
                height: number;
            };
        };
    };
    private _item;
    private _line?;
    private _decorativeLine;
    constructor(attributes: MarkPointAttrs, options?: ComponentOptions);
    protected setLabelPos(): void;
    protected setItemAttributes(item: ISymbol | Tag | IImage | IRichText, itemContent: IItemContent, itemPosition: Point, itemType: 'symbol' | 'text' | 'image' | 'richText' | 'custom'): void;
    protected getItemDx(item: ISymbol | Tag | IImage | IRichText, position: keyof typeof IMarkPointItemPosition, style?: IImageGraphicAttribute | IRichTextGraphicAttribute): number;
    protected getItemDy(item: ISymbol | Tag | IImage | IRichText, position: keyof typeof IMarkPointItemPosition, style?: IImageGraphicAttribute | IRichTextGraphicAttribute): number;
    protected initItem(itemContent: IItemContent, itemPosition: Point): IGroup | Tag | ISymbol | IRichText | IImage;
    protected getItemLineAttr(itemLine: IItemLine, position: Point, itemPosition: Point): Point[];
    protected setItemLineAttr(itemLine: IItemLine, position: Point, itemPosition: Point, visible: boolean): void;
    protected getDecorativeLineAttr(itemLine: IItemLine, itemPosition: Point): {
        startPointOffsetX: number;
        startPointOffsetY: number;
        endPointOffsetX: number;
        endPointOffsetY: number;
    };
    protected setDecorativeLineAttr(itemLine: IItemLine, itemPosition: Point, visible: boolean): void;
    protected setAllOfItemsAttr(itemPosition: Point): void;
    protected initMarker(container: IGroup): void;
    protected updateMarker(): void;
    protected isValidPoints(): boolean;
}
