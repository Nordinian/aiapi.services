"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.LineLabel = void 0;

const vutils_1 = require("@visactor/vutils"), base_1 = require("./base"), util_1 = require("./util");

class LineLabel extends base_1.LabelBase {
    constructor(attributes, options) {
        super((null == options ? void 0 : options.skipDefault) ? attributes : (0, vutils_1.merge)({}, LineLabel.defaultAttributes, attributes)), 
        this.name = "line-label";
    }
    getGraphicBounds(graphic, point = {}, position = "end") {
        if (!graphic || "line" !== graphic.type) return super.getGraphicBounds(graphic, point);
        const points = graphic.attribute.points || [ point ], index = "start" === position ? 0 : points.length - 1;
        return points[index] ? {
            x1: points[index].x,
            x2: points[index].x,
            y1: points[index].y,
            y2: points[index].y
        } : void 0;
    }
    labeling(textBounds, graphicBounds, position = "end", offset = 0) {
        return (0, util_1.labelingLineOrArea)(textBounds, graphicBounds, position, offset);
    }
}

exports.LineLabel = LineLabel, LineLabel.defaultAttributes = {
    textStyle: {
        fontSize: 12,
        fill: "#000",
        textAlign: "center",
        textBaseline: "middle",
        boundsPadding: [ -1, 0, -1, 0 ]
    },
    position: "end",
    offset: 6,
    pickable: !1
};
//# sourceMappingURL=line.js.map