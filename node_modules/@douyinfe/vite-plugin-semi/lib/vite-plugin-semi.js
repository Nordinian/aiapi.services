"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** reference from https://github.com/boenfu/vite-plugin-semi-theme */
const FS = __importStar(require("fs"));
const Path = __importStar(require("path"));
const sass_1 = require("sass");
const url_1 = require("url");
const utils_1 = require("./utils");
const semi_theme_loader_1 = require("./semi-theme-loader");
function semiVitePlugin(options = {}) {
    return {
        name: 'vite-plugin-semi',
        load(id) {
            var _a;
            const filePath = (0, utils_1.transformPath)(id);
            if (options.include) {
                options.include = (0, utils_1.transformPath)(options.include);
            }
            if (/@douyinfe\/semi-(ui|icons|foundation)\/lib\/.+\.css$/.test(filePath)) {
                const scssFilePath = filePath.replace(/\.css$/, '.scss');
                const semiLoaderOptions = {
                    name: typeof options.theme === 'string' ? options.theme : (_a = options.theme) === null || _a === void 0 ? void 0 : _a.name,
                    cssLayer: options.cssLayer,
                    variables: (0, utils_1.convertMapToString)(options.variables || {}),
                };
                const originalScssRaw = FS.readFileSync(scssFilePath, 'utf-8');
                const newScssRaw = (0, semi_theme_loader_1.semiThemeLoader)(originalScssRaw, semiLoaderOptions);
                return (0, sass_1.compileString)(newScssRaw, {
                    importers: [
                        {
                            findFileUrl(url) {
                                var _a, _b;
                                if (url.startsWith('~')) {
                                    return new URL(url.substring(1), (0, url_1.pathToFileURL)((_b = (_a = scssFilePath.match(/^(\S*\/node_modules\/)/)) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : ''));
                                }
                                const filePath = Path.resolve(Path.dirname(scssFilePath), url);
                                if (FS.existsSync(filePath)) {
                                    return (0, url_1.pathToFileURL)(filePath);
                                }
                                return null;
                            },
                        },
                    ],
                    logger: sass_1.Logger.silent, // 禁用日志输出
                }).css;
            }
            //TODO: 处理 web-component 的 loader
            return null;
        },
    };
}
exports.default = semiVitePlugin;
//# sourceMappingURL=vite-plugin-semi.js.map