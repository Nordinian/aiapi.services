{"version":3,"sources":["../src/transform/tick-data/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import { ITextGraphicAttribute } from '@visactor/vrender-core';\n\nexport type CoordinateType = 'cartesian' | 'polar' | 'geo' | 'none';\nexport type IOrientType = 'left' | 'top' | 'right' | 'bottom' | 'z';\nexport type IPolarOrientType = 'radius' | 'angle';\n\nexport interface ITickDataOpt {\n  /**\n   * 是否进行轴采样\n   */\n  sampling?: boolean;\n  tickCount?: number | ((option: ITickCallbackOption) => number);\n  forceTickCount?: number;\n  tickStep?: number;\n  tickMode?: 'average' | 'd3' | string;\n  noDecimals?: boolean;\n\n  coordinateType: CoordinateType;\n  axisOrientType: IOrientType | IPolarOrientType;\n  startAngle?: number;\n\n  labelFormatter?: (value: any) => string;\n  labelStyle: ITextGraphicAttribute;\n  labelGap?: number;\n}\n\nexport interface ICartesianTickDataOpt extends ITickDataOpt {\n  axisOrientType: IOrientType;\n  labelLastVisible: boolean;\n  labelFlush: boolean;\n}\n\nexport interface IPolarTickDataOpt extends ITickDataOpt {\n  axisOrientType: IPolarOrientType;\n  getRadius: () => number;\n  labelOffset: number;\n}\n\nexport interface ITickData {\n  index: number;\n  value: number | string;\n  // label: string;\n}\n\ntype ITickCallbackOption = {\n  /**\n   * 坐标轴占据的画布大小。\n   * 直角坐标系中为轴的宽度或高度。\n   * 极坐标系中半径轴的长度。\n   */\n  axisLength?: number;\n  /**\n   * 轴标签的样式\n   */\n  labelStyle?: ITextGraphicAttribute;\n};\n"]}