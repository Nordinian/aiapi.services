import { genLinearSegments } from "./linear";

import { genBasisSegments } from "./basis";

import { genMonotoneXSegments, genMonotoneYSegments } from "./monotone";

import { genStepSegments } from "./step";

import { genLinearClosedSegments } from "./linear-closed";

export * from "./linear";

export * from "./linear-closed";

export * from "./basis";

export * from "./monotone";

export * from "./step";

export * from "./curve/curve-context";

export function calcLineCache(points, curveType, params) {
    switch (curveType) {
      case "linear":
      default:
        return genLinearSegments(points, params);

      case "basis":
        return genBasisSegments(points, params);

      case "monotoneX":
        return genMonotoneXSegments(points, params);

      case "monotoneY":
        return genMonotoneYSegments(points, params);

      case "step":
        return genStepSegments(points, .5, params);

      case "stepBefore":
        return genStepSegments(points, 0, params);

      case "stepAfter":
        return genStepSegments(points, 1, params);

      case "linearClosed":
        return genLinearClosedSegments(points, params);
    }
}
//# sourceMappingURL=index.js.map
