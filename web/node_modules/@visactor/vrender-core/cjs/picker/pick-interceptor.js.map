{"version":3,"sources":["../src/picker/pick-interceptor.ts"],"names":[],"mappings":"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","file":"pick-interceptor.js","sourcesContent":["import type { IMatrix, IPointLike } from '@visactor/vutils';\nimport { Point, pi2 } from '@visactor/vutils';\nimport { injectable } from '../common/inversify-lite';\nimport { ARC3D_NUMBER_TYPE } from '../graphic/constants';\nimport type {\n  IArc,\n  IContext2d,\n  IGraphic,\n  IGroup,\n  IPickItemInterceptorContribution,\n  IPickParams,\n  IPickerService,\n  PickResult\n} from '../interface';\nimport { matrixAllocate } from '../allocator/matrix-allocate';\n\n// 拦截器\nexport const PickItemInterceptor = Symbol.for('PickItemInterceptor');\n\n/**\n * 影子节点拦截器，用于渲染影子节点\n */\n@injectable()\nexport class ShadowRootPickItemInterceptorContribution implements IPickItemInterceptorContribution {\n  order: number = 1;\n  afterPickItem(\n    graphic: IGraphic,\n    pickerService: IPickerService,\n    point: IPointLike,\n    pickParams: IPickParams,\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ): null | PickResult {\n    if (graphic.attribute.shadowRootIdx > 0 || !graphic.attribute.shadowRootIdx) {\n      return this._pickItem(graphic, pickerService, point, pickParams, params);\n    }\n    return null;\n  }\n\n  beforePickItem(\n    graphic: IGraphic,\n    pickerService: IPickerService,\n    point: IPointLike,\n    pickParams: IPickParams,\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ): null | PickResult {\n    if (graphic.attribute.shadowRootIdx < 0) {\n      return this._pickItem(graphic, pickerService, point, pickParams, params);\n    }\n    return null;\n  }\n\n  protected _pickItem(\n    graphic: IGraphic,\n    pickerService: IPickerService,\n    point: IPointLike,\n    pickParams: IPickParams,\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ): PickResult | null {\n    if (!graphic.shadowRoot) {\n      return null;\n    }\n    const { parentMatrix } = params || {};\n    if (!parentMatrix) {\n      return null;\n    }\n\n    const context = pickerService.pickContext;\n    context.highPerformanceSave();\n\n    const g = graphic.shadowRoot;\n    const currentGroupMatrix = matrixAllocate.allocateByObj(parentMatrix);\n    const newPoint = new Point(\n      currentGroupMatrix.a * point.x + currentGroupMatrix.c * point.y + currentGroupMatrix.e,\n      currentGroupMatrix.b * point.x + currentGroupMatrix.d * point.y + currentGroupMatrix.f\n    );\n    // const transMatrix = graphic.transMatrix;\n    // currentGroupMatrix.multiply(\n    //   transMatrix.a,\n    //   transMatrix.b,\n    //   transMatrix.c,\n    //   transMatrix.d,\n    //   transMatrix.e,\n    //   transMatrix.f\n    // );\n\n    // currentGroupMatrix.transformPoint(newPoint, newPoint);\n    const result = pickerService.pickGroup(g, newPoint, currentGroupMatrix, pickParams);\n\n    context.highPerformanceRestore();\n\n    return result;\n  }\n}\n\n@injectable()\nexport class InteractivePickItemInterceptorContribution implements IPickItemInterceptorContribution {\n  order: number = 1;\n\n  beforePickItem(\n    graphic: IGraphic,\n    pickerService: IPickerService,\n    point: IPointLike,\n    pickParams: IPickParams,\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ): null | PickResult {\n    const originGraphic = graphic.baseGraphic;\n    if (originGraphic && originGraphic.parent) {\n      const newPoint = new Point(point.x, point.y);\n      const context = pickerService.pickContext;\n      context.highPerformanceSave();\n      const parentMatrix = originGraphic.parent.globalTransMatrix;\n      parentMatrix.transformPoint(newPoint, newPoint);\n\n      const result = originGraphic.isContainer\n        ? pickerService.pickGroup(originGraphic, newPoint.clone(), parentMatrix, pickParams)\n        : pickerService.pickItem(originGraphic, newPoint.clone(), parentMatrix, pickParams);\n      context.highPerformanceRestore();\n      return result;\n    }\n    return null;\n  }\n}\n\n/**\n * 3d拦截器，用于渲染3d视角\n */\n@injectable()\nexport class Canvas3DPickItemInterceptor implements IPickItemInterceptorContribution {\n  // canvas?: ICanvas;\n  order: number = 1;\n\n  beforePickItem(\n    graphic: IGraphic,\n    pickerService: IPickerService,\n    point: IPointLike,\n    pickParams: IPickParams,\n    params?: {\n      parentMatrix: IMatrix;\n    }\n  ) {\n    if (!graphic.in3dMode || pickParams.in3dInterceptor) {\n      return null;\n    }\n\n    const context = pickerService.pickContext;\n    const stage = graphic.stage;\n    if (!(context && stage)) {\n      return null;\n    }\n    pickParams.in3dInterceptor = true;\n\n    // 使用3d模式渲染\n    context.save();\n    this.initCanvasCtx(context);\n    context.camera = stage.camera;\n\n    // 设置context的transform到上一个节点\n    if (graphic.isContainer) {\n      // hack逻辑，如果是饼图的话，需要依次绘制不同的边\n      let isPie: boolean = false;\n      let is3d: boolean = false;\n      graphic.forEachChildren((c: IGraphic) => {\n        isPie = c.numberType === ARC3D_NUMBER_TYPE;\n        return !isPie;\n      });\n      graphic.forEachChildren((c: IGraphic) => {\n        is3d = !!c.findFace;\n        return !is3d;\n      });\n\n      let result: PickResult;\n      if (isPie) {\n        const children = graphic.getChildren() as IArc[];\n        // 绘制内层\n        // drawContext.hack_pieFace = 'inside';\n        // drawContribution.renderGroup(graphic as IGroup, drawContext);\n        // 绘制底部\n        // drawContext.hack_pieFace = 'bottom';\n        // drawContribution.renderGroup(graphic as IGroup, drawContext);\n        // 绘制外部\n        // 排序一下\n        const sortedChildren = [...children];\n        sortedChildren.sort((a, b) => {\n          let angle1 = (a.attribute.startAngle ?? 0 + a.attribute.endAngle ?? 0) / 2;\n          let angle2 = (b.attribute.startAngle ?? 0 + b.attribute.endAngle ?? 0) / 2;\n          while (angle1 < 0) {\n            angle1 += pi2;\n          }\n          while (angle2 < 0) {\n            angle2 += pi2;\n          }\n          return angle2 - angle1;\n        });\n        sortedChildren.forEach(c => {\n          c._next = null;\n          c._prev = null;\n        });\n        graphic.removeAllChild();\n        graphic.update();\n        sortedChildren.forEach(c => {\n          graphic.appendChild(c);\n        });\n        pickParams.hack_pieFace = 'outside';\n        result = pickerService.pickGroup(graphic as IGroup, point, params.parentMatrix, pickParams);\n        if (!result.graphic) {\n          // 绘制内部\n          pickParams.hack_pieFace = 'inside';\n          result = pickerService.pickGroup(graphic as IGroup, point, params.parentMatrix, pickParams);\n        }\n        if (!result.graphic) {\n          // 绘制顶部\n          pickParams.hack_pieFace = 'top';\n          result = pickerService.pickGroup(graphic as IGroup, point, params.parentMatrix, pickParams);\n        }\n        graphic.removeAllChild();\n        children.forEach(c => {\n          c._next = null;\n          c._prev = null;\n        });\n        children.forEach(c => {\n          graphic.appendChild(c);\n        });\n      } else if (is3d) {\n        // 排序这些图元\n        const children = graphic.getChildren() as IGraphic[];\n        const zChildren = children.map(g => {\n          const face3d = g.findFace();\n          const vertices = face3d.vertices;\n          // 计算每个顶点的view\n          const viewdVerticesZ = vertices.map(v => {\n            return context.view(v[0], v[1], v[2] + g.attribute.z ?? 0)[2];\n          });\n          const ave_z = viewdVerticesZ.reduce((a, b) => a + b, 0);\n          return {\n            ave_z,\n            g\n          };\n        });\n        zChildren.sort((a, b) => b.ave_z - a.ave_z);\n        graphic.removeAllChild();\n        zChildren.forEach(i => {\n          i.g._next = null;\n          i.g._prev = null;\n        });\n        graphic.update();\n        zChildren.forEach(i => {\n          graphic.add(i.g);\n        });\n\n        result = pickerService.pickGroup(graphic as IGroup, point, params.parentMatrix, pickParams);\n\n        graphic.removeAllChild();\n        children.forEach(g => {\n          g._next = null;\n          g._prev = null;\n        });\n        graphic.update();\n        children.forEach(g => {\n          graphic.add(g);\n        });\n      } else {\n        result = pickerService.pickGroup(graphic as IGroup, point, params.parentMatrix, pickParams);\n      }\n\n      context.camera = null;\n\n      pickParams.in3dInterceptor = false;\n      context.restore();\n      return result;\n    }\n    context.restore();\n    return null;\n  }\n\n  initCanvasCtx(context: IContext2d) {\n    context.setTransformForCurrent();\n  }\n}\n"]}