{"version":3,"sources":["../src/series/area/area-transformer.ts"],"names":[],"mappings":"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","file":"area-transformer.js","sourcesContent":["import { isNil, isValid } from '@visactor/vutils';\nimport type { IChartSpecInfo } from '../../chart/interface';\nimport { SeriesMarkNameEnum } from '../interface';\nimport { LineLikeSeriesSpecTransformer } from '../mixin/line-mixin-transformer';\nimport type { AreaSeries } from './area';\nimport type { IAreaSeriesSpec, IAreaSeriesTheme } from './interface';\nimport type { ConvertToMarkStyleSpec, IAreaMarkSpec } from '../../typings';\nimport { mergeSpec } from '../../util';\n\nexport class AreaSeriesSpecTransformer<\n  T extends IAreaSeriesSpec = IAreaSeriesSpec,\n  K extends IAreaSeriesTheme = IAreaSeriesTheme\n> extends LineLikeSeriesSpecTransformer<T, K> {\n  protected _transformLabelSpec(spec: T): void {\n    super._transformLabelSpec(spec);\n    this._addMarkLabelSpec<AreaSeries>(\n      spec,\n      SeriesMarkNameEnum.area,\n      'areaLabel' as any,\n      'initLineLabelMarkStyle',\n      undefined,\n      true\n    );\n    const isPointVisible = spec.point?.visible !== false && spec.point?.style?.visible !== false;\n    if (!isPointVisible) {\n      this._addMarkLabelSpec(spec, SeriesMarkNameEnum.area);\n    }\n  }\n\n  protected _transformSpecAfterMergingTheme(spec: T, chartSpec: any, chartSpecInfo?: IChartSpecInfo) {\n    super._transformSpecAfterMergingTheme(spec, chartSpec, chartSpecInfo);\n\n    const { area = {}, line = {}, seriesMark = 'area' } = spec;\n    const isAreaVisible = area.visible !== false && area.style?.visible !== false;\n    const isLineVisible = line.visible !== false && line.style?.visible !== false;\n    // merge line to area\n    area.interactive = !!(area.interactive || (line.interactive ?? true));\n    area.support3d = !!(area.support3d || line.support3d);\n    area.zIndex =\n      isValid(area.zIndex) || isValid(line.zIndex) ? Math.max(area.zIndex ?? 0, line.zIndex ?? 0) : undefined;\n\n    // remove area stroke\n    if (area.style) {\n      delete area.style.stroke;\n    }\n    if (area.state) {\n      Object.keys(area.state).forEach(state => {\n        if ('style' in area.state[state]) {\n          delete area.state[state].style.stroke;\n        } else {\n          delete (<ConvertToMarkStyleSpec<IAreaMarkSpec>>area.state[state]).stroke;\n        }\n      });\n    }\n    // check which one is main\n    let mainSpec = area;\n    let subSpec = line;\n    if (seriesMark === 'line' || (isLineVisible && !isAreaVisible)) {\n      mainSpec = line;\n      subSpec = area;\n    }\n    area.style = mergeSpec({}, subSpec.style, mainSpec.style);\n    area.state = mergeSpec({}, subSpec.state, mainSpec.state);\n    if (!isAreaVisible) {\n      area.style.fill = false;\n    }\n    if (!isLineVisible) {\n      area.style.stroke = false;\n    }\n    area.visible = !(!isAreaVisible && !isLineVisible);\n\n    spec.area = area;\n    spec.line = line;\n  }\n}\n"]}