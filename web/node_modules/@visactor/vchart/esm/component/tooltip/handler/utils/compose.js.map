{"version":3,"sources":["../src/component/tooltip/handler/utils/compose.ts"],"names":[],"mappings":"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","file":"compose.js","sourcesContent":["import { isValid, isNil, array } from '@visactor/vutils';\nimport type { TooltipActualTitleContent } from '../../tooltip';\nimport type {\n  IToolTipLinePattern,\n  ITooltipPattern,\n  TooltipData,\n  IToolTipLineActual\n} from '../../../../typings/tooltip';\nimport { getFirstDatumFromTooltipData, getTooltipContentValue, getTooltipPatternValue } from './common';\nimport { getTooltipActualActiveType } from '../../utils/common';\nimport type { IDimensionData, IDimensionInfo } from '../../../../event/events/dimension/interface';\nimport type { TooltipHandlerParams } from '../../interface';\nimport { TOOLTIP_MAX_LINE_COUNT, TOOLTIP_OTHERS_LINE } from '../constants';\n\n/**\n * 获得tooltip的实际显示内容\n * @param pattern\n * @param data\n * @param event\n * @returns\n */\nexport const getShowContent = (\n  pattern: ITooltipPattern,\n  data: TooltipData,\n  params: TooltipHandlerParams\n): TooltipActualTitleContent | null => {\n  if (\n    !data ||\n    // data.key === undefined ||\n    params?.event?.type === 'mouseout'\n  ) {\n    return null;\n  }\n\n  const patternTitle = getTooltipPatternValue(pattern.title, data, params);\n  const patternContent = array(getTooltipPatternValue(pattern.content, data, params));\n\n  const tooltipContent: Required<TooltipActualTitleContent> = {\n    title: {\n      value: patternTitle?.value?.toString(),\n      hasShape: false,\n      shapeType: undefined,\n      shapeHollow: undefined\n    },\n    content: []\n  };\n\n  const { maxLineCount = TOOLTIP_MAX_LINE_COUNT } = pattern;\n\n  /** title */\n  const patternTitleVisible = getTooltipContentValue(patternTitle?.visible, data, params) !== false;\n  if (!patternTitle || !patternTitleVisible) {\n    tooltipContent.title = {\n      hasShape: false,\n      visible: false\n    };\n  } else {\n    // 找到第一个可用的datum\n    const datum = getFirstDatumFromTooltipData(data);\n    tooltipContent.title = {\n      value: getTooltipContentValue(patternTitle?.value, datum, params),\n      valueStyle: getTooltipContentValue(patternTitle?.valueStyle, datum, params),\n      hasShape: patternTitle.hasShape\n    };\n  }\n\n  /** content */\n  if (pattern.activeType === 'mark') {\n    for (const content of patternContent ?? []) {\n      const oneLineData = getOneLineData((data as IDimensionData[])[0]?.datum[0], content, params);\n      if (oneLineData.visible !== false) {\n        if (tooltipContent.content.length === maxLineCount - 1) {\n          tooltipContent.content.push({\n            ...oneLineData,\n            ...TOOLTIP_OTHERS_LINE\n          });\n          break;\n        } else if (tooltipContent.content.length < maxLineCount) {\n          tooltipContent.content.push(oneLineData);\n        } else {\n          break;\n        }\n      }\n    }\n  } else if (pattern.activeType === 'dimension') {\n    for (const { data: d } of data as IDimensionInfo[]) {\n      for (const { datum, series } of d) {\n        if (!getTooltipActualActiveType(series.tooltipHelper?.spec).includes('dimension')) {\n          continue;\n        }\n        const contentPatterns =\n          patternContent?.filter(\n            c => isNil(c.seriesId) || c.seriesId === series.id // 匹配对应series\n          ) ?? [];\n        for (const datumItem of datum) {\n          for (const linePattern of contentPatterns) {\n            const oneLineData = getOneLineData(datumItem, linePattern, params);\n            if (oneLineData.visible === false) {\n              continue;\n            }\n            if (tooltipContent.content.length === maxLineCount - 1) {\n              tooltipContent.content.push({\n                ...oneLineData,\n                ...TOOLTIP_OTHERS_LINE\n              });\n              break;\n            } else if (tooltipContent.content.length < maxLineCount) {\n              tooltipContent.content.push(oneLineData);\n            } else {\n              break;\n            }\n          }\n          if (tooltipContent.content.length >= maxLineCount) {\n            break;\n          }\n        }\n        if (tooltipContent.content.length >= maxLineCount) {\n          break;\n        }\n      }\n      if (tooltipContent.content.length >= maxLineCount) {\n        break;\n      }\n    }\n  }\n\n  if (tooltipContent.title) {\n    // TODO：对 title shape 的支持目前还不完整，尚没有相关需求\n    if (tooltipContent.content.length > 0 && tooltipContent.content[0].shapeType) {\n      if (isNil(tooltipContent.title.shapeType)) {\n        tooltipContent.title.shapeType = tooltipContent.content[0].shapeType;\n      }\n      if (isNil(tooltipContent.title.shapeColor)) {\n        tooltipContent.title.shapeColor = tooltipContent.content[0].shapeColor;\n      }\n    } else {\n      tooltipContent.title.hasShape = false;\n    }\n  }\n\n  return tooltipContent;\n};\n\n/**\n * 获得tooltip的单行实际显示内容\n * @param datum\n * @param config\n * @returns\n */\nexport const getOneLineData = (\n  datum: any,\n  config: IToolTipLinePattern,\n  params: TooltipHandlerParams\n): IToolTipLineActual => {\n  const key = getTooltipContentValue(config.key, datum, params);\n  const value = getTooltipContentValue(config.value, datum, params);\n  const visible: boolean =\n    getTooltipContentValue(config.visible, datum, params) !== false && (isValid(key) || isValid(value));\n  const isKeyAdaptive = getTooltipContentValue(config.isKeyAdaptive, datum, params);\n  const spaceRow = getTooltipContentValue(config.spaceRow, datum, params);\n\n  const shapeType = getTooltipContentValue(config.shapeType, datum, params);\n  const shapeColor = getTooltipContentValue(config.shapeColor, datum, params);\n  const shapeFill = getTooltipContentValue(config.shapeFill, datum, params);\n  const shapeStroke = getTooltipContentValue(config.shapeStroke, datum, params);\n  const shapeLineWidth = getTooltipContentValue(config.shapeLineWidth, datum, params);\n  const keyStyle = getTooltipContentValue(config.keyStyle, datum, params);\n  const valueStyle = getTooltipContentValue(config.valueStyle, datum, params);\n\n  return {\n    key,\n    value,\n    visible,\n    isKeyAdaptive,\n    hasShape: config.hasShape,\n    shapeType: shapeType as any,\n    shapeFill,\n    shapeStroke,\n    shapeLineWidth,\n    shapeHollow: config.shapeHollow,\n    shapeColor,\n    keyStyle,\n    valueStyle,\n    spaceRow,\n    datum\n  };\n};\n"]}