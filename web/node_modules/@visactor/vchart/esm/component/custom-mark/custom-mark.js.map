{"version":3,"sources":["../src/component/custom-mark/custom-mark.ts"],"names":[],"mappings":"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","file":"custom-mark.js","sourcesContent":["import { BaseComponent } from '../base/base-component';\nimport { ComponentTypeEnum } from '../interface/type';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IComponentOption } from '../interface';\nimport type { IRegion } from '../../region/interface';\nimport type { IModelRenderOption, IModelSpecInfo } from '../../model/interface';\nimport { LayoutLevel, LayoutZIndex, PREFIX } from '../../constant';\nimport type { EnableMarkType, ICustomMarkGroupSpec, ICustomMarkSpec } from '../../typings';\nimport type { IGroupMark } from '../../mark/group';\nimport type { MarkTypeEnum } from '../../mark/interface';\nimport type { Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { isEqual, isNil, isValid, isValidNumber } from '@visactor/vutils';\nimport { Factory } from '../../core/factory';\nimport { ImageMark, registerImageMark } from '../../mark/image';\nimport type { IGraphic } from '@visactor/vrender-core';\n\n// TODO: 规范范型\nexport class CustomMark<T = any> extends BaseComponent<any> {\n  static type = ComponentTypeEnum.customMark;\n  type = ComponentTypeEnum.customMark;\n\n  static specKey = 'customMark';\n  specKey = 'customMark';\n\n  layoutType: 'none' = 'none';\n  layoutZIndex: number = LayoutZIndex.CustomMark;\n  layoutLevel: number = LayoutLevel.CustomMark;\n\n  protected declare _spec: (ICustomMarkSpec<Exclude<EnableMarkType, MarkTypeEnum.group>> | ICustomMarkGroupSpec)[];\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    const spec = chartSpec[this.specKey];\n    if (!spec) {\n      return null;\n    }\n    return [\n      {\n        spec,\n        specIndex: 0,\n        specPath: [this.specKey],\n        type: ComponentTypeEnum.customMark\n      }\n    ];\n  }\n\n  created() {\n    super.created();\n    this.initMarks();\n    this.initEvent();\n  }\n\n  protected initMarks() {\n    if (!this._spec) {\n      return;\n    }\n    this._spec.forEach((m, i) => {\n      this._createExtensionMark(m, null, `${PREFIX}_series_${this.id}_extensionMark`, i);\n    });\n  }\n\n  private _createExtensionMark(\n    spec: ICustomMarkSpec<Exclude<EnableMarkType, MarkTypeEnum.group>> | ICustomMarkGroupSpec,\n    parentMark: null | IGroupMark,\n    namePrefix: string,\n    index: number\n  ) {\n    const mark = this._createMark(\n      {\n        type: spec.type,\n        name: `${PREFIX}_${index}`\n      },\n      {\n        // 避免二次dataflow\n        skipBeforeLayouted: true,\n        attributeContext: this._getMarkAttributeContext()\n      }\n    ) as IGroupMark;\n    if (!mark) {\n      return;\n    }\n    if (isNil(parentMark)) {\n      this._marks.addMark(mark);\n    } else if (parentMark) {\n      parentMark.addMark(mark);\n    }\n    // set style\n    this.initMarkStyleWithSpec(mark, spec);\n    if (spec.type === 'group') {\n      namePrefix = `${namePrefix}_${index}`;\n      spec.children?.forEach((s, i) => {\n        this._createExtensionMark(s as any, mark, namePrefix, i);\n      });\n    }\n\n    if (isValid(spec.dataId) || isValidNumber(spec.dataIndex)) {\n      const dataview = this.getChart().getSeriesData(spec.dataId, spec.dataIndex);\n      if (dataview) {\n        dataview.target.addListener('change', () => {\n          mark.getData().updateData();\n        });\n        mark.setDataView(dataview);\n      }\n    }\n  }\n\n  initEvent() {\n    // do nothing\n  }\n\n  /**\n   * updateSpec\n   */\n  _compareSpec(spec: T, prevSpec: T) {\n    const result = super._compareSpec(spec, prevSpec);\n    if (!isEqual(prevSpec, spec)) {\n      result.reMake = true;\n    }\n\n    result.change = true;\n    result.reRender = true;\n    return result;\n  }\n\n  changeRegions(regions: IRegion[]): void {\n    // do nothing;\n  }\n\n  protected _getNeedClearVRenderComponents(): IGraphic[] {\n    return [];\n  }\n\n  onRender(ctx: IModelRenderOption): void {\n    // do nothing;\n  }\n  private _getMarkAttributeContext() {\n    return {\n      vchart: this._option.globalInstance,\n      globalScale: (key: string, value: string | number) => {\n        return this._option.globalScale.getScale(key)?.scale(value);\n      }\n    };\n  }\n}\n\nexport const registerCustomMark = () => {\n  registerImageMark();\n  Factory.registerComponent(CustomMark.type, CustomMark);\n};\n"]}