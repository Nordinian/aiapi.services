{"version":3,"sources":["../src/component/player/utils/transform.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAMzD,MAAM,eAAe,GAAG,CAAC,QAAuB,EAAyB,EAAE;IACzE,MAAM,MAAM,qBACN,QAA6C,CAClD,CAAC;IAEF,OAAO,kBAAkB,CAAC,MAAM,CAA0B,CAAC;AAC7D,CAAC,CAAC;AAKF,MAAM,iBAAiB,GAAG,CAAC,QAAyB,EAA2B,EAAE;IAC/E,MAAM,MAAM,qBACN,QAA+C,CACpD,CAAC;IAEF,OAAO,kBAAkB,CAAC,MAAM,CAA4B,CAAC;AAC/D,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAI,IAA8B,EAAE,EAAE;IAC5D,MAAM,MAAM,mCACP,IAAI,KACP,KAAK,oBACA,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAEpC,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,IAAa,EAAE,EAAE;;IAEzC,MAAM,UAAU,GAAG,eAAe,CAAC,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAE,UAAU,mCAAI,EAAE,CAAC,CAAC;IACnE,MAAM,SAAS,GAAG,eAAe,CAAC,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAE,SAAS,mCAAI,EAAE,CAAC,CAAC;IACjE,MAAM,YAAY,GAAG,iBAAiB,CAAC,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAE,YAAY,mCAAI,EAAE,CAAC,CAAC;IAGzE,MAAM,KAAK,GAAG,eAAe,CAAkB,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,0CAAE,KAAK,mCAAI,EAAE,CAAC,CAAC;IAC9E,MAAM,KAAK,GAAG,eAAe,CAAkB,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,0CAAE,KAAK,mCAAI,EAAE,CAAC,CAAC;IAC9E,MAAM,QAAQ,GAAG,eAAe,CAAkB,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,0CAAE,QAAQ,mCAAI,EAAE,CAAC,CAAC;IACpF,MAAM,OAAO,GAAG,eAAe,CAAkB,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,0CAAE,OAAO,mCAAI,EAAE,CAAC,CAAC;IAElF,uCACK,IAAI,KACP,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,MAAM,kCACD,IAAI,CAAC,MAAM,KACd,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,EACpB,YAAY,EAAE,YAAY,KAE5B,UAAU,kCACL,IAAI,CAAC,UAAU,KAClB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,OAElB;AACJ,CAAC,CAAC;AAKF,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,IAAa,EAAE,IAAa,EAA8B,EAAE,CAAC,iCACtG,gBAAgB,CAAC,IAAI,CAAS,KAClC,IAAI,EACJ,IAAI,EAAE,YAAY,IAClB,CAAC;AAEH,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,IAAa,EAAE,IAAa,EAA4B,EAAE,CAAC,iCAClG,gBAAgB,CAAC,IAAI,CAAS,KAClC,IAAI,EACJ,IAAI,EAAE,UAAU,IAChB,CAAC","file":"transform.js","sourcesContent":["import type { ContinuousPlayerAttributes, DiscretePlayerAttributes, Datum } from '@visactor/vrender-components';\nimport type { IPlayer } from '../interface';\nimport type { IRectGraphicAttribute, ISymbolGraphicAttribute } from '@visactor/vrender-core';\nimport type { IRectMarkSpec, ISymbolMarkSpec } from '../../../typings';\nimport { transformToGraphic } from '../../../util/style';\nimport type { BaseGraphicAttributes } from '@visactor/vrender-components/es/core/type';\n\n/**\n * IRectMarkSpec => IRectGraphicAttribute\n */\nconst rectToAttribute = (markSpec: IRectMarkSpec): IRectGraphicAttribute => {\n  const result: IRectGraphicAttribute = {\n    ...(markSpec as unknown as IRectGraphicAttribute)\n  };\n\n  return transformToGraphic(result) as IRectGraphicAttribute;\n};\n\n/**\n * ISymbolMarkSpec => ISymbolGraphicAttribute\n */\nconst symbolToAttribute = (markSpec: ISymbolMarkSpec): ISymbolGraphicAttribute => {\n  const result: ISymbolGraphicAttribute = {\n    ...(markSpec as unknown as ISymbolGraphicAttribute)\n  };\n\n  return transformToGraphic(result) as ISymbolGraphicAttribute;\n};\n\nconst baseToAttribute = <T>(spec: BaseGraphicAttributes<T>) => {\n  const result: BaseGraphicAttributes<T> = {\n    ...spec,\n    style: {\n      ...transformToGraphic(spec.style)\n    }\n  };\n  return result;\n};\n\nconst transformToAttrs = (spec: IPlayer) => {\n  // slider\n  const trackStyle = rectToAttribute(spec?.slider?.trackStyle ?? {});\n  const railStyle = rectToAttribute(spec?.slider?.railStyle ?? {});\n  const handlerStyle = symbolToAttribute(spec?.slider?.handlerStyle ?? {});\n\n  // controllers\n  const start = baseToAttribute<ISymbolMarkSpec>(spec?.controller?.start ?? {});\n  const pause = baseToAttribute<ISymbolMarkSpec>(spec?.controller?.pause ?? {});\n  const backward = baseToAttribute<ISymbolMarkSpec>(spec?.controller?.backward ?? {});\n  const forward = baseToAttribute<ISymbolMarkSpec>(spec?.controller?.forward ?? {});\n\n  return {\n    ...spec,\n    direction: spec.direction,\n    interval: spec.interval,\n    visible: spec.visible,\n    orient: spec.orient,\n    slider: {\n      ...spec.slider,\n      trackStyle: trackStyle,\n      railStyle: railStyle,\n      handlerStyle: handlerStyle\n    },\n    controller: {\n      ...spec.controller,\n      start: start,\n      pause: pause,\n      backward: backward,\n      forward: forward\n    }\n  };\n};\n\n/**\n * 连续型播放器spec转换为Attrs\n */\nexport const transformContinuousSpecToAttrs = (spec: IPlayer, data: Datum[]): ContinuousPlayerAttributes => ({\n  ...(transformToAttrs(spec) as any),\n  data,\n  type: 'continuous'\n});\n\nexport const transformDiscreteSpecToAttrs = (spec: IPlayer, data: Datum[]): DiscretePlayerAttributes => ({\n  ...(transformToAttrs(spec) as any),\n  data,\n  type: 'discrete'\n});\n"]}