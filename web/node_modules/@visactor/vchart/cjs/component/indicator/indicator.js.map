{"version":3,"sources":["../src/component/indicator/indicator.ts"],"names":[],"mappings":"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","file":"indicator.js","sourcesContent":["import { DataView } from '@visactor/vdataset';\nimport type { IComponentOption } from '../interface';\nimport { LayoutLevel, LayoutZIndex } from '../../constant';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../interface/type';\nimport { BaseComponent } from '../base/base-component';\nimport type { IRegion } from '../../region/interface';\nimport type { IIndicator, IIndicatorItemSpec, IIndicatorSpec, IIndicatorTheme } from './interface';\nimport type { Maybe } from '../../typings';\nimport { mergeSpec } from '../../util/spec/merge-spec';\nimport { eachSeries } from '../../util/model';\nimport { transformToGraphic } from '../../util/style';\nimport { getActualNumValue } from '../../util/space';\nimport { isEqual, isValid, isFunction, array, isArray } from '@visactor/vutils';\nimport { indicatorMapper } from './util';\nimport type { IModel, IModelSpecInfo } from '../../model/interface';\nimport { registerDataSetInstanceTransform } from '../../data/register';\nimport { CompilableData } from '../../compile/data/compilable-data';\nimport { Indicator as IndicatorComponents } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IndicatorAttributes } from '@visactor/vrender-components';\nimport type { IGraphic, INode, IGroup } from '@visactor/vrender-core';\nimport type { FunctionType } from '../../typings/visual';\nimport { Factory } from '../../core/factory';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IRichTextCharacter } from '@visactor/vrender-core';\n\nexport class Indicator<T extends IIndicatorSpec> extends BaseComponent<T> implements IIndicator {\n  static type = ComponentTypeEnum.indicator;\n  type = ComponentTypeEnum.indicator;\n  name: string = ComponentTypeEnum.indicator;\n\n  static specKey = 'indicator';\n  specKey = 'indicator';\n\n  layoutType: 'none' = 'none';\n  layoutZIndex: number = LayoutZIndex.Indicator;\n  layoutLevel: number = LayoutLevel.Indicator;\n\n  private _gap: number = 0;\n\n  private _activeDatum: any = null;\n  private _displayData!: CompilableData;\n\n  private _title: IIndicatorItemSpec;\n  private _content: IIndicatorItemSpec[];\n\n  private _indicatorComponent: IndicatorComponents;\n  private _cacheAttrs: IndicatorAttributes;\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    if (this.type !== Indicator.type) {\n      return null;\n    }\n    const indicatorSpec = chartSpec[this.specKey];\n    if (!isArray(indicatorSpec)) {\n      if (indicatorSpec.visible === false) {\n        return [];\n      }\n      return [\n        {\n          spec: indicatorSpec,\n          specPath: [this.specKey],\n          type: ComponentTypeEnum.indicator\n        }\n      ];\n    }\n\n    const specInfos: IModelSpecInfo[] = [];\n    indicatorSpec.forEach((s, i) => {\n      if (s && s.visible !== false) {\n        specInfos.push({\n          spec: s,\n          specIndex: i,\n          specPath: [this.specKey, i],\n          type: ComponentTypeEnum.indicator\n        });\n      }\n    });\n    return specInfos;\n  }\n\n  created() {\n    super.created();\n    // data\n    this.initData();\n    // event\n    this.initEvent();\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    this._gap = this._spec.gap || 0;\n    this._title = this._spec.title;\n    this._content = array(this._spec.content);\n    this._regions = this._option.getRegionsInUserIdOrIndex(array(this._spec.regionId), array(this._spec.regionIndex));\n  }\n\n  onRender(ctx: any): void {\n    // do nothing\n  }\n\n  // region\n  changeRegions(regions: IRegion[]): void {\n    // do nothing\n  }\n\n  // event\n  protected initEvent() {\n    if (this._option.disableTriggerEvent) {\n      return;\n    }\n    const trigger = this._spec.trigger;\n    if (trigger === 'none') {\n      return;\n    }\n\n    if (this._spec.trigger === 'hover') {\n      this.event.on('hovered', params => {\n        if (!params.model || this.isRelativeModel(params.model)) {\n          this.updateDatum(params.value[0]);\n        }\n      });\n      this.event.on('unhovered', params => {\n        if (!params.model || this.isRelativeModel(params.model)) {\n          this.updateDatum(null);\n        }\n      });\n    } else {\n      this.event.on('selected', params => {\n        if (!params.model || this.isRelativeModel(params.model)) {\n          this.updateDatum(params.value[0]);\n        }\n      });\n      this.event.on('unselected', params => {\n        if (!params.model || this.isRelativeModel(params.model)) {\n          this.updateDatum(null);\n        }\n      });\n    }\n  }\n\n  private updateDatum(datum: any) {\n    this._activeDatum = datum;\n    this._displayData.updateData();\n    const attrs = this._getIndicatorAttrs();\n    this._createOrUpdateIndicatorComponent(attrs);\n  }\n\n  // data\n  private initData() {\n    registerDataSetInstanceTransform(this._option.dataSet, 'indicatorFilter', indicatorMapper);\n    const displayData = new DataView(this._option.dataSet, { name: `${this.type}_${this.id}_data` });\n    displayData.transform({\n      type: 'indicatorFilter',\n      options: {\n        title: this._title,\n        content: this._content,\n        datum: () => this._activeDatum\n      }\n    });\n\n    displayData.target.addListener('change', this.updateDatum.bind(this));\n\n    this._displayData = new CompilableData(this._option, displayData);\n  }\n\n  updateLayoutAttribute(): void {\n    const attrs = this._getIndicatorAttrs();\n    this._createOrUpdateIndicatorComponent(attrs);\n\n    super.updateLayoutAttribute();\n  }\n\n  private _getIndicatorAttrs() {\n    const region = this._regions[0];\n    const { width, height } = region.getLayoutRect();\n    const { x, y } = region.getLayoutStartPoint();\n\n    const contentComponentSpec: IIndicatorItemSpec[] = [];\n    array(this._spec.content).forEach((eachItem: IIndicatorItemSpec) => {\n      const contentSpec = mergeSpec({}, this._theme.content, eachItem);\n      contentComponentSpec.push({\n        visible: contentSpec.visible !== false && (contentSpec.field ? this._activeDatum !== null : true),\n        space: contentSpec.space || this._gap,\n        autoLimit: contentSpec.autoLimit,\n        autoFit: contentSpec.autoFit,\n        fitPercent: contentSpec.fitPercent,\n        style: {\n          ...transformToGraphic(contentSpec.style),\n          text: this._createText(contentSpec.field, contentSpec.style.text)\n        }\n      });\n    });\n\n    return {\n      visible: this._spec.visible !== false && (this._spec.fixed !== false || this._activeDatum !== null),\n      size: {\n        width: width,\n        height: height\n      },\n      zIndex: this.layoutZIndex,\n      x: x,\n      y: y,\n      dx: this._spec.offsetX ? getActualNumValue(this._spec.offsetX, this._computeLayoutRadius()) : 0,\n      dy: this._spec.offsetY ? getActualNumValue(this._spec.offsetY, this._computeLayoutRadius()) : 0,\n      limitRatio: this._spec.limitRatio || Infinity,\n      title: {\n        visible: this._spec.title.visible !== false && (!isValid(this._spec.title.field) || this._activeDatum !== null),\n        space: this._spec.title.space || this._gap,\n        autoLimit: this._spec.title.autoLimit,\n        autoFit: this._spec.title.autoFit,\n        fitPercent: this._spec.title.fitPercent,\n        style: {\n          ...transformToGraphic(this._spec.title.style),\n          text: this._createText(this._spec.title.field, this._spec.title.style.text)\n        }\n      },\n      content: contentComponentSpec\n    } as IndicatorAttributes;\n  }\n\n  private _createOrUpdateIndicatorComponent(attrs: IndicatorAttributes): IndicatorComponents {\n    if (this._indicatorComponent) {\n      if (!isEqual(attrs, this._cacheAttrs)) {\n        this._indicatorComponent.setAttributes(attrs);\n      }\n    } else {\n      const container = this.getContainer();\n      //FIXME:类型“IndicatorAttributes”的参数不能赋给类型“Required<IndicatorAttributes>”的参数\n      const indicator = new IndicatorComponents(attrs as any);\n      indicator.name = 'indicator';\n      container.add(indicator as unknown as INode);\n      this._indicatorComponent = indicator;\n      this._indicatorComponent.on('*', (event: any, type: string) =>\n        this._delegateEvent(this._indicatorComponent as unknown as IGraphic, event, type)\n      );\n    }\n    this._cacheAttrs = attrs;\n    return this._indicatorComponent;\n  }\n\n  private _createText(\n    field: string | undefined,\n    text:\n      | string\n      | number\n      | string[]\n      | number[]\n      | IRichTextCharacter[]\n      | FunctionType<number | number[] | string | string[] | IRichTextCharacter[]>\n  ) {\n    if (field) {\n      return this._activeDatum ? this._activeDatum[field] : '';\n    }\n    if (isFunction(text)) {\n      return text(this._activeDatum, undefined) ?? '';\n    }\n    return text ?? '';\n  }\n\n  private _computeLayoutRadius() {\n    const region = this._regions[0];\n    const { width, height } = region.getLayoutRect();\n    return Math.min(width / 2, height / 2);\n  }\n\n  private isRelativeModel(model: IModel) {\n    return eachSeries(this._regions, s => model === s) || this._regions.includes(model as IRegion);\n  }\n\n  protected _getNeedClearVRenderComponents(): IGraphic[] {\n    return [this._indicatorComponent] as unknown as IGroup[];\n  }\n\n  clear(): void {\n    this._cacheAttrs = null;\n    super.clear();\n  }\n}\n\nexport const registerIndicator = () => {\n  Factory.registerComponent(Indicator.type, Indicator);\n};\n"]}