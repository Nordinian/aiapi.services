{"version":3,"sources":["../src/component/tooltip/handler/dom/model/content-column-model.ts"],"names":[],"mappings":"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","file":"content-column-model.js","sourcesContent":["import { isNumber, isString, toNumber } from '@visactor/vutils';\nimport {\n  defaultKeyStyle,\n  defaultContentColumnStyle,\n  defaultValueStyle,\n  defaultAdaptiveKeyStyle,\n  defaultShapeStyle\n} from './style-constants';\nimport { BaseTooltipModel } from './base-tooltip-model';\nimport type { ITooltipModelOption } from './interface';\nimport type { IShapeSvgOption } from './shape-model';\n// eslint-disable-next-line no-duplicate-imports\nimport { ShapeModel } from './shape-model';\nimport { TextModel } from './text-model';\nimport { TOOLTIP_EMPTY_STRING } from '../../constants';\nimport { getPixelPropertyStr } from '../util';\nimport type { IToolTipLineActual } from '../../../../../typings';\nimport { mergeSpec } from '../../../../../util/spec/merge-spec';\n\nexport type ContentColumnType = 'shape-box' | 'key-box' | 'value-box';\n\n/** 默认的标签样式，覆盖外界对这些属性的预先配置 */\nconst defaultLabelStyle: Partial<CSSStyleDeclaration> = {\n  overflowWrap: 'normal',\n  wordWrap: 'normal'\n};\n\nexport class ContentColumnModel extends BaseTooltipModel {\n  readonly className: ContentColumnType;\n\n  constructor(\n    parent: BaseTooltipModel | HTMLElement,\n    option: ITooltipModelOption,\n    className: ContentColumnType,\n    childIndex?: number\n  ) {\n    super(parent, option, childIndex);\n    this.className = className;\n  }\n\n  init(): void {\n    if (!this.product) {\n      this.product = this.createElement('div', [this.className]);\n    }\n    const renderContent = this._option.getTooltipActual()?.content ?? [];\n\n    if (this.className === 'shape-box' && !renderContent.some(c => c.hasShape && c.shapeType)) {\n      // 当有一行配有形状的时候，其他行要对齐。如果没有一行配有形状，则删除所有的行\n      Object.keys(this.children).forEach(key => {\n        const i = toNumber(key);\n        this.children[i].release();\n        delete this.children[i];\n      });\n    } else {\n      // 删除多余的行\n      Object.keys(this.children).forEach(key => {\n        const i = toNumber(key);\n        if (i >= renderContent.length) {\n          this.children[i].release();\n          delete this.children[i];\n        }\n      });\n      // 新增没有的行\n      for (let i = 0; i < renderContent.length; i++) {\n        if (!this.children[i]) {\n          if (this.className === 'key-box' || this.className === 'value-box') {\n            const text = new TextModel(this.product!, this._option, i);\n            text.init([this.className.substring(0, this.className.indexOf('-'))], undefined, 'div');\n            this.children[i] = text;\n          } else if (this.className === 'shape-box') {\n            const shape = new ShapeModel(this.product!, this._option, i);\n            shape.init(['shape'], undefined, 'div');\n            this.children[i] = shape;\n          }\n        }\n      }\n    }\n  }\n\n  setStyle() {\n    const tooltipStyle = this._option.getTooltipStyle();\n\n    super.setStyle(mergeSpec({}, defaultContentColumnStyle, tooltipStyle.content, this._getContentColumnStyle()));\n\n    const renderContent = this._option.getTooltipActual()?.content ?? [];\n    const contentAttributes = this._option.getTooltipAttributes()?.content ?? [];\n    renderContent.forEach((line, i) => {\n      let childStyle: any = {};\n      if (this.className === 'key-box') {\n        const { key, isKeyAdaptive } = line;\n        childStyle = mergeSpec({}, isKeyAdaptive ? defaultAdaptiveKeyStyle : defaultKeyStyle, {\n          height: getPixelPropertyStr(contentAttributes[i].height),\n          ...defaultLabelStyle,\n          ...tooltipStyle.keyColumn.common,\n          ...tooltipStyle.keyColumn.items?.[i]\n        } as Partial<CSSStyleDeclaration>);\n        const hasContent = (isString(key) && key?.trim?.() !== '') || isNumber(key);\n        if (!hasContent && !childStyle.visibility) {\n          childStyle.visibility = 'hidden';\n        } else {\n          childStyle.visibility = 'visible';\n        }\n        (this.children[i] as TextModel).setStyle(childStyle);\n      } else if (this.className === 'value-box') {\n        childStyle = mergeSpec({}, defaultValueStyle, {\n          height: getPixelPropertyStr(contentAttributes[i].height),\n          ...defaultLabelStyle,\n          ...tooltipStyle.valueColumn.common,\n          ...tooltipStyle.valueColumn.items?.[i]\n        } as Partial<CSSStyleDeclaration>);\n        (this.children[i] as TextModel).setStyle(childStyle);\n      } else if (this.className === 'shape-box') {\n        childStyle = mergeSpec({}, defaultShapeStyle, {\n          height: getPixelPropertyStr(contentAttributes[i].height + contentAttributes[i].spaceRow),\n          ...tooltipStyle.shapeColumn.common,\n          ...tooltipStyle.shapeColumn.items?.[i]\n        });\n        (this.children[i] as ShapeModel)?.setStyle(childStyle, this._getShapeSvgOption(line, i));\n      }\n    });\n  }\n\n  setContent(): void {\n    const renderContent = this._option.getTooltipActual()?.content ?? [];\n    const contentAttributes = this._option.getTooltipAttributes()?.content ?? [];\n    renderContent.forEach((line, i) => {\n      let childContent: any;\n      if (this.className === 'key-box') {\n        const keyContent = line.key;\n        if ((isString(keyContent) && keyContent?.trim?.() !== '') || isNumber(keyContent)) {\n          childContent = keyContent;\n        } else {\n          childContent = TOOLTIP_EMPTY_STRING;\n        }\n        (this.children[i] as TextModel)?.setContent(childContent, contentAttributes[i].key?.multiLine);\n      } else if (this.className === 'value-box') {\n        const valueContent = line.value;\n        if ((isString(valueContent) && valueContent?.trim?.() !== '') || isNumber(valueContent)) {\n          childContent = valueContent;\n        } else {\n          childContent = TOOLTIP_EMPTY_STRING;\n        }\n        (this.children[i] as TextModel)?.setContent(childContent, contentAttributes[i].value?.multiLine);\n      } else if (this.className === 'shape-box') {\n        childContent = this._getShapeSvgOption(line, i);\n        this.children[i]?.setContent(childContent);\n      }\n    });\n  }\n\n  protected _getContentColumnStyle() {\n    const tooltipStyle = this._option.getTooltipStyle();\n\n    switch (this.className) {\n      case 'shape-box':\n        const renderContent = this._option.getTooltipActual()?.content ?? [];\n        return {\n          ...tooltipStyle.shapeColumn,\n          ...(this.className === 'shape-box' && !renderContent.some(c => c.hasShape && c.shapeType)\n            ? { display: 'none' }\n            : {})\n        };\n      case 'key-box':\n        return tooltipStyle.keyColumn;\n      case 'value-box':\n        return tooltipStyle.valueColumn;\n    }\n  }\n\n  protected _getShapeSvgOption(line: IToolTipLineActual, index: number): IShapeSvgOption {\n    const tooltipStyle = this._option.getTooltipStyle();\n    const shapeColumn = {\n      ...tooltipStyle.shapeColumn,\n      ...tooltipStyle.shapeColumn.items?.[index]\n    };\n    const keyColumn = {\n      ...tooltipStyle.keyColumn,\n      ...tooltipStyle.keyColumn.items?.[index]\n    };\n    return {\n      hasShape: line.hasShape,\n      symbolType: line.shapeType,\n      size: shapeColumn.width,\n      fill: line.shapeFill ?? line.shapeColor,\n      stroke: line.shapeStroke,\n      lineWidth: line.shapeLineWidth,\n      hollow: line.shapeHollow,\n      marginTop: `calc((${keyColumn.lineHeight ?? keyColumn.fontSize ?? '18px'} - ${shapeColumn.width ?? '8px'}) / 2)`,\n      index\n    } as IShapeSvgOption;\n  }\n}\n"]}