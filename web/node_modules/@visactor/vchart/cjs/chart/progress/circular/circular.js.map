{"version":3,"sources":["../src/chart/progress/circular/circular.ts"],"names":[],"mappings":";;;AAAA,yDAAgE;AAEhE,gEAAmF;AACnF,mDAAgD;AAEhD,mFAAuF;AAEvF,qCAAuC;AAEvC,MAAa,qBAAyF,SAAQ,gBAE7G;IAFD;;QAOW,2BAAsB,GAAG,oEAAoC,CAAC;QAC9D,SAAI,sBAA0C;QAC9C,eAAU,GAAW,qBAAc,CAAC,gBAAgB,CAAC;QACpD,cAAS,GAAY,IAAI,CAAC;IACtC,CAAC;;AAXD,sDAWC;AARiB,0BAAI,sBAA0C;AAC9C,gCAAU,GAAW,qBAAc,CAAC,gBAAgB,CAAC;AACrD,0BAAI,GAAW,eAAe,CAAC;AAC/B,4CAAsB,GAAG,oEAAoC,CAAC;AAOzE,MAAM,6BAA6B,GAAG,GAAG,EAAE;IAChD,IAAA,yCAA8B,GAAE,CAAC;IACjC,iBAAO,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;AAC3E,CAAC,CAAC;AAHW,QAAA,6BAA6B,iCAGxC","file":"circular.js","sourcesContent":["import { SeriesTypeEnum } from '../../../series/interface/type';\nimport { ChartTypeEnum } from '../../interface';\nimport { registerCircularProgressSeries } from '../../../series/progress/circular';\nimport { Factory } from '../../../core/factory';\nimport type { ICircularProgressChartSpec } from './interface';\nimport { CircularProgressChartSpecTransformer } from './circular-progress-transformer';\nimport type { AdaptiveSpec } from '../../../typings';\nimport { BaseChart } from '../../base';\n\nexport class CircularProgressChart<T extends ICircularProgressChartSpec = ICircularProgressChartSpec> extends BaseChart<\n  AdaptiveSpec<T, 'axes'>\n> {\n  static readonly type: string = ChartTypeEnum.circularProgress;\n  static readonly seriesType: string = SeriesTypeEnum.circularProgress;\n  static readonly view: string = 'singleDefault';\n  static readonly transformerConstructor = CircularProgressChartSpecTransformer;\n  readonly transformerConstructor = CircularProgressChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.circularProgress;\n  readonly seriesType: string = SeriesTypeEnum.circularProgress;\n  protected _canStack: boolean = true;\n}\n\nexport const registerCircularProgressChart = () => {\n  registerCircularProgressSeries();\n  Factory.registerChart(CircularProgressChart.type, CircularProgressChart);\n};\n"]}