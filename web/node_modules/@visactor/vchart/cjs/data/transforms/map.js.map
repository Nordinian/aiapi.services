{"version":3,"sources":["../src/data/transforms/map.ts"],"names":[],"mappings":";;;AAAA,6CAA4D;AAQ/C,QAAA,uBAAuB,GAAG,GAAG,iBAAM,kBAAkB,CAAC;AAE5D,MAAM,GAAG,GAAG,CAAC,IAAmB,EAAE,GAAY,EAAE,EAAE;IACvD,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,KAAa,EAAE,EAAE;;YAC9C,CAAC,CAAC,6BAAkB,CAAC,GAAG,KAAK,CAAC;YAC9B,IAAI,GAAG,CAAC,OAAO,EAAE;gBACf,CAAC,CAAC,+BAAuB,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAA,CAAC,CAAC,UAAU,0CAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAC5E;iBAAM;gBACL,CAAC,CAAC,+BAAuB,CAAC,GAAG,MAAA,CAAC,CAAC,UAAU,0CAAG,GAAG,CAAC,YAAY,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,IAAI,CAAC,QAAQ,CAAC;AACvB,CAAC,CAAC;AAZW,QAAA,GAAG,OAYd","file":"map.js","sourcesContent":["import { DEFAULT_DATA_INDEX, PREFIX } from '../../constant';\nimport type { GeoSourceType } from '../../typings/geo';\n\nexport interface IMapOpt {\n  nameMap: Record<string, string>;\n  nameProperty: string;\n}\n\nexport const DEFAULT_MAP_LOOK_UP_KEY = `${PREFIX}_MAP_LOOK_UP_KEY`;\n\nexport const map = (data: GeoSourceType, opt: IMapOpt) => {\n  if (data.features) {\n    data.features.forEach((f: any, index: number) => {\n      f[DEFAULT_DATA_INDEX] = index;\n      if (opt.nameMap) {\n        f[DEFAULT_MAP_LOOK_UP_KEY] = opt.nameMap[f.properties?.[opt.nameProperty]];\n      } else {\n        f[DEFAULT_MAP_LOOK_UP_KEY] = f.properties?.[opt.nameProperty];\n      }\n    });\n  }\n  return data.features;\n};\n"]}