{"version":3,"sources":["../src/series/word-cloud/base.ts"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["/* eslint-disable no-duplicate-imports */\nimport type { IPadding } from '@visactor/vutils';\nimport { isValidNumber } from '@visactor/vutils';\nimport { isValid } from '@visactor/vutils';\nimport { AttributeLevel, DEFAULT_DATA_KEY, DEFAULT_DATA_SERIES_FIELD } from '../../constant';\nimport type { ITextMark } from '../../mark/text';\nimport type { SeriesMarkMap } from '../interface';\nimport { SeriesMarkNameEnum } from '../interface/type';\nimport { isTrueBrowser } from '../../util/env';\nimport {\n  DEFAULT_DRAW_OUT_OF_BOUND,\n  DEFAULT_FONTSIZE_RANGE,\n  DEFAULT_FONT_PADDING,\n  DEFAULT_FONT_WEIGHT_RANGE,\n  DEFAULT_MASK_SHAPE,\n  DEFAULT_MIN_FONT_SIZE,\n  DEFAULT_RANDOM,\n  DEFAULT_ROTATE_ANGLES,\n  DEFAULT_ZOOM_TO_FIT,\n  SHAPE_TYPE\n} from './config';\nimport type {\n  IWordCloudSeriesSpec,\n  WordCloudConfigType,\n  WordCloudShapeConfigType,\n  WordCloudShapeType\n} from './interface';\nimport type { Datum, IPoint } from '../../typings';\nimport { animationConfig, userAnimationConfig } from '../../animation/utils';\nimport { LinearScale } from '@visactor/vscale';\nimport { extent } from '@visactor/vgrammar-util';\nimport {\n  WORD_CLOUD_ANGLE,\n  WORD_CLOUD_FILLING_ANGLE,\n  WORD_CLOUD_TEXT,\n  WORD_CLOUD_WEIGHT\n} from '../../constant/word-cloud';\nimport type { ICompilableMark } from '../../compile/mark';\nimport { BaseSeries } from '../base/base-series';\nimport { ColorOrdinalScale } from '../../scale/color-ordinal-scale';\nimport { wordCloudSeriesMark } from './constant';\nimport type { IStateAnimateSpec } from '../../animation/spec';\nimport { Factory } from '../../core/factory';\nimport type { IMark } from '../../mark/interface';\n\nexport type IBaseWordCloudSeriesSpec = Omit<IWordCloudSeriesSpec, 'type'> & { type: string };\n\nexport class BaseWordCloudSeries<T extends IBaseWordCloudSeriesSpec = IBaseWordCloudSeriesSpec> extends BaseSeries<T> {\n  static readonly mark: SeriesMarkMap = wordCloudSeriesMark;\n\n  protected _nameField: string;\n  protected _valueField?: string;\n  setValueField(field: string) {\n    if (isValid(field)) {\n      this._valueField = field;\n    }\n  }\n\n  protected _fontFamilyField: string;\n  protected _fontWeightField: string;\n  protected _fontStyleField: string;\n  protected _colorHexField: string;\n  protected _colorMode: 'linear' | 'ordinal';\n  protected _colorList: string[];\n  protected _rotateAngles?: number[];\n  protected _fontWeightRange?: [number, number];\n  protected _textField?: string;\n\n  protected _fontSizeRange?: [number, number] | 'auto' = [DEFAULT_MIN_FONT_SIZE, DEFAULT_MIN_FONT_SIZE];\n  setFontSizeRange(fontSizeRange: [number, number] | 'auto') {\n    if (isValid(fontSizeRange)) {\n      this._fontSizeRange = fontSizeRange;\n    } else {\n      this._fontSizeRange = DEFAULT_FONTSIZE_RANGE;\n    }\n  }\n\n  protected _maskShape?: string | WordCloudShapeType;\n  protected _isWordCloudShape: boolean = false;\n\n  protected _keepAspect?: boolean;\n  protected _random?: boolean;\n  protected _fontPadding?: number;\n  protected _fillingFontPadding?: number;\n  protected _wordCloudConfig?: WordCloudConfigType;\n  protected _wordCloudShapeConfig?: WordCloudShapeConfigType;\n\n  protected _padding?: IPadding;\n  protected _defaultFontFamily: string;\n\n  /**\n   * @override\n   */\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n    // series布局相关\n    this._padding = this._option.getChart().padding;\n\n    // 普通词云 & 形状词云 共有spec相关\n    this._nameField = this._spec.nameField;\n    this._fontFamilyField = this._spec.fontFamilyField;\n    this._fontWeightField = this._spec.fontWeightField;\n    this._fontStyleField = this._spec.fontStyleField;\n    this._colorHexField = this._spec.colorHexField;\n    this._colorMode = this._spec.colorMode ?? 'ordinal';\n    this._colorList = this._spec.colorList;\n    this.setValueField(this._spec.valueField);\n    this._fontWeightRange = this._spec.fontWeightRange ?? DEFAULT_FONT_WEIGHT_RANGE;\n    this._rotateAngles = this._spec.rotateAngles ?? DEFAULT_ROTATE_ANGLES;\n    this.setFontSizeRange(this._spec.fontSizeRange);\n    this._maskShape = this._spec.maskShape ?? DEFAULT_MASK_SHAPE;\n    this._keepAspect = this._spec.keepAspect;\n    this._random = this._spec.random ?? DEFAULT_RANDOM;\n    this._fontPadding = this._spec.word?.padding ?? DEFAULT_FONT_PADDING;\n    this._textField = this._spec.word?.formatMethod ? WORD_CLOUD_TEXT : this._nameField;\n    // 普通词云spec相关\n    this._wordCloudConfig = {\n      drawOutOfBound: DEFAULT_DRAW_OUT_OF_BOUND,\n      layoutMode: 'default',\n      zoomToFit: DEFAULT_ZOOM_TO_FIT,\n      ...this._spec.wordCloudConfig\n    };\n\n    // 形状词云spec相关\n    this._wordCloudShapeConfig = {\n      fillingSeriesField: this.getSeriesField(),\n      fillingRotateAngles: DEFAULT_ROTATE_ANGLES,\n      layoutMode: 'default',\n      ...this._spec.wordCloudShapeConfig\n    };\n    this._fillingFontPadding = this._spec.fillingWord?.padding ?? DEFAULT_FONT_PADDING;\n\n    this._isWordCloudShape = !SHAPE_TYPE.includes(this._maskShape);\n    this._defaultFontFamily = this._option.getTheme().fontFamily;\n  }\n\n  protected _wordMark: ITextMark;\n  protected _fillingWordMark: ITextMark;\n  initMark(): void {\n    this._wordMark = this._createMark(BaseWordCloudSeries.mark.word, {\n      defaultMorphElementKey: this._seriesField,\n      groupKey: this._seriesField,\n      isSeriesMark: true\n    }) as ITextMark;\n    if (this._isWordCloudShape) {\n      this._fillingWordMark = this._createMark(BaseWordCloudSeries.mark.fillingWord) as ITextMark;\n    }\n  }\n\n  initMarkStyle() {\n    const wordMark = this._wordMark;\n    const fillingWordMark = this._fillingWordMark;\n    const wordSpec = this._spec.word ?? {};\n    if (wordMark) {\n      this.setMarkStyle(\n        wordMark,\n        {\n          fill: this._colorHexField\n            ? (datum: Datum) => datum[this._colorHexField]\n            : this.getWordColorAttribute(this._seriesField, false),\n          text: (datum: Datum) => datum[this._textField],\n          x: (datum: Datum) => datum.x,\n          y: (datum: Datum) => datum.y,\n          fontFamily: (datum: Datum) => datum.fontFamily,\n          fontSize: (datum: Datum) => datum.fontSize,\n          fontStyle: (datum: Datum) => datum.fontStyle,\n          fontWeight: (datum: Datum) => datum.fontWeight,\n          angle: (datum: Datum) => datum.angle,\n          visible: (datum: Datum) => !datum.isFillingWord && datum.visible\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n      this.setMarkStyle(\n        wordMark,\n        {\n          fontFamily: wordSpec.style?.fontFamily ?? this._defaultFontFamily\n        },\n        'normal',\n        AttributeLevel.User_Mark\n      );\n    }\n    if (fillingWordMark) {\n      this.setMarkStyle(\n        fillingWordMark,\n        {\n          fill: this._wordCloudShapeConfig.fillingColorHexField\n            ? (datum: Datum) => datum[this._wordCloudShapeConfig.fillingColorHexField]\n            : this.getWordColorAttribute(this._wordCloudShapeConfig.fillingSeriesField, true),\n          text: (datum: Datum) => datum[this._textField],\n          x: (datum: Datum) => datum.x,\n          y: (datum: Datum) => datum.y,\n          fontFamily: (datum: Datum) => datum.fontFamily,\n          fontSize: (datum: Datum) => datum.fontSize,\n          fontStyle: (datum: Datum) => datum.fontStyle,\n          fontWeight: (datum: Datum) => datum.fontWeight,\n          angle: (datum: Datum) => datum.angle,\n          visible: (datum: Datum) => datum.isFillingWord && datum.visible\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n\n      this.setMarkStyle(\n        fillingWordMark,\n        {\n          fontFamily: wordSpec.style?.fontFamily ?? this._defaultFontFamily\n        },\n        'normal',\n        AttributeLevel.User_Mark\n      );\n    }\n    this._trigger.registerMark(wordMark);\n    this._trigger.registerMark(fillingWordMark);\n  }\n\n  protected initTooltip() {\n    super.initTooltip();\n\n    this._wordMark && this._tooltipHelper.activeTriggerSet.mark.add(this._wordMark);\n    this._fillingWordMark && this._tooltipHelper.activeTriggerSet.mark.add(this._fillingWordMark);\n  }\n\n  initAnimation() {\n    [this._wordMark, this._fillingWordMark].forEach(mark => {\n      if (mark) {\n        const appearPreset = (this._spec?.animationAppear as IStateAnimateSpec<any>)?.preset;\n        const params = {\n          animationConfig: () => mark.getAnimationConfig()?.appear?.[0]\n        };\n        mark.setAnimationConfig(\n          animationConfig(\n            Factory.getAnimationInKey('wordCloud')(params, appearPreset),\n            userAnimationConfig(SeriesMarkNameEnum.word, this._spec, this._markAttributeContext)\n          )\n        );\n      }\n    });\n  }\n\n  protected getWordOrdinalColorScale(field: string, isFillingWord: boolean) {\n    const colorList = isFillingWord ? this._wordCloudShapeConfig.fillingColorList : this._colorList;\n    const colorDomain = field ? this.getViewData()?.latestData.map((datum: Datum) => datum[field]) : [];\n    const colorRange = colorList ?? this._option.globalScale.getScale('color')?.range() ?? this._getDataScheme();\n    return new ColorOrdinalScale().domain(colorDomain).range?.(colorRange);\n  }\n\n  getWordColorAttribute(field: string, isFillingWord: boolean) {\n    if (this._colorMode === 'ordinal') {\n      return {\n        scale: this.getWordOrdinalColorScale(field, isFillingWord),\n        field: this._seriesField ?? DEFAULT_DATA_SERIES_FIELD\n      };\n    }\n    // const valueScale = new LinearScale()\n    //   .domain(extent(this.getViewData()?.latestData.map((datum: Datum) => datum[field])), true)\n    //   .range([0, 1]);\n    let colorList =\n      (isFillingWord ? this._colorList : this._wordCloudShapeConfig.fillingColorList) ??\n      this._option.globalScale.getScale('color').range();\n    // 如果用户只输入了一个 color，无法构成 colorRange，则进行兜底\n    if (colorList.length === 1) {\n      colorList = [colorList[0], colorList[0]];\n    }\n    // 颜色插值 todo@chensiji\n    // const interpolate = interpolateColors(colorList)\n    // return (datum: Datum) => interpolate(valueScale.scale(datum[field]))\n    return (datum: Datum) => colorList[0];\n  }\n\n  compile(): void {\n    super.compile();\n    const { width, height } = this._region.getLayoutRect();\n    // 非正常尺寸下不进行布局\n    if (!isValidNumber(width) || !isValidNumber(height) || !(height > 0 && width > 0)) {\n      return;\n    }\n\n    const wordCloudTransforms: any[] = [];\n    const valueField = this._valueField;\n    const valueScale = new LinearScale();\n    const fontWeightRange = this._fontWeightRange;\n    const rotateAngles = this._rotateAngles;\n    const fillingRotateAngles = this._wordCloudShapeConfig.fillingRotateAngles;\n\n    // fontWeight处理\n    if (valueField) {\n      const [minValue, maxValue] = extent(this.getViewData()?.latestData.map((datum: any) => +datum[valueField]));\n      valueScale.domain([minValue, maxValue], true).range(fontWeightRange);\n      wordCloudTransforms.push({\n        type: 'map',\n        as: WORD_CLOUD_WEIGHT,\n        callback: (datum: any) => {\n          if (minValue === maxValue) {\n            return valueScale.scale(maxValue);\n          }\n          return valueScale.scale(datum[valueField]);\n        }\n      });\n    }\n\n    // rotateAngles处理\n    wordCloudTransforms.push({\n      type: 'map',\n      as: WORD_CLOUD_ANGLE,\n      callback: () => {\n        return rotateAngles[Math.floor(Math.random() * rotateAngles.length)];\n      }\n    });\n    wordCloudTransforms.push({\n      type: 'map',\n      as: WORD_CLOUD_FILLING_ANGLE,\n      callback: () => {\n        return fillingRotateAngles[Math.floor(Math.random() * fillingRotateAngles.length)];\n      }\n    });\n    const wordSpec = this._spec.word ?? {};\n\n    // text fromat method 处理\n    if (wordSpec.formatMethod) {\n      wordCloudTransforms.push({\n        type: 'map',\n        as: WORD_CLOUD_TEXT,\n        callback: wordSpec.formatMethod\n      });\n    }\n\n    // 词云 transform\n    if (!this._isWordCloudShape) {\n      wordCloudTransforms.push({\n        type: 'wordcloud',\n        ...this._wordCloudTransformOption()\n      });\n      // 挂到mark的transform上\n      (this._wordMark as ICompilableMark).getProduct().transform(wordCloudTransforms);\n    }\n    // 形状词云 transform\n    else {\n      wordCloudTransforms.push({\n        type: 'wordcloudShape',\n        // 形状词云中必须要传入dataIndexKey, 否则填充词无法绘制\n        ...this._wordCloudShapeTransformOption()\n      });\n    }\n    // 把transform挂载到data的product上\n    this._data.getProduct().transform(wordCloudTransforms);\n  }\n\n  protected _wordCloudTransformOption(): Object {\n    const { width, height } = this._region.getLayoutRect();\n    const wordStyleSpec = this._spec.word?.style ?? {};\n\n    return {\n      // TIP: 非浏览器环境下，使用 fast 布局，否则会出现兼容问题\n      layoutType: !isTrueBrowser(this._option.mode) ? 'fast' : this._wordCloudConfig.layoutMode,\n      size: [width, height],\n      shape: this._maskShape,\n      dataIndexKey: DEFAULT_DATA_KEY,\n      text: { field: this._textField },\n      fontSize: this._valueField ? { field: this._valueField } : this._fontSizeRange[0],\n      fontSizeRange: this._fontSizeRange === 'auto' ? null : this._fontSizeRange,\n      padding: this._fontPadding,\n      rotate: { field: WORD_CLOUD_ANGLE },\n      fontFamily: this._fontFamilyField ?? wordStyleSpec.fontFamily ?? this._defaultFontFamily,\n      fontWeight: this._fontWeightField\n        ? { field: this._fontWeightField }\n        : this._valueField\n        ? { field: WORD_CLOUD_WEIGHT }\n        : null,\n      fontStyle: this._fontStyleField ?? wordStyleSpec.fontStyle,\n\n      randomVisible: this._random,\n      clip: this._wordCloudConfig.drawOutOfBound === 'clip',\n      shrink: this._wordCloudConfig.zoomToFit.shrink,\n      enlarge: this._wordCloudConfig.zoomToFit.enlarge,\n      minFontSize: this._wordCloudConfig.zoomToFit.fontSizeLimitMin,\n      progressiveTime: this._wordCloudConfig.progressiveTime,\n      progressiveStep: this._wordCloudConfig.progressiveStep\n    };\n  }\n\n  protected _wordCloudShapeTransformOption(): Object {\n    const { width, height } = this._region.getLayoutRect();\n    const wordStyleSpec = this._spec.word?.style ?? {};\n    const wordCloudShapeConfig = this._wordCloudShapeConfig ?? {};\n    const fillingRotateAngles = this._wordCloudShapeConfig.fillingRotateAngles;\n\n    return {\n      dataIndexKey: DEFAULT_DATA_KEY,\n\n      size: [width, height],\n      shape: this._maskShape,\n\n      text: { field: this._textField },\n      fontSize: this._valueField ? { field: this._valueField } : this._fontSizeRange[0],\n      fontSizeRange: this._fontSizeRange === 'auto' ? null : this._fontSizeRange, // 如果配置为'auto', 则形状词云fontSizeRange不设默认值(对齐3.x效果)\n      padding: this._fontPadding,\n      rotateList: this._rotateAngles,\n      fontFamily: this._fontFamilyField ?? wordStyleSpec.fontFamily ?? this._defaultFontFamily,\n      fontWeight: this._fontWeightField\n        ? { field: this._fontWeightField }\n        : this._valueField\n        ? { field: WORD_CLOUD_WEIGHT }\n        : null,\n      fontStyle: this._fontStyleField ?? wordStyleSpec.fontStyle,\n\n      fillingFontFamily:\n        wordCloudShapeConfig.fillingFontFamilyField ?? wordStyleSpec.fontFamily ?? this._defaultFontFamily,\n      fillingPadding: this._fillingFontPadding,\n      fillingFontStyle: wordCloudShapeConfig.fillingFontStyleField ?? wordStyleSpec.fontStyle,\n      fillingFontWeight: wordCloudShapeConfig.fillingFontWeightField ?? wordStyleSpec.fontWeight, // 填充词fontWeight默认不跟随valueField\n      fillingRotateList: fillingRotateAngles,\n\n      fillingTimes: wordCloudShapeConfig.fillingTimes,\n      fillingXStep: wordCloudShapeConfig.fillingXStep,\n      fillingYStep: wordCloudShapeConfig.fillingYStep,\n      fillingXRatioStep: wordCloudShapeConfig.fillingXRatioStep,\n      fillingYRatioStep: wordCloudShapeConfig.fillingYRatioStep,\n      fillingInitialOpacity: wordCloudShapeConfig.fillingInitialOpacity,\n      fillingDeltaOpacity: wordCloudShapeConfig.fillingDeltaOpacity,\n      fillingInitialFontSize: wordCloudShapeConfig.fillingInitialFontSize,\n      fillingDeltaFontSize: wordCloudShapeConfig.fillingDeltaFontSize,\n\n      ratio: wordCloudShapeConfig.ratio,\n      fillingRatio: wordCloudShapeConfig.fillingRatio,\n      removeWhiteBorder: wordCloudShapeConfig.removeWhiteBorder,\n      textLayoutTimes: wordCloudShapeConfig.textLayoutTimes,\n      fontSizeShrinkFactor: wordCloudShapeConfig.fontSizeShrinkFactor,\n      stepFactor: wordCloudShapeConfig.stepFactor,\n      layoutMode: wordCloudShapeConfig.layoutMode,\n      importantWordCount: wordCloudShapeConfig.importantWordCount,\n      globalShinkLimit: wordCloudShapeConfig.globalShinkLimit,\n      fontSizeEnlargeFactor: wordCloudShapeConfig.fontSizeEnlargeFactor,\n      fillingDeltaFontSizeFactor: wordCloudShapeConfig.fillingDeltaFontSizeFactor\n    };\n  }\n\n  getStatisticFields() {\n    const fields: { key: string; operations: Array<'max' | 'min' | 'values'> }[] = [];\n    fields.push({ key: this._nameField, operations: ['values'] });\n    fields.push({ key: this._valueField, operations: ['max', 'min'] });\n    return fields;\n  }\n  dataToPosition(data: Datum): IPoint {\n    return null;\n  }\n  dataToPositionX(data: any): number {\n    return null;\n  }\n  dataToPositionY(data: any): number {\n    return null;\n  }\n  dataToPositionZ(data: any): number {\n    return null;\n  }\n  valueToPosition(value1: any, value2?: any): IPoint {\n    return null;\n  }\n\n  getGroupFields(): string[] {\n    // do nothing\n    return [];\n  }\n\n  getStackGroupFields(): string[] {\n    // do nothing\n    return [];\n  }\n\n  getStackValueField(): string {\n    // do nothing\n    return '';\n  }\n\n  onLayoutEnd(ctx: any): void {\n    super.onLayoutEnd(ctx);\n    this.compile();\n  }\n\n  getActiveMarks(): IMark[] {\n    return [this._wordMark, this._fillingWordMark];\n  }\n}\n"]}