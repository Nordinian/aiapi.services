{"version":3,"sources":["../src/series/range-area/tooltip-helper.ts"],"names":[],"mappings":";;;AACA,2DAAiE;AAMjE,MAAa,4BAA6B,SAAQ,wCAAuB;IAEvE,wBAAwB,CAAC,UAA6B,EAAE,aAAgC;QACtF,IAAI,UAAU,KAAK,MAAM,EAAE;YACzB,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,UAAU;gBACV,KAAK,EAAE;oBACL,GAAG,EAAE,SAAS;oBACd,KAAK,EAAE,IAAI,CAAC,kBAAkB;oBAC9B,QAAQ,EAAE,KAAK;iBAChB;gBACD,OAAO,EAAE;oBACP;wBACE,GAAG,EAAE,IAAI,CAAC,kBAAkB;wBAC5B,KAAK,EAAE,IAAI,CAAC,oBAAoB;wBAChC,QAAQ,EAAE,IAAI;wBACd,SAAS,EAAE,IAAI,CAAC,wBAAwB;wBACxC,UAAU,EAAE,IAAI,CAAC,yBAAyB;wBAC1C,WAAW,EAAE,IAAI,CAAC,yBAAyB;wBAC3C,WAAW,EAAE,KAAK;qBACnB;iBACF;aACF,CAAC;SACH;aAAM,IAAI,UAAU,KAAK,WAAW,IAAI,aAAa,EAAE;YACtD,MAAM,KAAK,GAAwB;gBACjC,GAAG,EAAE,SAAS;gBACd,KAAK,EAAE,IAAI,CAAC,iBAAiB;gBAC7B,QAAQ,EAAE,KAAK;aAChB,CAAC;YACF,MAAM,OAAO,GAA0B,EAAE,CAAC;YAC1C,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CACjC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,EAAO,EAAE,EAAE;gBAC/B,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;oBAC/B,OAAO,CAAC,IAAI,CAAC;wBACX,QAAQ,EAAE,MAAM,CAAC,EAAE;wBACnB,GAAG,EAAE,IAAI,CAAC,kBAAkB;wBAC5B,KAAK,EAAE,CAAC,KAAY,EAAE,EAAE;4BACtB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,SAAS,iBAAyB;gCAC7D,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gCACvF,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5F,CAAC;wBACD,QAAQ,EAAE,IAAI;wBACd,SAAS,EAAE,IAAI,CAAC,wBAAwB;wBACxC,UAAU,EAAE,IAAI,CAAC,yBAAyB;wBAC1C,WAAW,EAAE,IAAI,CAAC,yBAAyB;wBAC3C,WAAW,EAAE,KAAK;qBACnB,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CACH,CAAC;YACF,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,UAAU;gBACV,KAAK;gBACL,OAAO;aACR,CAAC;SACH;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA5DD,oEA4DC","file":"tooltip-helper.js","sourcesContent":["import type { ISeriesTooltipHelper } from '../interface';\nimport { BaseSeriesTooltipHelper } from '../base/tooltip-helper';\nimport type { Datum, ITooltipPattern, TooltipActiveType, IToolTipLinePattern } from '../../typings';\n// eslint-disable-next-line no-duplicate-imports\nimport { Direction } from '../../typings/space';\nimport type { IDimensionInfo } from '../../event/events/dimension/interface';\n\nexport class RangeAreaSeriesTooltipHelper extends BaseSeriesTooltipHelper implements ISeriesTooltipHelper {\n  /** 获取默认的tooltip pattern */\n  getDefaultTooltipPattern(activeType: TooltipActiveType, dimensionInfo?: IDimensionInfo[]): ITooltipPattern | null {\n    if (activeType === 'mark') {\n      return {\n        visible: true,\n        activeType,\n        title: {\n          key: undefined,\n          value: this.titleValueCallback,\n          hasShape: false\n        },\n        content: [\n          {\n            key: this.contentKeyCallback,\n            value: this.contentValueCallback,\n            hasShape: true,\n            shapeType: this.contentShapeTypeCallback,\n            shapeColor: this.contentShapeColorCallback,\n            shapeStroke: this.contentShapeColorCallback,\n            shapeHollow: false\n          }\n        ]\n      };\n    } else if (activeType === 'dimension' && dimensionInfo) {\n      const title: IToolTipLinePattern = {\n        key: undefined,\n        value: this._getDimensionData,\n        hasShape: false\n      };\n      const content: IToolTipLinePattern[] = [];\n      dimensionInfo.forEach(({ data }) =>\n        data.forEach(({ series }: any) => {\n          if (series.type === 'rangeArea') {\n            content.push({\n              seriesId: series.id,\n              key: this.contentKeyCallback,\n              value: (datum: Datum) => {\n                return this.series.getSpec().direction === Direction.horizontal\n                  ? datum[this.series.getSpec().xField[0]] + '-' + datum[this.series.getSpec().xField[1]]\n                  : datum[this.series.getSpec().yField[0]] + '-' + datum[this.series.getSpec().yField[1]];\n              },\n              hasShape: true,\n              shapeType: this.contentShapeTypeCallback,\n              shapeColor: this.contentShapeColorCallback,\n              shapeStroke: this.contentShapeColorCallback,\n              shapeHollow: false\n            });\n          }\n        })\n      );\n      return {\n        visible: true,\n        activeType,\n        title,\n        content\n      };\n    }\n    return null;\n  }\n}\n"]}