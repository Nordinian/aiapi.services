import { LegendBase } from '../base';
import type { DiscreteLegendAttrs } from './type';
import type { ComponentOptions } from '../../interface';
export declare class DiscreteLegend extends LegendBase<DiscreteLegendAttrs> {
    name: string;
    private _itemsContainer;
    private _itemWidthByUser;
    private _itemHeightByUser;
    private _itemHeight;
    private _itemMaxWidth;
    private _pager;
    private _lastActiveItem;
    static defaultAttributes: Partial<DiscreteLegendAttrs>;
    constructor(attributes: DiscreteLegendAttrs, options?: ComponentOptions);
    setSelected(selectedData: (string | number)[]): void;
    protected _renderContent(): void;
    protected _bindEvents(): void;
    private _renderEachItem;
    private _renderPager;
    private _onHover;
    private _onUnHover;
    private _onClick;
    private _hover;
    private _unHover;
    private _setLegendItemState;
    private _removeLegendItemState;
    private _getSelectedLegends;
    private _appendDataToShape;
    private _dispatchLegendEvent;
    private _handleStyle;
}
