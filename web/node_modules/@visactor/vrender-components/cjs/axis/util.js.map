{"version":3,"sources":["../src/axis/util.ts"],"names":[],"mappings":";;;AAAA,yDAAuD;AAGvD,6CAAsE;AAG/D,MAAM,WAAW,GAAG,CAAC,QAAgB,CAAC,EAAE,EAAE;IAC/C,IAAI,KAAK,GAAG,CAAC,EAAE;QACb,OAAO,KAAK,GAAG,CAAC,EAAE;YAChB,KAAK,IAAI,YAAG,CAAC;SACd;KACF;SAAM,IAAI,KAAK,GAAG,CAAC,EAAE;QACpB,OAAO,KAAK,GAAG,YAAG,EAAE;YAClB,KAAK,IAAI,YAAG,CAAC;SACd;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAXW,QAAA,WAAW,eAWtB;AAGF,SAAgB,SAAS,CAAC,CAAS,EAAE,GAAW,EAAE,GAAW;IAC3D,OAAO,CAAC,IAAA,eAAM,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAA,kBAAS,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACjE,CAAC;AAFD,8BAEC;AAED,SAAgB,gBAAgB,CAC9B,YAAmB,EACnB,UAA4B,EAC5B,IAAqB,EACrB,KAAqC;IAErC,MAAM,WAAW,GAAG,IAAA,4BAAa,kBAC/B,IAAI,IACD,KAAK,EACR,CAAC;IACH,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;IAClC,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC;IACpC,MAAM,KAAK,GAAG,IAAA,mBAAW,EAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IAE9E,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAG3B,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE;QACtC,EAAE,GAAG,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;KAChD;SAAM,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE;QAC3C,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC;KAChD;SAAM,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAC/B,EAAE,GAAG,KAAK,GAAG,GAAG,CAAC;KAClB;SAAM;QACL,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC;KACnB;IACD,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;IAErB,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE;QACtC,EAAE,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;KACpB;SAAM,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE;QAC3C,EAAE,GAAG,MAAM,GAAG,GAAG,CAAC;KACnB;SAAM,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAC/B,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC;KACjD;SAAM;QACL,EAAE,GAAG,CAAC,GAAG,GAAG,IAAA,mBAAW,EAAC,KAAK,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC;KAC5D;IACD,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;IAErB,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAClB,CAAC;AA9CD,4CA8CC","file":"util.js","sourcesContent":["import { getTextBounds } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport type { ITextGraphicAttribute } from '@visactor/vrender-core';\nimport { isGreater, isLess, tau, type Point } from '@visactor/vutils';\n\n// 和 vutils 版本不同\nexport const clampRadian = (angle: number = 0) => {\n  if (angle < 0) {\n    while (angle < 0) {\n      angle += tau;\n    }\n  } else if (angle > 0) {\n    while (angle > tau) {\n      angle -= tau;\n    }\n  }\n  return angle;\n};\n\n// 判断数值是否在制定范围内，包含误差\nexport function isInRange(a: number, min: number, max: number) {\n  return !isLess(a, min, 0, 1e-6) && !isGreater(a, max, 0, 1e-6);\n}\n\nexport function getLabelPosition(\n  tickPosition: Point,\n  tickVector: [number, number],\n  text: string | number,\n  style: Partial<ITextGraphicAttribute>\n) {\n  const labelBounds = getTextBounds({\n    text,\n    ...style\n  });\n  const width = labelBounds.width();\n  const height = labelBounds.height();\n  const angle = clampRadian(Math.atan2(tickVector[1], tickVector[0])) - Math.PI;\n\n  const PI_3_4 = (Math.PI * 3) / 4;\n  const PI_1_4 = Math.PI / 4;\n  const PI_1_2 = Math.PI / 2;\n\n  // x\n  const baseX = tickPosition.x;\n  let dx = 0;\n  if (isInRange(angle, -PI_3_4, -PI_1_4)) {\n    dx = ((angle + PI_3_4) / PI_1_2 - 0.5) * width;\n  } else if (isInRange(angle, PI_1_4, PI_3_4)) {\n    dx = (0.5 - (angle - PI_1_4) / PI_1_2) * width;\n  } else if (Math.cos(angle) >= 0) {\n    dx = width * 0.5;\n  } else {\n    dx = -width * 0.5;\n  }\n  const x = baseX - dx;\n\n  const baseY = tickPosition.y;\n  let dy = 0;\n  if (isInRange(angle, -PI_3_4, -PI_1_4)) {\n    dy = -height * 0.5;\n  } else if (isInRange(angle, PI_1_4, PI_3_4)) {\n    dy = height * 0.5;\n  } else if (Math.cos(angle) >= 0) {\n    dy = (0.5 - (PI_1_4 - angle) / PI_1_2) * height;\n  } else {\n    dy = (0.5 - clampRadian(angle - PI_3_4) / PI_1_2) * height;\n  }\n  const y = baseY - dy;\n\n  return { x, y };\n}\n"]}