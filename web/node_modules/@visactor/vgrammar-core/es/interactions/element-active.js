import { InteractionStateEnum } from "../graph/enums";

import { BaseInteraction } from "./base";

export class ElementActive extends BaseInteraction {
    constructor(view, options) {
        super(view, options), this.type = ElementActive.type, this.handleStart = e => {
            e.element && this._marks && this._marks.includes(e.element.mark) && e.element.addState(this.options.state);
        }, this.handleReset = e => {
            e.element && this._marks && this._marks.includes(e.element.mark) && e.element.removeState(this.options.state);
        }, this.options = Object.assign({}, ElementActive.defaultOptions, options), this._marks = view.getMarksBySelector(this.options.selector);
    }
    getEvents() {
        return [ {
            type: this.options.trigger,
            handler: this.handleStart
        }, {
            type: this.options.resetTrigger,
            handler: this.handleReset
        } ];
    }
}

ElementActive.type = "element-active", ElementActive.defaultOptions = {
    state: InteractionStateEnum.active,
    trigger: "pointerover",
    resetTrigger: "pointerout"
};
//# sourceMappingURL=element-active.js.map