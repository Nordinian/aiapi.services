'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["ref", "children", "className", "style", "fullFeaturedCodeBlock", "onDoubleClick", "animated", "enableLatex", "enableMermaid", "enableImageGallery", "enableCustomFootnotes", "componentProps", "allowHtml", "fontSize", "headerMultiple", "marginMultiple", "showFootnotes", "variant", "reactMarkdownProps", "lineHeight", "rehypePlugins", "remarkPlugins", "remarkPluginsAhead", "components", "customRender", "citations"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { cva } from 'class-variance-authority';
import { memo, useEffect, useMemo, useState } from 'react';
import { PreviewGroup } from "../Image";
import { MarkdownProvider } from "./components/MarkdownProvider";
import SyntaxMarkdown from "./SyntaxMarkdown";
import Typography from "./Typography";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
var Markdown = /*#__PURE__*/memo(function (_ref) {
  var ref = _ref.ref,
    children = _ref.children,
    className = _ref.className,
    style = _ref.style,
    fullFeaturedCodeBlock = _ref.fullFeaturedCodeBlock,
    onDoubleClick = _ref.onDoubleClick,
    animated = _ref.animated,
    _ref$enableLatex = _ref.enableLatex,
    enableLatex = _ref$enableLatex === void 0 ? true : _ref$enableLatex,
    _ref$enableMermaid = _ref.enableMermaid,
    enableMermaid = _ref$enableMermaid === void 0 ? true : _ref$enableMermaid,
    enableImageGallery = _ref.enableImageGallery,
    enableCustomFootnotes = _ref.enableCustomFootnotes,
    componentProps = _ref.componentProps,
    allowHtml = _ref.allowHtml,
    _ref$fontSize = _ref.fontSize,
    fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,
    _ref$headerMultiple = _ref.headerMultiple,
    headerMultiple = _ref$headerMultiple === void 0 ? 0.25 : _ref$headerMultiple,
    marginMultiple = _ref.marginMultiple,
    showFootnotes = _ref.showFootnotes,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'default' : _ref$variant,
    reactMarkdownProps = _ref.reactMarkdownProps,
    _ref$lineHeight = _ref.lineHeight,
    lineHeight = _ref$lineHeight === void 0 ? 1.6 : _ref$lineHeight,
    rehypePlugins = _ref.rehypePlugins,
    remarkPlugins = _ref.remarkPlugins,
    remarkPluginsAhead = _ref.remarkPluginsAhead,
    _ref$components = _ref.components,
    components = _ref$components === void 0 ? {} : _ref$components,
    customRender = _ref.customRender,
    citations = _ref.citations,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles(),
    cx = _useStyles.cx,
    styles = _useStyles.styles;
  // Add state to track delayed animated value
  var _useState = useState(animated),
    _useState2 = _slicedToArray(_useState, 2),
    delayedAnimated = _useState2[0],
    setDelayedAnimated = _useState2[1];

  // Watch for changes in animated prop
  useEffect(function () {
    // If animated changes from true to false, delay the update by 1 second
    if (animated === false && delayedAnimated === true) {
      var timer = setTimeout(function () {
        setDelayedAnimated(false);
      }, 1000);
      return function () {
        return clearTimeout(timer);
      };
    } else {
      // For any other changes, update immediately
      setDelayedAnimated(animated);
    }
  }, [animated, delayedAnimated]);

  // Style variant handling
  var variants = useMemo(function () {
    return cva(styles.root, {
      defaultVariants: {
        animated: false,
        enableLatex: true,
        variant: 'default'
      },
      /* eslint-disable sort-keys-fix/sort-keys-fix */
      variants: {
        variant: {
          default: null,
          chat: styles.chat
        },
        enableLatex: {
          true: styles.latex,
          false: null
        },
        animated: {
          true: styles.animated,
          false: null
        }
      }
      /* eslint-enable sort-keys-fix/sort-keys-fix */
    });
  }, [styles]);
  var defaultDOM = /*#__PURE__*/_jsx(SyntaxMarkdown, _objectSpread(_objectSpread({}, reactMarkdownProps), {}, {
    children: children
  }));
  return /*#__PURE__*/_jsx(PreviewGroup, {
    enable: enableImageGallery,
    children: /*#__PURE__*/_jsx(Typography, _objectSpread(_objectSpread({
      className: cx(variants({
        animated: delayedAnimated,
        enableLatex: enableLatex,
        variant: variant
      }), className),
      "data-code-type": "markdown",
      fontSize: fontSize,
      headerMultiple: headerMultiple,
      lineHeight: lineHeight,
      marginMultiple: marginMultiple || (variant === 'chat' ? 1 : 2),
      onDoubleClick: onDoubleClick,
      ref: ref,
      style: style
    }, rest), {}, {
      children: /*#__PURE__*/_jsx(MarkdownProvider, {
        config: {
          allowHtml: allowHtml,
          animated: delayedAnimated,
          citations: citations,
          componentProps: componentProps,
          components: components,
          enableCustomFootnotes: enableCustomFootnotes,
          enableLatex: enableLatex,
          enableMermaid: enableMermaid,
          fullFeaturedCodeBlock: fullFeaturedCodeBlock,
          rehypePlugins: rehypePlugins,
          remarkPlugins: remarkPlugins,
          remarkPluginsAhead: remarkPluginsAhead,
          showFootnotes: showFootnotes,
          variant: variant
        },
        children: customRender ? customRender(defaultDOM, {
          text: children || ''
        }) : defaultDOM
      })
    }))
  });
});
Markdown.displayName = 'Markdown';
export default Markdown;